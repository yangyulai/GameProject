// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_LoginDBData.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Msg_5fLoginDBData_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Msg_5fLoginDBData_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Msg_5fLoginDBData_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Msg_5fLoginDBData_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[29]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Msg_5fLoginDBData_2eproto;
class DBActivityData;
class DBActivityDataDefaultTypeInternal;
extern DBActivityDataDefaultTypeInternal _DBActivityData_default_instance_;
class DBActivityItem;
class DBActivityItemDefaultTypeInternal;
extern DBActivityItemDefaultTypeInternal _DBActivityItem_default_instance_;
class DBBagData;
class DBBagDataDefaultTypeInternal;
extern DBBagDataDefaultTypeInternal _DBBagData_default_instance_;
class DBBagItem;
class DBBagItemDefaultTypeInternal;
extern DBBagItemDefaultTypeInternal _DBBagItem_default_instance_;
class DBChapterItem;
class DBChapterItemDefaultTypeInternal;
extern DBChapterItemDefaultTypeInternal _DBChapterItem_default_instance_;
class DBCopyData;
class DBCopyDataDefaultTypeInternal;
extern DBCopyDataDefaultTypeInternal _DBCopyData_default_instance_;
class DBCopyItem;
class DBCopyItemDefaultTypeInternal;
extern DBCopyItemDefaultTypeInternal _DBCopyItem_default_instance_;
class DBCounterData;
class DBCounterDataDefaultTypeInternal;
extern DBCounterDataDefaultTypeInternal _DBCounterData_default_instance_;
class DBCounterItem;
class DBCounterItemDefaultTypeInternal;
extern DBCounterItemDefaultTypeInternal _DBCounterItem_default_instance_;
class DBEquipData;
class DBEquipDataDefaultTypeInternal;
extern DBEquipDataDefaultTypeInternal _DBEquipData_default_instance_;
class DBEquipItem;
class DBEquipItemDefaultTypeInternal;
extern DBEquipItemDefaultTypeInternal _DBEquipItem_default_instance_;
class DBFriendData;
class DBFriendDataDefaultTypeInternal;
extern DBFriendDataDefaultTypeInternal _DBFriendData_default_instance_;
class DBFriendItem;
class DBFriendItemDefaultTypeInternal;
extern DBFriendItemDefaultTypeInternal _DBFriendItem_default_instance_;
class DBGemData;
class DBGemDataDefaultTypeInternal;
extern DBGemDataDefaultTypeInternal _DBGemData_default_instance_;
class DBGemItem;
class DBGemItemDefaultTypeInternal;
extern DBGemItemDefaultTypeInternal _DBGemItem_default_instance_;
class DBMailData;
class DBMailDataDefaultTypeInternal;
extern DBMailDataDefaultTypeInternal _DBMailData_default_instance_;
class DBMailItem;
class DBMailItemDefaultTypeInternal;
extern DBMailItemDefaultTypeInternal _DBMailItem_default_instance_;
class DBMountData;
class DBMountDataDefaultTypeInternal;
extern DBMountDataDefaultTypeInternal _DBMountData_default_instance_;
class DBMountItem;
class DBMountItemDefaultTypeInternal;
extern DBMountItemDefaultTypeInternal _DBMountItem_default_instance_;
class DBPartnerData;
class DBPartnerDataDefaultTypeInternal;
extern DBPartnerDataDefaultTypeInternal _DBPartnerData_default_instance_;
class DBPartnerItem;
class DBPartnerItemDefaultTypeInternal;
extern DBPartnerItemDefaultTypeInternal _DBPartnerItem_default_instance_;
class DBPetData;
class DBPetDataDefaultTypeInternal;
extern DBPetDataDefaultTypeInternal _DBPetData_default_instance_;
class DBPetItem;
class DBPetItemDefaultTypeInternal;
extern DBPetItemDefaultTypeInternal _DBPetItem_default_instance_;
class DBRoleData;
class DBRoleDataDefaultTypeInternal;
extern DBRoleDataDefaultTypeInternal _DBRoleData_default_instance_;
class DBRoleLoginAck;
class DBRoleLoginAckDefaultTypeInternal;
extern DBRoleLoginAckDefaultTypeInternal _DBRoleLoginAck_default_instance_;
class DBSkillData;
class DBSkillDataDefaultTypeInternal;
extern DBSkillDataDefaultTypeInternal _DBSkillData_default_instance_;
class DBSkillItem;
class DBSkillItemDefaultTypeInternal;
extern DBSkillItemDefaultTypeInternal _DBSkillItem_default_instance_;
class DBTaskData;
class DBTaskDataDefaultTypeInternal;
extern DBTaskDataDefaultTypeInternal _DBTaskData_default_instance_;
class DBTaskItem;
class DBTaskItemDefaultTypeInternal;
extern DBTaskItemDefaultTypeInternal _DBTaskItem_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::DBActivityData* Arena::CreateMaybeMessage<::DBActivityData>(Arena*);
template<> ::DBActivityItem* Arena::CreateMaybeMessage<::DBActivityItem>(Arena*);
template<> ::DBBagData* Arena::CreateMaybeMessage<::DBBagData>(Arena*);
template<> ::DBBagItem* Arena::CreateMaybeMessage<::DBBagItem>(Arena*);
template<> ::DBChapterItem* Arena::CreateMaybeMessage<::DBChapterItem>(Arena*);
template<> ::DBCopyData* Arena::CreateMaybeMessage<::DBCopyData>(Arena*);
template<> ::DBCopyItem* Arena::CreateMaybeMessage<::DBCopyItem>(Arena*);
template<> ::DBCounterData* Arena::CreateMaybeMessage<::DBCounterData>(Arena*);
template<> ::DBCounterItem* Arena::CreateMaybeMessage<::DBCounterItem>(Arena*);
template<> ::DBEquipData* Arena::CreateMaybeMessage<::DBEquipData>(Arena*);
template<> ::DBEquipItem* Arena::CreateMaybeMessage<::DBEquipItem>(Arena*);
template<> ::DBFriendData* Arena::CreateMaybeMessage<::DBFriendData>(Arena*);
template<> ::DBFriendItem* Arena::CreateMaybeMessage<::DBFriendItem>(Arena*);
template<> ::DBGemData* Arena::CreateMaybeMessage<::DBGemData>(Arena*);
template<> ::DBGemItem* Arena::CreateMaybeMessage<::DBGemItem>(Arena*);
template<> ::DBMailData* Arena::CreateMaybeMessage<::DBMailData>(Arena*);
template<> ::DBMailItem* Arena::CreateMaybeMessage<::DBMailItem>(Arena*);
template<> ::DBMountData* Arena::CreateMaybeMessage<::DBMountData>(Arena*);
template<> ::DBMountItem* Arena::CreateMaybeMessage<::DBMountItem>(Arena*);
template<> ::DBPartnerData* Arena::CreateMaybeMessage<::DBPartnerData>(Arena*);
template<> ::DBPartnerItem* Arena::CreateMaybeMessage<::DBPartnerItem>(Arena*);
template<> ::DBPetData* Arena::CreateMaybeMessage<::DBPetData>(Arena*);
template<> ::DBPetItem* Arena::CreateMaybeMessage<::DBPetItem>(Arena*);
template<> ::DBRoleData* Arena::CreateMaybeMessage<::DBRoleData>(Arena*);
template<> ::DBRoleLoginAck* Arena::CreateMaybeMessage<::DBRoleLoginAck>(Arena*);
template<> ::DBSkillData* Arena::CreateMaybeMessage<::DBSkillData>(Arena*);
template<> ::DBSkillItem* Arena::CreateMaybeMessage<::DBSkillItem>(Arena*);
template<> ::DBTaskData* Arena::CreateMaybeMessage<::DBTaskData>(Arena*);
template<> ::DBTaskItem* Arena::CreateMaybeMessage<::DBTaskItem>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class DBRoleData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBRoleData) */ {
 public:
  inline DBRoleData() : DBRoleData(nullptr) {};
  virtual ~DBRoleData();

  DBRoleData(const DBRoleData& from);
  DBRoleData(DBRoleData&& from) noexcept
    : DBRoleData() {
    *this = ::std::move(from);
  }

  inline DBRoleData& operator=(const DBRoleData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBRoleData& operator=(DBRoleData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBRoleData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBRoleData* internal_default_instance() {
    return reinterpret_cast<const DBRoleData*>(
               &_DBRoleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DBRoleData& a, DBRoleData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBRoleData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBRoleData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBRoleData* New() const final {
    return CreateMaybeMessage<DBRoleData>(nullptr);
  }

  DBRoleData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBRoleData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBRoleData& from);
  void MergeFrom(const DBRoleData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBRoleData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBRoleData";
  }
  protected:
  explicit DBRoleData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 12,
    kActimeFieldNumber = 13,
    kNameFieldNumber = 6,
    kAccountIDFieldNumber = 1,
    kRoleIDFieldNumber = 2,
    kCarrerIDFieldNumber = 3,
    kLevelFieldNumber = 4,
    kExpFieldNumber = 5,
    kLangIDFieldNumber = 7,
    kVipLvlFieldNumber = 8,
    kFightValueFieldNumber = 10,
    kVipExpFieldNumber = 9,
    kCityCopyIDFieldNumber = 11,
    kCreateTimeFieldNumber = 14,
    kLogonTimeFieldNumber = 15,
    kLogoffTimeFieldNumber = 16,
    kGuildIDFieldNumber = 17,
    kChannelFieldNumber = 18,
    kOnlineTimeFieldNumber = 19,
  };
  // repeated int64 Action = 12;
  int action_size() const;
  private:
  int _internal_action_size() const;
  public:
  void clear_action();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_action(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_action() const;
  void _internal_add_action(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_action();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 action(int index) const;
  void set_action(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_action(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      action() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_action();

  // repeated int64 Actime = 13;
  int actime_size() const;
  private:
  int _internal_actime_size() const;
  public:
  void clear_actime();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_actime(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_actime() const;
  void _internal_add_actime(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_actime();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 actime(int index) const;
  void set_actime(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_actime(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      actime() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_actime();

  // string Name = 6;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint64 AccountID = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 RoleID = 2;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 CarrerID = 3;
  void clear_carrerid();
  ::PROTOBUF_NAMESPACE_ID::int32 carrerid() const;
  void set_carrerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_carrerid() const;
  void _internal_set_carrerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Level = 4;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 Exp = 5;
  void clear_exp();
  ::PROTOBUF_NAMESPACE_ID::int64 exp() const;
  void set_exp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_exp() const;
  void _internal_set_exp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 LangID = 7;
  void clear_langid();
  ::PROTOBUF_NAMESPACE_ID::int32 langid() const;
  void set_langid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_langid() const;
  void _internal_set_langid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 VipLvl = 8;
  void clear_viplvl();
  ::PROTOBUF_NAMESPACE_ID::int32 viplvl() const;
  void set_viplvl(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_viplvl() const;
  void _internal_set_viplvl(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 FightValue = 10;
  void clear_fightvalue();
  ::PROTOBUF_NAMESPACE_ID::int64 fightvalue() const;
  void set_fightvalue(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_fightvalue() const;
  void _internal_set_fightvalue(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 VipExp = 9;
  void clear_vipexp();
  ::PROTOBUF_NAMESPACE_ID::int32 vipexp() const;
  void set_vipexp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vipexp() const;
  void _internal_set_vipexp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CityCopyID = 11;
  void clear_citycopyid();
  ::PROTOBUF_NAMESPACE_ID::int32 citycopyid() const;
  void set_citycopyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_citycopyid() const;
  void _internal_set_citycopyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 CreateTime = 14;
  void clear_createtime();
  ::PROTOBUF_NAMESPACE_ID::uint64 createtime() const;
  void set_createtime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_createtime() const;
  void _internal_set_createtime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 LogonTime = 15;
  void clear_logontime();
  ::PROTOBUF_NAMESPACE_ID::uint64 logontime() const;
  void set_logontime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_logontime() const;
  void _internal_set_logontime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 LogoffTime = 16;
  void clear_logofftime();
  ::PROTOBUF_NAMESPACE_ID::uint64 logofftime() const;
  void set_logofftime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_logofftime() const;
  void _internal_set_logofftime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 GuildID = 17;
  void clear_guildid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid() const;
  void set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guildid() const;
  void _internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 Channel = 18;
  void clear_channel();
  ::PROTOBUF_NAMESPACE_ID::int32 channel() const;
  void set_channel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_channel() const;
  void _internal_set_channel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 OnlineTime = 19;
  void clear_onlinetime();
  ::PROTOBUF_NAMESPACE_ID::uint32 onlinetime() const;
  void set_onlinetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_onlinetime() const;
  void _internal_set_onlinetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:DBRoleData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > action_;
  mutable std::atomic<int> _action_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > actime_;
  mutable std::atomic<int> _actime_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::int32 carrerid_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::int64 exp_;
  ::PROTOBUF_NAMESPACE_ID::int32 langid_;
  ::PROTOBUF_NAMESPACE_ID::int32 viplvl_;
  ::PROTOBUF_NAMESPACE_ID::int64 fightvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 vipexp_;
  ::PROTOBUF_NAMESPACE_ID::int32 citycopyid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 createtime_;
  ::PROTOBUF_NAMESPACE_ID::uint64 logontime_;
  ::PROTOBUF_NAMESPACE_ID::uint64 logofftime_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid_;
  ::PROTOBUF_NAMESPACE_ID::int32 channel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 onlinetime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBBagItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBBagItem) */ {
 public:
  inline DBBagItem() : DBBagItem(nullptr) {};
  virtual ~DBBagItem();

  DBBagItem(const DBBagItem& from);
  DBBagItem(DBBagItem&& from) noexcept
    : DBBagItem() {
    *this = ::std::move(from);
  }

  inline DBBagItem& operator=(const DBBagItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBBagItem& operator=(DBBagItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBBagItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBBagItem* internal_default_instance() {
    return reinterpret_cast<const DBBagItem*>(
               &_DBBagItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DBBagItem& a, DBBagItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBBagItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBBagItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBBagItem* New() const final {
    return CreateMaybeMessage<DBBagItem>(nullptr);
  }

  DBBagItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBBagItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBBagItem& from);
  void MergeFrom(const DBBagItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBBagItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBBagItem";
  }
  protected:
  explicit DBBagItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuidFieldNumber = 1,
    kRoleIDFieldNumber = 2,
    kItemGuidFieldNumber = 3,
    kCountFieldNumber = 5,
    kItemIDFieldNumber = 4,
    kBindFieldNumber = 6,
    kStatusFieldNumber = 7,
  };
  // uint64 Guid = 1;
  void clear_guid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guid() const;
  void set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guid() const;
  void _internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 RoleID = 2;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 ItemGuid = 3;
  void clear_itemguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 itemguid() const;
  void set_itemguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_itemguid() const;
  void _internal_set_itemguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int64 Count = 5;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int64 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // uint32 ItemID = 4;
  void clear_itemid();
  ::PROTOBUF_NAMESPACE_ID::uint32 itemid() const;
  void set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_itemid() const;
  void _internal_set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 Bind = 6;
  void clear_bind();
  ::PROTOBUF_NAMESPACE_ID::int32 bind() const;
  void set_bind(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bind() const;
  void _internal_set_bind(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Status = 7;
  void clear_status();
  ::PROTOBUF_NAMESPACE_ID::int32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_status() const;
  void _internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:DBBagItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 itemguid_;
  ::PROTOBUF_NAMESPACE_ID::int64 count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 itemid_;
  ::PROTOBUF_NAMESPACE_ID::int32 bind_;
  ::PROTOBUF_NAMESPACE_ID::int32 status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBBagData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBBagData) */ {
 public:
  inline DBBagData() : DBBagData(nullptr) {};
  virtual ~DBBagData();

  DBBagData(const DBBagData& from);
  DBBagData(DBBagData&& from) noexcept
    : DBBagData() {
    *this = ::std::move(from);
  }

  inline DBBagData& operator=(const DBBagData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBBagData& operator=(DBBagData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBBagData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBBagData* internal_default_instance() {
    return reinterpret_cast<const DBBagData*>(
               &_DBBagData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DBBagData& a, DBBagData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBBagData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBBagData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBBagData* New() const final {
    return CreateMaybeMessage<DBBagData>(nullptr);
  }

  DBBagData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBBagData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBBagData& from);
  void MergeFrom(const DBBagData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBBagData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBBagData";
  }
  protected:
  explicit DBBagData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemListFieldNumber = 1,
  };
  // repeated .DBBagItem ItemList = 1;
  int itemlist_size() const;
  private:
  int _internal_itemlist_size() const;
  public:
  void clear_itemlist();
  ::DBBagItem* mutable_itemlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBBagItem >*
      mutable_itemlist();
  private:
  const ::DBBagItem& _internal_itemlist(int index) const;
  ::DBBagItem* _internal_add_itemlist();
  public:
  const ::DBBagItem& itemlist(int index) const;
  ::DBBagItem* add_itemlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBBagItem >&
      itemlist() const;

  // @@protoc_insertion_point(class_scope:DBBagData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBBagItem > itemlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBCopyItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBCopyItem) */ {
 public:
  inline DBCopyItem() : DBCopyItem(nullptr) {};
  virtual ~DBCopyItem();

  DBCopyItem(const DBCopyItem& from);
  DBCopyItem(DBCopyItem&& from) noexcept
    : DBCopyItem() {
    *this = ::std::move(from);
  }

  inline DBCopyItem& operator=(const DBCopyItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBCopyItem& operator=(DBCopyItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBCopyItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBCopyItem* internal_default_instance() {
    return reinterpret_cast<const DBCopyItem*>(
               &_DBCopyItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DBCopyItem& a, DBCopyItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBCopyItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBCopyItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBCopyItem* New() const final {
    return CreateMaybeMessage<DBCopyItem>(nullptr);
  }

  DBCopyItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBCopyItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBCopyItem& from);
  void MergeFrom(const DBCopyItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBCopyItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBCopyItem";
  }
  protected:
  explicit DBCopyItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kCopyIDFieldNumber = 2,
    kStarNumFieldNumber = 3,
    kBattleCntFieldNumber = 4,
    kResetCntFieldNumber = 5,
    kBattleTimeFieldNumber = 6,
    kResetTimeFieldNumber = 7,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 CopyID = 2;
  void clear_copyid();
  ::PROTOBUF_NAMESPACE_ID::uint32 copyid() const;
  void set_copyid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_copyid() const;
  void _internal_set_copyid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 StarNum = 3;
  void clear_starnum();
  ::PROTOBUF_NAMESPACE_ID::int32 starnum() const;
  void set_starnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_starnum() const;
  void _internal_set_starnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 BattleCnt = 4;
  void clear_battlecnt();
  ::PROTOBUF_NAMESPACE_ID::int32 battlecnt() const;
  void set_battlecnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_battlecnt() const;
  void _internal_set_battlecnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ResetCnt = 5;
  void clear_resetcnt();
  ::PROTOBUF_NAMESPACE_ID::int32 resetcnt() const;
  void set_resetcnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_resetcnt() const;
  void _internal_set_resetcnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 BattleTime = 6;
  void clear_battletime();
  ::PROTOBUF_NAMESPACE_ID::uint64 battletime() const;
  void set_battletime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_battletime() const;
  void _internal_set_battletime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 ResetTime = 7;
  void clear_resettime();
  ::PROTOBUF_NAMESPACE_ID::uint64 resettime() const;
  void set_resettime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_resettime() const;
  void _internal_set_resettime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:DBCopyItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 copyid_;
  ::PROTOBUF_NAMESPACE_ID::int32 starnum_;
  ::PROTOBUF_NAMESPACE_ID::int32 battlecnt_;
  ::PROTOBUF_NAMESPACE_ID::int32 resetcnt_;
  ::PROTOBUF_NAMESPACE_ID::uint64 battletime_;
  ::PROTOBUF_NAMESPACE_ID::uint64 resettime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBChapterItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBChapterItem) */ {
 public:
  inline DBChapterItem() : DBChapterItem(nullptr) {};
  virtual ~DBChapterItem();

  DBChapterItem(const DBChapterItem& from);
  DBChapterItem(DBChapterItem&& from) noexcept
    : DBChapterItem() {
    *this = ::std::move(from);
  }

  inline DBChapterItem& operator=(const DBChapterItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBChapterItem& operator=(DBChapterItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBChapterItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBChapterItem* internal_default_instance() {
    return reinterpret_cast<const DBChapterItem*>(
               &_DBChapterItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DBChapterItem& a, DBChapterItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBChapterItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBChapterItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBChapterItem* New() const final {
    return CreateMaybeMessage<DBChapterItem>(nullptr);
  }

  DBChapterItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBChapterItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBChapterItem& from);
  void MergeFrom(const DBChapterItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBChapterItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBChapterItem";
  }
  protected:
  explicit DBChapterItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kCopyTypeFieldNumber = 2,
    kChapterIDFieldNumber = 3,
    kStarAwardFieldNumber = 4,
    kSceneAwardFieldNumber = 5,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 CopyType = 2;
  void clear_copytype();
  ::PROTOBUF_NAMESPACE_ID::uint32 copytype() const;
  void set_copytype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_copytype() const;
  void _internal_set_copytype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ChapterID = 3;
  void clear_chapterid();
  ::PROTOBUF_NAMESPACE_ID::uint32 chapterid() const;
  void set_chapterid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chapterid() const;
  void _internal_set_chapterid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 StarAward = 4;
  void clear_staraward();
  ::PROTOBUF_NAMESPACE_ID::uint32 staraward() const;
  void set_staraward(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_staraward() const;
  void _internal_set_staraward(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 SceneAward = 5;
  void clear_sceneaward();
  ::PROTOBUF_NAMESPACE_ID::uint32 sceneaward() const;
  void set_sceneaward(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sceneaward() const;
  void _internal_set_sceneaward(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:DBChapterItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 copytype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chapterid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 staraward_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sceneaward_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBCopyData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBCopyData) */ {
 public:
  inline DBCopyData() : DBCopyData(nullptr) {};
  virtual ~DBCopyData();

  DBCopyData(const DBCopyData& from);
  DBCopyData(DBCopyData&& from) noexcept
    : DBCopyData() {
    *this = ::std::move(from);
  }

  inline DBCopyData& operator=(const DBCopyData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBCopyData& operator=(DBCopyData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBCopyData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBCopyData* internal_default_instance() {
    return reinterpret_cast<const DBCopyData*>(
               &_DBCopyData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DBCopyData& a, DBCopyData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBCopyData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBCopyData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBCopyData* New() const final {
    return CreateMaybeMessage<DBCopyData>(nullptr);
  }

  DBCopyData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBCopyData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBCopyData& from);
  void MergeFrom(const DBCopyData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBCopyData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBCopyData";
  }
  protected:
  explicit DBCopyData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCopyListFieldNumber = 1,
    kChapterListFieldNumber = 2,
  };
  // repeated .DBCopyItem CopyList = 1;
  int copylist_size() const;
  private:
  int _internal_copylist_size() const;
  public:
  void clear_copylist();
  ::DBCopyItem* mutable_copylist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBCopyItem >*
      mutable_copylist();
  private:
  const ::DBCopyItem& _internal_copylist(int index) const;
  ::DBCopyItem* _internal_add_copylist();
  public:
  const ::DBCopyItem& copylist(int index) const;
  ::DBCopyItem* add_copylist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBCopyItem >&
      copylist() const;

  // repeated .DBChapterItem ChapterList = 2;
  int chapterlist_size() const;
  private:
  int _internal_chapterlist_size() const;
  public:
  void clear_chapterlist();
  ::DBChapterItem* mutable_chapterlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBChapterItem >*
      mutable_chapterlist();
  private:
  const ::DBChapterItem& _internal_chapterlist(int index) const;
  ::DBChapterItem* _internal_add_chapterlist();
  public:
  const ::DBChapterItem& chapterlist(int index) const;
  ::DBChapterItem* add_chapterlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBChapterItem >&
      chapterlist() const;

  // @@protoc_insertion_point(class_scope:DBCopyData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBCopyItem > copylist_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBChapterItem > chapterlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBEquipItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBEquipItem) */ {
 public:
  inline DBEquipItem() : DBEquipItem(nullptr) {};
  virtual ~DBEquipItem();

  DBEquipItem(const DBEquipItem& from);
  DBEquipItem(DBEquipItem&& from) noexcept
    : DBEquipItem() {
    *this = ::std::move(from);
  }

  inline DBEquipItem& operator=(const DBEquipItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBEquipItem& operator=(DBEquipItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBEquipItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBEquipItem* internal_default_instance() {
    return reinterpret_cast<const DBEquipItem*>(
               &_DBEquipItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DBEquipItem& a, DBEquipItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBEquipItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBEquipItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBEquipItem* New() const final {
    return CreateMaybeMessage<DBEquipItem>(nullptr);
  }

  DBEquipItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBEquipItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBEquipItem& from);
  void MergeFrom(const DBEquipItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBEquipItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBEquipItem";
  }
  protected:
  explicit DBEquipItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kGuidFieldNumber = 2,
    kEquipIDFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kRefineExpFieldNumber = 7,
    kStarExpFieldNumber = 8,
    kIsUsingFieldNumber = 9,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 Guid = 2;
  void clear_guid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guid() const;
  void set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guid() const;
  void _internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 EquipID = 3;
  void clear_equipid();
  ::PROTOBUF_NAMESPACE_ID::int32 equipid() const;
  void set_equipid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_equipid() const;
  void _internal_set_equipid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 StrengthLvl = 4;
  void clear_strengthlvl();
  ::PROTOBUF_NAMESPACE_ID::int32 strengthlvl() const;
  void set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_strengthlvl() const;
  void _internal_set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 RefineLevel = 5;
  void clear_refinelevel();
  ::PROTOBUF_NAMESPACE_ID::int32 refinelevel() const;
  void set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_refinelevel() const;
  void _internal_set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 StarLevel = 6;
  void clear_starlevel();
  ::PROTOBUF_NAMESPACE_ID::int32 starlevel() const;
  void set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_starlevel() const;
  void _internal_set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 RefineExp = 7;
  void clear_refineexp();
  ::PROTOBUF_NAMESPACE_ID::int32 refineexp() const;
  void set_refineexp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_refineexp() const;
  void _internal_set_refineexp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 StarExp = 8;
  void clear_starexp();
  ::PROTOBUF_NAMESPACE_ID::int32 starexp() const;
  void set_starexp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_starexp() const;
  void _internal_set_starexp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool IsUsing = 9;
  void clear_isusing();
  bool isusing() const;
  void set_isusing(bool value);
  private:
  bool _internal_isusing() const;
  void _internal_set_isusing(bool value);
  public:

  // @@protoc_insertion_point(class_scope:DBEquipItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guid_;
  ::PROTOBUF_NAMESPACE_ID::int32 equipid_;
  ::PROTOBUF_NAMESPACE_ID::int32 strengthlvl_;
  ::PROTOBUF_NAMESPACE_ID::int32 refinelevel_;
  ::PROTOBUF_NAMESPACE_ID::int32 starlevel_;
  ::PROTOBUF_NAMESPACE_ID::int32 refineexp_;
  ::PROTOBUF_NAMESPACE_ID::int32 starexp_;
  bool isusing_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBEquipData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBEquipData) */ {
 public:
  inline DBEquipData() : DBEquipData(nullptr) {};
  virtual ~DBEquipData();

  DBEquipData(const DBEquipData& from);
  DBEquipData(DBEquipData&& from) noexcept
    : DBEquipData() {
    *this = ::std::move(from);
  }

  inline DBEquipData& operator=(const DBEquipData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBEquipData& operator=(DBEquipData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBEquipData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBEquipData* internal_default_instance() {
    return reinterpret_cast<const DBEquipData*>(
               &_DBEquipData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DBEquipData& a, DBEquipData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBEquipData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBEquipData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBEquipData* New() const final {
    return CreateMaybeMessage<DBEquipData>(nullptr);
  }

  DBEquipData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBEquipData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBEquipData& from);
  void MergeFrom(const DBEquipData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBEquipData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBEquipData";
  }
  protected:
  explicit DBEquipData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEquipListFieldNumber = 1,
  };
  // repeated .DBEquipItem EquipList = 1;
  int equiplist_size() const;
  private:
  int _internal_equiplist_size() const;
  public:
  void clear_equiplist();
  ::DBEquipItem* mutable_equiplist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBEquipItem >*
      mutable_equiplist();
  private:
  const ::DBEquipItem& _internal_equiplist(int index) const;
  ::DBEquipItem* _internal_add_equiplist();
  public:
  const ::DBEquipItem& equiplist(int index) const;
  ::DBEquipItem* add_equiplist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBEquipItem >&
      equiplist() const;

  // @@protoc_insertion_point(class_scope:DBEquipData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBEquipItem > equiplist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBGemItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBGemItem) */ {
 public:
  inline DBGemItem() : DBGemItem(nullptr) {};
  virtual ~DBGemItem();

  DBGemItem(const DBGemItem& from);
  DBGemItem(DBGemItem&& from) noexcept
    : DBGemItem() {
    *this = ::std::move(from);
  }

  inline DBGemItem& operator=(const DBGemItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBGemItem& operator=(DBGemItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBGemItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBGemItem* internal_default_instance() {
    return reinterpret_cast<const DBGemItem*>(
               &_DBGemItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DBGemItem& a, DBGemItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBGemItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBGemItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBGemItem* New() const final {
    return CreateMaybeMessage<DBGemItem>(nullptr);
  }

  DBGemItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBGemItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBGemItem& from);
  void MergeFrom(const DBGemItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBGemItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBGemItem";
  }
  protected:
  explicit DBGemItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kGuidFieldNumber = 2,
    kGemIDFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kRefineExpFieldNumber = 7,
    kStarExpFieldNumber = 8,
    kPosFieldNumber = 9,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 Guid = 2;
  void clear_guid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guid() const;
  void set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guid() const;
  void _internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 GemID = 3;
  void clear_gemid();
  ::PROTOBUF_NAMESPACE_ID::int32 gemid() const;
  void set_gemid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gemid() const;
  void _internal_set_gemid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 StrengthLvl = 4;
  void clear_strengthlvl();
  ::PROTOBUF_NAMESPACE_ID::int32 strengthlvl() const;
  void set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_strengthlvl() const;
  void _internal_set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 RefineLevel = 5;
  void clear_refinelevel();
  ::PROTOBUF_NAMESPACE_ID::int32 refinelevel() const;
  void set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_refinelevel() const;
  void _internal_set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 StarLevel = 6;
  void clear_starlevel();
  ::PROTOBUF_NAMESPACE_ID::int32 starlevel() const;
  void set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_starlevel() const;
  void _internal_set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 RefineExp = 7;
  void clear_refineexp();
  ::PROTOBUF_NAMESPACE_ID::int32 refineexp() const;
  void set_refineexp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_refineexp() const;
  void _internal_set_refineexp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 StarExp = 8;
  void clear_starexp();
  ::PROTOBUF_NAMESPACE_ID::int32 starexp() const;
  void set_starexp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_starexp() const;
  void _internal_set_starexp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Pos = 9;
  void clear_pos();
  ::PROTOBUF_NAMESPACE_ID::int32 pos() const;
  void set_pos(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pos() const;
  void _internal_set_pos(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:DBGemItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guid_;
  ::PROTOBUF_NAMESPACE_ID::int32 gemid_;
  ::PROTOBUF_NAMESPACE_ID::int32 strengthlvl_;
  ::PROTOBUF_NAMESPACE_ID::int32 refinelevel_;
  ::PROTOBUF_NAMESPACE_ID::int32 starlevel_;
  ::PROTOBUF_NAMESPACE_ID::int32 refineexp_;
  ::PROTOBUF_NAMESPACE_ID::int32 starexp_;
  ::PROTOBUF_NAMESPACE_ID::int32 pos_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBGemData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBGemData) */ {
 public:
  inline DBGemData() : DBGemData(nullptr) {};
  virtual ~DBGemData();

  DBGemData(const DBGemData& from);
  DBGemData(DBGemData&& from) noexcept
    : DBGemData() {
    *this = ::std::move(from);
  }

  inline DBGemData& operator=(const DBGemData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBGemData& operator=(DBGemData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBGemData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBGemData* internal_default_instance() {
    return reinterpret_cast<const DBGemData*>(
               &_DBGemData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DBGemData& a, DBGemData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBGemData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBGemData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBGemData* New() const final {
    return CreateMaybeMessage<DBGemData>(nullptr);
  }

  DBGemData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBGemData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBGemData& from);
  void MergeFrom(const DBGemData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBGemData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBGemData";
  }
  protected:
  explicit DBGemData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGemListFieldNumber = 1,
  };
  // repeated .DBGemItem GemList = 1;
  int gemlist_size() const;
  private:
  int _internal_gemlist_size() const;
  public:
  void clear_gemlist();
  ::DBGemItem* mutable_gemlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBGemItem >*
      mutable_gemlist();
  private:
  const ::DBGemItem& _internal_gemlist(int index) const;
  ::DBGemItem* _internal_add_gemlist();
  public:
  const ::DBGemItem& gemlist(int index) const;
  ::DBGemItem* add_gemlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBGemItem >&
      gemlist() const;

  // @@protoc_insertion_point(class_scope:DBGemData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBGemItem > gemlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBSkillItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBSkillItem) */ {
 public:
  inline DBSkillItem() : DBSkillItem(nullptr) {};
  virtual ~DBSkillItem();

  DBSkillItem(const DBSkillItem& from);
  DBSkillItem(DBSkillItem&& from) noexcept
    : DBSkillItem() {
    *this = ::std::move(from);
  }

  inline DBSkillItem& operator=(const DBSkillItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBSkillItem& operator=(DBSkillItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBSkillItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBSkillItem* internal_default_instance() {
    return reinterpret_cast<const DBSkillItem*>(
               &_DBSkillItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(DBSkillItem& a, DBSkillItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBSkillItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBSkillItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBSkillItem* New() const final {
    return CreateMaybeMessage<DBSkillItem>(nullptr);
  }

  DBSkillItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBSkillItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBSkillItem& from);
  void MergeFrom(const DBSkillItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBSkillItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBSkillItem";
  }
  protected:
  explicit DBSkillItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kSkillIDFieldNumber = 2,
    kLevelFieldNumber = 3,
    kKeyPosFieldNumber = 4,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 SkillID = 2;
  void clear_skillid();
  ::PROTOBUF_NAMESPACE_ID::uint32 skillid() const;
  void set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skillid() const;
  void _internal_set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 Level = 3;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 KeyPos = 4;
  void clear_keypos();
  ::PROTOBUF_NAMESPACE_ID::int32 keypos() const;
  void set_keypos(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_keypos() const;
  void _internal_set_keypos(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:DBSkillItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skillid_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::int32 keypos_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBSkillData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBSkillData) */ {
 public:
  inline DBSkillData() : DBSkillData(nullptr) {};
  virtual ~DBSkillData();

  DBSkillData(const DBSkillData& from);
  DBSkillData(DBSkillData&& from) noexcept
    : DBSkillData() {
    *this = ::std::move(from);
  }

  inline DBSkillData& operator=(const DBSkillData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBSkillData& operator=(DBSkillData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBSkillData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBSkillData* internal_default_instance() {
    return reinterpret_cast<const DBSkillData*>(
               &_DBSkillData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(DBSkillData& a, DBSkillData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBSkillData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBSkillData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBSkillData* New() const final {
    return CreateMaybeMessage<DBSkillData>(nullptr);
  }

  DBSkillData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBSkillData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBSkillData& from);
  void MergeFrom(const DBSkillData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBSkillData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBSkillData";
  }
  protected:
  explicit DBSkillData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSkillListFieldNumber = 1,
  };
  // repeated .DBSkillItem SkillList = 1;
  int skilllist_size() const;
  private:
  int _internal_skilllist_size() const;
  public:
  void clear_skilllist();
  ::DBSkillItem* mutable_skilllist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBSkillItem >*
      mutable_skilllist();
  private:
  const ::DBSkillItem& _internal_skilllist(int index) const;
  ::DBSkillItem* _internal_add_skilllist();
  public:
  const ::DBSkillItem& skilllist(int index) const;
  ::DBSkillItem* add_skilllist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBSkillItem >&
      skilllist() const;

  // @@protoc_insertion_point(class_scope:DBSkillData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBSkillItem > skilllist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBPetItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBPetItem) */ {
 public:
  inline DBPetItem() : DBPetItem(nullptr) {};
  virtual ~DBPetItem();

  DBPetItem(const DBPetItem& from);
  DBPetItem(DBPetItem&& from) noexcept
    : DBPetItem() {
    *this = ::std::move(from);
  }

  inline DBPetItem& operator=(const DBPetItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBPetItem& operator=(DBPetItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBPetItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBPetItem* internal_default_instance() {
    return reinterpret_cast<const DBPetItem*>(
               &_DBPetItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(DBPetItem& a, DBPetItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBPetItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBPetItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBPetItem* New() const final {
    return CreateMaybeMessage<DBPetItem>(nullptr);
  }

  DBPetItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBPetItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBPetItem& from);
  void MergeFrom(const DBPetItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBPetItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBPetItem";
  }
  protected:
  explicit DBPetItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kGuidFieldNumber = 2,
    kPetIDFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kIsUsingFieldNumber = 7,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 Guid = 2;
  void clear_guid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guid() const;
  void set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guid() const;
  void _internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 PetID = 3;
  void clear_petid();
  ::PROTOBUF_NAMESPACE_ID::int32 petid() const;
  void set_petid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_petid() const;
  void _internal_set_petid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 StrengthLvl = 4;
  void clear_strengthlvl();
  ::PROTOBUF_NAMESPACE_ID::int32 strengthlvl() const;
  void set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_strengthlvl() const;
  void _internal_set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 RefineLevel = 5;
  void clear_refinelevel();
  ::PROTOBUF_NAMESPACE_ID::int32 refinelevel() const;
  void set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_refinelevel() const;
  void _internal_set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 StarLevel = 6;
  void clear_starlevel();
  ::PROTOBUF_NAMESPACE_ID::int32 starlevel() const;
  void set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_starlevel() const;
  void _internal_set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool IsUsing = 7;
  void clear_isusing();
  bool isusing() const;
  void set_isusing(bool value);
  private:
  bool _internal_isusing() const;
  void _internal_set_isusing(bool value);
  public:

  // @@protoc_insertion_point(class_scope:DBPetItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guid_;
  ::PROTOBUF_NAMESPACE_ID::int32 petid_;
  ::PROTOBUF_NAMESPACE_ID::int32 strengthlvl_;
  ::PROTOBUF_NAMESPACE_ID::int32 refinelevel_;
  ::PROTOBUF_NAMESPACE_ID::int32 starlevel_;
  bool isusing_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBPetData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBPetData) */ {
 public:
  inline DBPetData() : DBPetData(nullptr) {};
  virtual ~DBPetData();

  DBPetData(const DBPetData& from);
  DBPetData(DBPetData&& from) noexcept
    : DBPetData() {
    *this = ::std::move(from);
  }

  inline DBPetData& operator=(const DBPetData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBPetData& operator=(DBPetData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBPetData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBPetData* internal_default_instance() {
    return reinterpret_cast<const DBPetData*>(
               &_DBPetData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(DBPetData& a, DBPetData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBPetData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBPetData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBPetData* New() const final {
    return CreateMaybeMessage<DBPetData>(nullptr);
  }

  DBPetData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBPetData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBPetData& from);
  void MergeFrom(const DBPetData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBPetData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBPetData";
  }
  protected:
  explicit DBPetData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPetListFieldNumber = 1,
  };
  // repeated .DBPetItem PetList = 1;
  int petlist_size() const;
  private:
  int _internal_petlist_size() const;
  public:
  void clear_petlist();
  ::DBPetItem* mutable_petlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBPetItem >*
      mutable_petlist();
  private:
  const ::DBPetItem& _internal_petlist(int index) const;
  ::DBPetItem* _internal_add_petlist();
  public:
  const ::DBPetItem& petlist(int index) const;
  ::DBPetItem* add_petlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBPetItem >&
      petlist() const;

  // @@protoc_insertion_point(class_scope:DBPetData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBPetItem > petlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBMountItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBMountItem) */ {
 public:
  inline DBMountItem() : DBMountItem(nullptr) {};
  virtual ~DBMountItem();

  DBMountItem(const DBMountItem& from);
  DBMountItem(DBMountItem&& from) noexcept
    : DBMountItem() {
    *this = ::std::move(from);
  }

  inline DBMountItem& operator=(const DBMountItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBMountItem& operator=(DBMountItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBMountItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBMountItem* internal_default_instance() {
    return reinterpret_cast<const DBMountItem*>(
               &_DBMountItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(DBMountItem& a, DBMountItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBMountItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBMountItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBMountItem* New() const final {
    return CreateMaybeMessage<DBMountItem>(nullptr);
  }

  DBMountItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBMountItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBMountItem& from);
  void MergeFrom(const DBMountItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBMountItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBMountItem";
  }
  protected:
  explicit DBMountItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kGuidFieldNumber = 2,
    kMountIDFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kIsUsingFieldNumber = 7,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 Guid = 2;
  void clear_guid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guid() const;
  void set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guid() const;
  void _internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 MountID = 3;
  void clear_mountid();
  ::PROTOBUF_NAMESPACE_ID::int32 mountid() const;
  void set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mountid() const;
  void _internal_set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 StrengthLvl = 4;
  void clear_strengthlvl();
  ::PROTOBUF_NAMESPACE_ID::int32 strengthlvl() const;
  void set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_strengthlvl() const;
  void _internal_set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 RefineLevel = 5;
  void clear_refinelevel();
  ::PROTOBUF_NAMESPACE_ID::int32 refinelevel() const;
  void set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_refinelevel() const;
  void _internal_set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 StarLevel = 6;
  void clear_starlevel();
  ::PROTOBUF_NAMESPACE_ID::int32 starlevel() const;
  void set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_starlevel() const;
  void _internal_set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool IsUsing = 7;
  void clear_isusing();
  bool isusing() const;
  void set_isusing(bool value);
  private:
  bool _internal_isusing() const;
  void _internal_set_isusing(bool value);
  public:

  // @@protoc_insertion_point(class_scope:DBMountItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guid_;
  ::PROTOBUF_NAMESPACE_ID::int32 mountid_;
  ::PROTOBUF_NAMESPACE_ID::int32 strengthlvl_;
  ::PROTOBUF_NAMESPACE_ID::int32 refinelevel_;
  ::PROTOBUF_NAMESPACE_ID::int32 starlevel_;
  bool isusing_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBMountData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBMountData) */ {
 public:
  inline DBMountData() : DBMountData(nullptr) {};
  virtual ~DBMountData();

  DBMountData(const DBMountData& from);
  DBMountData(DBMountData&& from) noexcept
    : DBMountData() {
    *this = ::std::move(from);
  }

  inline DBMountData& operator=(const DBMountData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBMountData& operator=(DBMountData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBMountData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBMountData* internal_default_instance() {
    return reinterpret_cast<const DBMountData*>(
               &_DBMountData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(DBMountData& a, DBMountData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBMountData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBMountData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBMountData* New() const final {
    return CreateMaybeMessage<DBMountData>(nullptr);
  }

  DBMountData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBMountData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBMountData& from);
  void MergeFrom(const DBMountData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBMountData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBMountData";
  }
  protected:
  explicit DBMountData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMountListFieldNumber = 1,
  };
  // repeated .DBMountItem MountList = 1;
  int mountlist_size() const;
  private:
  int _internal_mountlist_size() const;
  public:
  void clear_mountlist();
  ::DBMountItem* mutable_mountlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBMountItem >*
      mutable_mountlist();
  private:
  const ::DBMountItem& _internal_mountlist(int index) const;
  ::DBMountItem* _internal_add_mountlist();
  public:
  const ::DBMountItem& mountlist(int index) const;
  ::DBMountItem* add_mountlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBMountItem >&
      mountlist() const;

  // @@protoc_insertion_point(class_scope:DBMountData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBMountItem > mountlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBPartnerItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBPartnerItem) */ {
 public:
  inline DBPartnerItem() : DBPartnerItem(nullptr) {};
  virtual ~DBPartnerItem();

  DBPartnerItem(const DBPartnerItem& from);
  DBPartnerItem(DBPartnerItem&& from) noexcept
    : DBPartnerItem() {
    *this = ::std::move(from);
  }

  inline DBPartnerItem& operator=(const DBPartnerItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBPartnerItem& operator=(DBPartnerItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBPartnerItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBPartnerItem* internal_default_instance() {
    return reinterpret_cast<const DBPartnerItem*>(
               &_DBPartnerItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(DBPartnerItem& a, DBPartnerItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBPartnerItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBPartnerItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBPartnerItem* New() const final {
    return CreateMaybeMessage<DBPartnerItem>(nullptr);
  }

  DBPartnerItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBPartnerItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBPartnerItem& from);
  void MergeFrom(const DBPartnerItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBPartnerItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBPartnerItem";
  }
  protected:
  explicit DBPartnerItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kGuidFieldNumber = 2,
    kPartnerIDFieldNumber = 3,
    kStrengthLvlFieldNumber = 4,
    kRefineLevelFieldNumber = 5,
    kStarLevelFieldNumber = 6,
    kSetPosFieldNumber = 7,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 Guid = 2;
  void clear_guid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guid() const;
  void set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guid() const;
  void _internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 PartnerID = 3;
  void clear_partnerid();
  ::PROTOBUF_NAMESPACE_ID::int32 partnerid() const;
  void set_partnerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_partnerid() const;
  void _internal_set_partnerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 StrengthLvl = 4;
  void clear_strengthlvl();
  ::PROTOBUF_NAMESPACE_ID::int32 strengthlvl() const;
  void set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_strengthlvl() const;
  void _internal_set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 RefineLevel = 5;
  void clear_refinelevel();
  ::PROTOBUF_NAMESPACE_ID::int32 refinelevel() const;
  void set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_refinelevel() const;
  void _internal_set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 StarLevel = 6;
  void clear_starlevel();
  ::PROTOBUF_NAMESPACE_ID::int32 starlevel() const;
  void set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_starlevel() const;
  void _internal_set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 SetPos = 7;
  void clear_setpos();
  ::PROTOBUF_NAMESPACE_ID::int32 setpos() const;
  void set_setpos(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_setpos() const;
  void _internal_set_setpos(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:DBPartnerItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guid_;
  ::PROTOBUF_NAMESPACE_ID::int32 partnerid_;
  ::PROTOBUF_NAMESPACE_ID::int32 strengthlvl_;
  ::PROTOBUF_NAMESPACE_ID::int32 refinelevel_;
  ::PROTOBUF_NAMESPACE_ID::int32 starlevel_;
  ::PROTOBUF_NAMESPACE_ID::int32 setpos_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBPartnerData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBPartnerData) */ {
 public:
  inline DBPartnerData() : DBPartnerData(nullptr) {};
  virtual ~DBPartnerData();

  DBPartnerData(const DBPartnerData& from);
  DBPartnerData(DBPartnerData&& from) noexcept
    : DBPartnerData() {
    *this = ::std::move(from);
  }

  inline DBPartnerData& operator=(const DBPartnerData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBPartnerData& operator=(DBPartnerData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBPartnerData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBPartnerData* internal_default_instance() {
    return reinterpret_cast<const DBPartnerData*>(
               &_DBPartnerData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(DBPartnerData& a, DBPartnerData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBPartnerData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBPartnerData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBPartnerData* New() const final {
    return CreateMaybeMessage<DBPartnerData>(nullptr);
  }

  DBPartnerData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBPartnerData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBPartnerData& from);
  void MergeFrom(const DBPartnerData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBPartnerData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBPartnerData";
  }
  protected:
  explicit DBPartnerData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPartnerListFieldNumber = 1,
  };
  // repeated .DBPartnerItem PartnerList = 1;
  int partnerlist_size() const;
  private:
  int _internal_partnerlist_size() const;
  public:
  void clear_partnerlist();
  ::DBPartnerItem* mutable_partnerlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBPartnerItem >*
      mutable_partnerlist();
  private:
  const ::DBPartnerItem& _internal_partnerlist(int index) const;
  ::DBPartnerItem* _internal_add_partnerlist();
  public:
  const ::DBPartnerItem& partnerlist(int index) const;
  ::DBPartnerItem* add_partnerlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBPartnerItem >&
      partnerlist() const;

  // @@protoc_insertion_point(class_scope:DBPartnerData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBPartnerItem > partnerlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBTaskItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBTaskItem) */ {
 public:
  inline DBTaskItem() : DBTaskItem(nullptr) {};
  virtual ~DBTaskItem();

  DBTaskItem(const DBTaskItem& from);
  DBTaskItem(DBTaskItem&& from) noexcept
    : DBTaskItem() {
    *this = ::std::move(from);
  }

  inline DBTaskItem& operator=(const DBTaskItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBTaskItem& operator=(DBTaskItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBTaskItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBTaskItem* internal_default_instance() {
    return reinterpret_cast<const DBTaskItem*>(
               &_DBTaskItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(DBTaskItem& a, DBTaskItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBTaskItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBTaskItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBTaskItem* New() const final {
    return CreateMaybeMessage<DBTaskItem>(nullptr);
  }

  DBTaskItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBTaskItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBTaskItem& from);
  void MergeFrom(const DBTaskItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBTaskItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBTaskItem";
  }
  protected:
  explicit DBTaskItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kTaskIDFieldNumber = 2,
    kStatusFieldNumber = 3,
    kProgressFieldNumber = 4,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 TaskID = 2;
  void clear_taskid();
  ::PROTOBUF_NAMESPACE_ID::uint32 taskid() const;
  void set_taskid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_taskid() const;
  void _internal_set_taskid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 Status = 3;
  void clear_status();
  ::PROTOBUF_NAMESPACE_ID::int32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_status() const;
  void _internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Progress = 4;
  void clear_progress();
  ::PROTOBUF_NAMESPACE_ID::int32 progress() const;
  void set_progress(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_progress() const;
  void _internal_set_progress(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:DBTaskItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 taskid_;
  ::PROTOBUF_NAMESPACE_ID::int32 status_;
  ::PROTOBUF_NAMESPACE_ID::int32 progress_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBTaskData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBTaskData) */ {
 public:
  inline DBTaskData() : DBTaskData(nullptr) {};
  virtual ~DBTaskData();

  DBTaskData(const DBTaskData& from);
  DBTaskData(DBTaskData&& from) noexcept
    : DBTaskData() {
    *this = ::std::move(from);
  }

  inline DBTaskData& operator=(const DBTaskData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBTaskData& operator=(DBTaskData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBTaskData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBTaskData* internal_default_instance() {
    return reinterpret_cast<const DBTaskData*>(
               &_DBTaskData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(DBTaskData& a, DBTaskData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBTaskData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBTaskData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBTaskData* New() const final {
    return CreateMaybeMessage<DBTaskData>(nullptr);
  }

  DBTaskData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBTaskData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBTaskData& from);
  void MergeFrom(const DBTaskData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBTaskData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBTaskData";
  }
  protected:
  explicit DBTaskData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTaskListFieldNumber = 1,
  };
  // repeated .DBTaskItem TaskList = 1;
  int tasklist_size() const;
  private:
  int _internal_tasklist_size() const;
  public:
  void clear_tasklist();
  ::DBTaskItem* mutable_tasklist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBTaskItem >*
      mutable_tasklist();
  private:
  const ::DBTaskItem& _internal_tasklist(int index) const;
  ::DBTaskItem* _internal_add_tasklist();
  public:
  const ::DBTaskItem& tasklist(int index) const;
  ::DBTaskItem* add_tasklist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBTaskItem >&
      tasklist() const;

  // @@protoc_insertion_point(class_scope:DBTaskData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBTaskItem > tasklist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBMailItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBMailItem) */ {
 public:
  inline DBMailItem() : DBMailItem(nullptr) {};
  virtual ~DBMailItem();

  DBMailItem(const DBMailItem& from);
  DBMailItem(DBMailItem&& from) noexcept
    : DBMailItem() {
    *this = ::std::move(from);
  }

  inline DBMailItem& operator=(const DBMailItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBMailItem& operator=(DBMailItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBMailItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBMailItem* internal_default_instance() {
    return reinterpret_cast<const DBMailItem*>(
               &_DBMailItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(DBMailItem& a, DBMailItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBMailItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBMailItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBMailItem* New() const final {
    return CreateMaybeMessage<DBMailItem>(nullptr);
  }

  DBMailItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBMailItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBMailItem& from);
  void MergeFrom(const DBMailItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBMailItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBMailItem";
  }
  protected:
  explicit DBMailItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSenderFieldNumber = 6,
    kTitleFieldNumber = 9,
    kContentFieldNumber = 10,
    kItemsFieldNumber = 11,
    kRoleIDFieldNumber = 1,
    kGuidFieldNumber = 2,
    kGroupIDFieldNumber = 3,
    kTimeFieldNumber = 4,
    kSenderIDFieldNumber = 5,
    kMailTypeFieldNumber = 7,
    kStatusFieldNumber = 8,
  };
  // string Sender = 6;
  void clear_sender();
  const std::string& sender() const;
  void set_sender(const std::string& value);
  void set_sender(std::string&& value);
  void set_sender(const char* value);
  void set_sender(const char* value, size_t size);
  std::string* mutable_sender();
  std::string* release_sender();
  void set_allocated_sender(std::string* sender);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_sender();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_sender(
      std::string* sender);
  private:
  const std::string& _internal_sender() const;
  void _internal_set_sender(const std::string& value);
  std::string* _internal_mutable_sender();
  public:

  // string Title = 9;
  void clear_title();
  const std::string& title() const;
  void set_title(const std::string& value);
  void set_title(std::string&& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  std::string* mutable_title();
  std::string* release_title();
  void set_allocated_title(std::string* title);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_title();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_title(
      std::string* title);
  private:
  const std::string& _internal_title() const;
  void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // string Content = 10;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_content();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_content(
      std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // bytes Items = 11;
  void clear_items();
  const std::string& items() const;
  void set_items(const std::string& value);
  void set_items(std::string&& value);
  void set_items(const char* value);
  void set_items(const void* value, size_t size);
  std::string* mutable_items();
  std::string* release_items();
  void set_allocated_items(std::string* items);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_items();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_items(
      std::string* items);
  private:
  const std::string& _internal_items() const;
  void _internal_set_items(const std::string& value);
  std::string* _internal_mutable_items();
  public:

  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 Guid = 2;
  void clear_guid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guid() const;
  void set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guid() const;
  void _internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 GroupID = 3;
  void clear_groupid();
  ::PROTOBUF_NAMESPACE_ID::uint64 groupid() const;
  void set_groupid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_groupid() const;
  void _internal_set_groupid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 Time = 4;
  void clear_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_time() const;
  void _internal_set_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 SenderID = 5;
  void clear_senderid();
  ::PROTOBUF_NAMESPACE_ID::uint64 senderid() const;
  void set_senderid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_senderid() const;
  void _internal_set_senderid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 MailType = 7;
  void clear_mailtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 mailtype() const;
  void set_mailtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mailtype() const;
  void _internal_set_mailtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Status = 8;
  void clear_status();
  ::PROTOBUF_NAMESPACE_ID::uint32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_status() const;
  void _internal_set_status(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:DBMailItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sender_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr items_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 groupid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 senderid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mailtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBMailData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBMailData) */ {
 public:
  inline DBMailData() : DBMailData(nullptr) {};
  virtual ~DBMailData();

  DBMailData(const DBMailData& from);
  DBMailData(DBMailData&& from) noexcept
    : DBMailData() {
    *this = ::std::move(from);
  }

  inline DBMailData& operator=(const DBMailData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBMailData& operator=(DBMailData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBMailData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBMailData* internal_default_instance() {
    return reinterpret_cast<const DBMailData*>(
               &_DBMailData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(DBMailData& a, DBMailData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBMailData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBMailData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBMailData* New() const final {
    return CreateMaybeMessage<DBMailData>(nullptr);
  }

  DBMailData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBMailData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBMailData& from);
  void MergeFrom(const DBMailData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBMailData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBMailData";
  }
  protected:
  explicit DBMailData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMailListFieldNumber = 1,
  };
  // repeated .DBMailItem MailList = 1;
  int maillist_size() const;
  private:
  int _internal_maillist_size() const;
  public:
  void clear_maillist();
  ::DBMailItem* mutable_maillist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBMailItem >*
      mutable_maillist();
  private:
  const ::DBMailItem& _internal_maillist(int index) const;
  ::DBMailItem* _internal_add_maillist();
  public:
  const ::DBMailItem& maillist(int index) const;
  ::DBMailItem* add_maillist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBMailItem >&
      maillist() const;

  // @@protoc_insertion_point(class_scope:DBMailData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBMailItem > maillist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBActivityItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBActivityItem) */ {
 public:
  inline DBActivityItem() : DBActivityItem(nullptr) {};
  virtual ~DBActivityItem();

  DBActivityItem(const DBActivityItem& from);
  DBActivityItem(DBActivityItem&& from) noexcept
    : DBActivityItem() {
    *this = ::std::move(from);
  }

  inline DBActivityItem& operator=(const DBActivityItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBActivityItem& operator=(DBActivityItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBActivityItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBActivityItem* internal_default_instance() {
    return reinterpret_cast<const DBActivityItem*>(
               &_DBActivityItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(DBActivityItem& a, DBActivityItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBActivityItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBActivityItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBActivityItem* New() const final {
    return CreateMaybeMessage<DBActivityItem>(nullptr);
  }

  DBActivityItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBActivityItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBActivityItem& from);
  void MergeFrom(const DBActivityItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBActivityItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBActivityItem";
  }
  protected:
  explicit DBActivityItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 6,
    kRoleIDFieldNumber = 1,
    kActivityIDFieldNumber = 2,
    kActivityTypeFieldNumber = 3,
    kJoinTimeFieldNumber = 4,
    kDataLenFieldNumber = 5,
  };
  // bytes Data = 6;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_data();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_data(
      std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 ActivityID = 2;
  void clear_activityid();
  ::PROTOBUF_NAMESPACE_ID::uint32 activityid() const;
  void set_activityid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_activityid() const;
  void _internal_set_activityid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ActivityType = 3;
  void clear_activitytype();
  ::PROTOBUF_NAMESPACE_ID::uint32 activitytype() const;
  void set_activitytype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_activitytype() const;
  void _internal_set_activitytype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 JoinTime = 4;
  void clear_jointime();
  ::PROTOBUF_NAMESPACE_ID::uint32 jointime() const;
  void set_jointime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_jointime() const;
  void _internal_set_jointime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 DataLen = 5;
  void clear_datalen();
  ::PROTOBUF_NAMESPACE_ID::uint32 datalen() const;
  void set_datalen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_datalen() const;
  void _internal_set_datalen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:DBActivityItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 activityid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 activitytype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 jointime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 datalen_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBActivityData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBActivityData) */ {
 public:
  inline DBActivityData() : DBActivityData(nullptr) {};
  virtual ~DBActivityData();

  DBActivityData(const DBActivityData& from);
  DBActivityData(DBActivityData&& from) noexcept
    : DBActivityData() {
    *this = ::std::move(from);
  }

  inline DBActivityData& operator=(const DBActivityData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBActivityData& operator=(DBActivityData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBActivityData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBActivityData* internal_default_instance() {
    return reinterpret_cast<const DBActivityData*>(
               &_DBActivityData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(DBActivityData& a, DBActivityData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBActivityData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBActivityData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBActivityData* New() const final {
    return CreateMaybeMessage<DBActivityData>(nullptr);
  }

  DBActivityData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBActivityData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBActivityData& from);
  void MergeFrom(const DBActivityData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBActivityData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBActivityData";
  }
  protected:
  explicit DBActivityData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActivityListFieldNumber = 1,
  };
  // repeated .DBActivityItem ActivityList = 1;
  int activitylist_size() const;
  private:
  int _internal_activitylist_size() const;
  public:
  void clear_activitylist();
  ::DBActivityItem* mutable_activitylist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBActivityItem >*
      mutable_activitylist();
  private:
  const ::DBActivityItem& _internal_activitylist(int index) const;
  ::DBActivityItem* _internal_add_activitylist();
  public:
  const ::DBActivityItem& activitylist(int index) const;
  ::DBActivityItem* add_activitylist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBActivityItem >&
      activitylist() const;

  // @@protoc_insertion_point(class_scope:DBActivityData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBActivityItem > activitylist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBCounterItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBCounterItem) */ {
 public:
  inline DBCounterItem() : DBCounterItem(nullptr) {};
  virtual ~DBCounterItem();

  DBCounterItem(const DBCounterItem& from);
  DBCounterItem(DBCounterItem&& from) noexcept
    : DBCounterItem() {
    *this = ::std::move(from);
  }

  inline DBCounterItem& operator=(const DBCounterItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBCounterItem& operator=(DBCounterItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBCounterItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBCounterItem* internal_default_instance() {
    return reinterpret_cast<const DBCounterItem*>(
               &_DBCounterItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(DBCounterItem& a, DBCounterItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBCounterItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBCounterItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBCounterItem* New() const final {
    return CreateMaybeMessage<DBCounterItem>(nullptr);
  }

  DBCounterItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBCounterItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBCounterItem& from);
  void MergeFrom(const DBCounterItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBCounterItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBCounterItem";
  }
  protected:
  explicit DBCounterItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kCounterIDFieldNumber = 2,
    kIndexFieldNumber = 3,
    kValueFieldNumber = 4,
    kTimeFieldNumber = 5,
    kParam1FieldNumber = 6,
    kParam2FieldNumber = 7,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 CounterID = 2;
  void clear_counterid();
  ::PROTOBUF_NAMESPACE_ID::uint32 counterid() const;
  void set_counterid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_counterid() const;
  void _internal_set_counterid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Index = 3;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int64 Value = 4;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int64 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // uint64 Time = 5;
  void clear_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_time() const;
  void _internal_set_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 Param1 = 6;
  void clear_param1();
  ::PROTOBUF_NAMESPACE_ID::uint32 param1() const;
  void set_param1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_param1() const;
  void _internal_set_param1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 Param2 = 7;
  void clear_param2();
  ::PROTOBUF_NAMESPACE_ID::uint32 param2() const;
  void set_param2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_param2() const;
  void _internal_set_param2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:DBCounterItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 counterid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 index_;
  ::PROTOBUF_NAMESPACE_ID::int64 value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 param1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 param2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBCounterData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBCounterData) */ {
 public:
  inline DBCounterData() : DBCounterData(nullptr) {};
  virtual ~DBCounterData();

  DBCounterData(const DBCounterData& from);
  DBCounterData(DBCounterData&& from) noexcept
    : DBCounterData() {
    *this = ::std::move(from);
  }

  inline DBCounterData& operator=(const DBCounterData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBCounterData& operator=(DBCounterData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBCounterData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBCounterData* internal_default_instance() {
    return reinterpret_cast<const DBCounterData*>(
               &_DBCounterData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(DBCounterData& a, DBCounterData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBCounterData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBCounterData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBCounterData* New() const final {
    return CreateMaybeMessage<DBCounterData>(nullptr);
  }

  DBCounterData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBCounterData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBCounterData& from);
  void MergeFrom(const DBCounterData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBCounterData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBCounterData";
  }
  protected:
  explicit DBCounterData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCounterListFieldNumber = 1,
  };
  // repeated .DBCounterItem CounterList = 1;
  int counterlist_size() const;
  private:
  int _internal_counterlist_size() const;
  public:
  void clear_counterlist();
  ::DBCounterItem* mutable_counterlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBCounterItem >*
      mutable_counterlist();
  private:
  const ::DBCounterItem& _internal_counterlist(int index) const;
  ::DBCounterItem* _internal_add_counterlist();
  public:
  const ::DBCounterItem& counterlist(int index) const;
  ::DBCounterItem* add_counterlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBCounterItem >&
      counterlist() const;

  // @@protoc_insertion_point(class_scope:DBCounterData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBCounterItem > counterlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBFriendItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBFriendItem) */ {
 public:
  inline DBFriendItem() : DBFriendItem(nullptr) {};
  virtual ~DBFriendItem();

  DBFriendItem(const DBFriendItem& from);
  DBFriendItem(DBFriendItem&& from) noexcept
    : DBFriendItem() {
    *this = ::std::move(from);
  }

  inline DBFriendItem& operator=(const DBFriendItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBFriendItem& operator=(DBFriendItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBFriendItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBFriendItem* internal_default_instance() {
    return reinterpret_cast<const DBFriendItem*>(
               &_DBFriendItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(DBFriendItem& a, DBFriendItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DBFriendItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBFriendItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBFriendItem* New() const final {
    return CreateMaybeMessage<DBFriendItem>(nullptr);
  }

  DBFriendItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBFriendItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBFriendItem& from);
  void MergeFrom(const DBFriendItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBFriendItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBFriendItem";
  }
  protected:
  explicit DBFriendItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kFriendIDFieldNumber = 2,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 FriendID = 2;
  void clear_friendid();
  ::PROTOBUF_NAMESPACE_ID::uint64 friendid() const;
  void set_friendid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_friendid() const;
  void _internal_set_friendid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:DBFriendItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 friendid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBFriendData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBFriendData) */ {
 public:
  inline DBFriendData() : DBFriendData(nullptr) {};
  virtual ~DBFriendData();

  DBFriendData(const DBFriendData& from);
  DBFriendData(DBFriendData&& from) noexcept
    : DBFriendData() {
    *this = ::std::move(from);
  }

  inline DBFriendData& operator=(const DBFriendData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBFriendData& operator=(DBFriendData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBFriendData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBFriendData* internal_default_instance() {
    return reinterpret_cast<const DBFriendData*>(
               &_DBFriendData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(DBFriendData& a, DBFriendData& b) {
    a.Swap(&b);
  }
  inline void Swap(DBFriendData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBFriendData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBFriendData* New() const final {
    return CreateMaybeMessage<DBFriendData>(nullptr);
  }

  DBFriendData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBFriendData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBFriendData& from);
  void MergeFrom(const DBFriendData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBFriendData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBFriendData";
  }
  protected:
  explicit DBFriendData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFriendListFieldNumber = 1,
  };
  // repeated .DBFriendItem FriendList = 1;
  int friendlist_size() const;
  private:
  int _internal_friendlist_size() const;
  public:
  void clear_friendlist();
  ::DBFriendItem* mutable_friendlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBFriendItem >*
      mutable_friendlist();
  private:
  const ::DBFriendItem& _internal_friendlist(int index) const;
  ::DBFriendItem* _internal_add_friendlist();
  public:
  const ::DBFriendItem& friendlist(int index) const;
  ::DBFriendItem* add_friendlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBFriendItem >&
      friendlist() const;

  // @@protoc_insertion_point(class_scope:DBFriendData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBFriendItem > friendlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// -------------------------------------------------------------------

class DBRoleLoginAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DBRoleLoginAck) */ {
 public:
  inline DBRoleLoginAck() : DBRoleLoginAck(nullptr) {};
  virtual ~DBRoleLoginAck();

  DBRoleLoginAck(const DBRoleLoginAck& from);
  DBRoleLoginAck(DBRoleLoginAck&& from) noexcept
    : DBRoleLoginAck() {
    *this = ::std::move(from);
  }

  inline DBRoleLoginAck& operator=(const DBRoleLoginAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBRoleLoginAck& operator=(DBRoleLoginAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DBRoleLoginAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DBRoleLoginAck* internal_default_instance() {
    return reinterpret_cast<const DBRoleLoginAck*>(
               &_DBRoleLoginAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(DBRoleLoginAck& a, DBRoleLoginAck& b) {
    a.Swap(&b);
  }
  inline void Swap(DBRoleLoginAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBRoleLoginAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DBRoleLoginAck* New() const final {
    return CreateMaybeMessage<DBRoleLoginAck>(nullptr);
  }

  DBRoleLoginAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DBRoleLoginAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DBRoleLoginAck& from);
  void MergeFrom(const DBRoleLoginAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBRoleLoginAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DBRoleLoginAck";
  }
  protected:
  explicit DBRoleLoginAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fLoginDBData_2eproto);
    return ::descriptor_table_Msg_5fLoginDBData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleDataFieldNumber = 3,
    kBagDataFieldNumber = 4,
    kCopyDataFieldNumber = 5,
    kEquipDataFieldNumber = 6,
    kGemDataFieldNumber = 7,
    kPetDataFieldNumber = 8,
    kPartnerDataFieldNumber = 9,
    kTaskDataFieldNumber = 10,
    kMailDataFieldNumber = 11,
    kMountDataFieldNumber = 12,
    kActivityDataFieldNumber = 13,
    kCounterDataFieldNumber = 14,
    kFriendDataFieldNumber = 15,
    kSkillDataFieldNumber = 16,
    kRoleIDFieldNumber = 2,
    kRetCodeFieldNumber = 1,
  };
  // .DBRoleData RoleData = 3;
  bool has_roledata() const;
  private:
  bool _internal_has_roledata() const;
  public:
  void clear_roledata();
  const ::DBRoleData& roledata() const;
  ::DBRoleData* release_roledata();
  ::DBRoleData* mutable_roledata();
  void set_allocated_roledata(::DBRoleData* roledata);
  private:
  const ::DBRoleData& _internal_roledata() const;
  ::DBRoleData* _internal_mutable_roledata();
  public:
  void unsafe_arena_set_allocated_roledata(
      ::DBRoleData* roledata);
  ::DBRoleData* unsafe_arena_release_roledata();

  // .DBBagData BagData = 4;
  bool has_bagdata() const;
  private:
  bool _internal_has_bagdata() const;
  public:
  void clear_bagdata();
  const ::DBBagData& bagdata() const;
  ::DBBagData* release_bagdata();
  ::DBBagData* mutable_bagdata();
  void set_allocated_bagdata(::DBBagData* bagdata);
  private:
  const ::DBBagData& _internal_bagdata() const;
  ::DBBagData* _internal_mutable_bagdata();
  public:
  void unsafe_arena_set_allocated_bagdata(
      ::DBBagData* bagdata);
  ::DBBagData* unsafe_arena_release_bagdata();

  // .DBCopyData CopyData = 5;
  bool has_copydata() const;
  private:
  bool _internal_has_copydata() const;
  public:
  void clear_copydata();
  const ::DBCopyData& copydata() const;
  ::DBCopyData* release_copydata();
  ::DBCopyData* mutable_copydata();
  void set_allocated_copydata(::DBCopyData* copydata);
  private:
  const ::DBCopyData& _internal_copydata() const;
  ::DBCopyData* _internal_mutable_copydata();
  public:
  void unsafe_arena_set_allocated_copydata(
      ::DBCopyData* copydata);
  ::DBCopyData* unsafe_arena_release_copydata();

  // .DBEquipData EquipData = 6;
  bool has_equipdata() const;
  private:
  bool _internal_has_equipdata() const;
  public:
  void clear_equipdata();
  const ::DBEquipData& equipdata() const;
  ::DBEquipData* release_equipdata();
  ::DBEquipData* mutable_equipdata();
  void set_allocated_equipdata(::DBEquipData* equipdata);
  private:
  const ::DBEquipData& _internal_equipdata() const;
  ::DBEquipData* _internal_mutable_equipdata();
  public:
  void unsafe_arena_set_allocated_equipdata(
      ::DBEquipData* equipdata);
  ::DBEquipData* unsafe_arena_release_equipdata();

  // .DBGemData GemData = 7;
  bool has_gemdata() const;
  private:
  bool _internal_has_gemdata() const;
  public:
  void clear_gemdata();
  const ::DBGemData& gemdata() const;
  ::DBGemData* release_gemdata();
  ::DBGemData* mutable_gemdata();
  void set_allocated_gemdata(::DBGemData* gemdata);
  private:
  const ::DBGemData& _internal_gemdata() const;
  ::DBGemData* _internal_mutable_gemdata();
  public:
  void unsafe_arena_set_allocated_gemdata(
      ::DBGemData* gemdata);
  ::DBGemData* unsafe_arena_release_gemdata();

  // .DBPetData PetData = 8;
  bool has_petdata() const;
  private:
  bool _internal_has_petdata() const;
  public:
  void clear_petdata();
  const ::DBPetData& petdata() const;
  ::DBPetData* release_petdata();
  ::DBPetData* mutable_petdata();
  void set_allocated_petdata(::DBPetData* petdata);
  private:
  const ::DBPetData& _internal_petdata() const;
  ::DBPetData* _internal_mutable_petdata();
  public:
  void unsafe_arena_set_allocated_petdata(
      ::DBPetData* petdata);
  ::DBPetData* unsafe_arena_release_petdata();

  // .DBPartnerData PartnerData = 9;
  bool has_partnerdata() const;
  private:
  bool _internal_has_partnerdata() const;
  public:
  void clear_partnerdata();
  const ::DBPartnerData& partnerdata() const;
  ::DBPartnerData* release_partnerdata();
  ::DBPartnerData* mutable_partnerdata();
  void set_allocated_partnerdata(::DBPartnerData* partnerdata);
  private:
  const ::DBPartnerData& _internal_partnerdata() const;
  ::DBPartnerData* _internal_mutable_partnerdata();
  public:
  void unsafe_arena_set_allocated_partnerdata(
      ::DBPartnerData* partnerdata);
  ::DBPartnerData* unsafe_arena_release_partnerdata();

  // .DBTaskData TaskData = 10;
  bool has_taskdata() const;
  private:
  bool _internal_has_taskdata() const;
  public:
  void clear_taskdata();
  const ::DBTaskData& taskdata() const;
  ::DBTaskData* release_taskdata();
  ::DBTaskData* mutable_taskdata();
  void set_allocated_taskdata(::DBTaskData* taskdata);
  private:
  const ::DBTaskData& _internal_taskdata() const;
  ::DBTaskData* _internal_mutable_taskdata();
  public:
  void unsafe_arena_set_allocated_taskdata(
      ::DBTaskData* taskdata);
  ::DBTaskData* unsafe_arena_release_taskdata();

  // .DBMailData MailData = 11;
  bool has_maildata() const;
  private:
  bool _internal_has_maildata() const;
  public:
  void clear_maildata();
  const ::DBMailData& maildata() const;
  ::DBMailData* release_maildata();
  ::DBMailData* mutable_maildata();
  void set_allocated_maildata(::DBMailData* maildata);
  private:
  const ::DBMailData& _internal_maildata() const;
  ::DBMailData* _internal_mutable_maildata();
  public:
  void unsafe_arena_set_allocated_maildata(
      ::DBMailData* maildata);
  ::DBMailData* unsafe_arena_release_maildata();

  // .DBMountData MountData = 12;
  bool has_mountdata() const;
  private:
  bool _internal_has_mountdata() const;
  public:
  void clear_mountdata();
  const ::DBMountData& mountdata() const;
  ::DBMountData* release_mountdata();
  ::DBMountData* mutable_mountdata();
  void set_allocated_mountdata(::DBMountData* mountdata);
  private:
  const ::DBMountData& _internal_mountdata() const;
  ::DBMountData* _internal_mutable_mountdata();
  public:
  void unsafe_arena_set_allocated_mountdata(
      ::DBMountData* mountdata);
  ::DBMountData* unsafe_arena_release_mountdata();

  // .DBActivityData ActivityData = 13;
  bool has_activitydata() const;
  private:
  bool _internal_has_activitydata() const;
  public:
  void clear_activitydata();
  const ::DBActivityData& activitydata() const;
  ::DBActivityData* release_activitydata();
  ::DBActivityData* mutable_activitydata();
  void set_allocated_activitydata(::DBActivityData* activitydata);
  private:
  const ::DBActivityData& _internal_activitydata() const;
  ::DBActivityData* _internal_mutable_activitydata();
  public:
  void unsafe_arena_set_allocated_activitydata(
      ::DBActivityData* activitydata);
  ::DBActivityData* unsafe_arena_release_activitydata();

  // .DBCounterData CounterData = 14;
  bool has_counterdata() const;
  private:
  bool _internal_has_counterdata() const;
  public:
  void clear_counterdata();
  const ::DBCounterData& counterdata() const;
  ::DBCounterData* release_counterdata();
  ::DBCounterData* mutable_counterdata();
  void set_allocated_counterdata(::DBCounterData* counterdata);
  private:
  const ::DBCounterData& _internal_counterdata() const;
  ::DBCounterData* _internal_mutable_counterdata();
  public:
  void unsafe_arena_set_allocated_counterdata(
      ::DBCounterData* counterdata);
  ::DBCounterData* unsafe_arena_release_counterdata();

  // .DBFriendData FriendData = 15;
  bool has_frienddata() const;
  private:
  bool _internal_has_frienddata() const;
  public:
  void clear_frienddata();
  const ::DBFriendData& frienddata() const;
  ::DBFriendData* release_frienddata();
  ::DBFriendData* mutable_frienddata();
  void set_allocated_frienddata(::DBFriendData* frienddata);
  private:
  const ::DBFriendData& _internal_frienddata() const;
  ::DBFriendData* _internal_mutable_frienddata();
  public:
  void unsafe_arena_set_allocated_frienddata(
      ::DBFriendData* frienddata);
  ::DBFriendData* unsafe_arena_release_frienddata();

  // .DBSkillData SkillData = 16;
  bool has_skilldata() const;
  private:
  bool _internal_has_skilldata() const;
  public:
  void clear_skilldata();
  const ::DBSkillData& skilldata() const;
  ::DBSkillData* release_skilldata();
  ::DBSkillData* mutable_skilldata();
  void set_allocated_skilldata(::DBSkillData* skilldata);
  private:
  const ::DBSkillData& _internal_skilldata() const;
  ::DBSkillData* _internal_mutable_skilldata();
  public:
  void unsafe_arena_set_allocated_skilldata(
      ::DBSkillData* skilldata);
  ::DBSkillData* unsafe_arena_release_skilldata();

  // uint64 RoleID = 2;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:DBRoleLoginAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::DBRoleData* roledata_;
  ::DBBagData* bagdata_;
  ::DBCopyData* copydata_;
  ::DBEquipData* equipdata_;
  ::DBGemData* gemdata_;
  ::DBPetData* petdata_;
  ::DBPartnerData* partnerdata_;
  ::DBTaskData* taskdata_;
  ::DBMailData* maildata_;
  ::DBMountData* mountdata_;
  ::DBActivityData* activitydata_;
  ::DBCounterData* counterdata_;
  ::DBFriendData* frienddata_;
  ::DBSkillData* skilldata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fLoginDBData_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DBRoleData

// uint64 AccountID = 1;
inline void DBRoleData::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleData::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleData::accountid() const {
  // @@protoc_insertion_point(field_get:DBRoleData.AccountID)
  return _internal_accountid();
}
inline void DBRoleData::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void DBRoleData::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:DBRoleData.AccountID)
}

// uint64 RoleID = 2;
inline void DBRoleData::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleData::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleData::roleid() const {
  // @@protoc_insertion_point(field_get:DBRoleData.RoleID)
  return _internal_roleid();
}
inline void DBRoleData::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBRoleData::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBRoleData.RoleID)
}

// int32 CarrerID = 3;
inline void DBRoleData::clear_carrerid() {
  carrerid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::_internal_carrerid() const {
  return carrerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::carrerid() const {
  // @@protoc_insertion_point(field_get:DBRoleData.CarrerID)
  return _internal_carrerid();
}
inline void DBRoleData::_internal_set_carrerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  carrerid_ = value;
}
inline void DBRoleData::set_carrerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_carrerid(value);
  // @@protoc_insertion_point(field_set:DBRoleData.CarrerID)
}

// int32 Level = 4;
inline void DBRoleData::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::level() const {
  // @@protoc_insertion_point(field_get:DBRoleData.Level)
  return _internal_level();
}
inline void DBRoleData::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void DBRoleData::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DBRoleData.Level)
}

// int64 Exp = 5;
inline void DBRoleData::clear_exp() {
  exp_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DBRoleData::_internal_exp() const {
  return exp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DBRoleData::exp() const {
  // @@protoc_insertion_point(field_get:DBRoleData.Exp)
  return _internal_exp();
}
inline void DBRoleData::_internal_set_exp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  exp_ = value;
}
inline void DBRoleData::set_exp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:DBRoleData.Exp)
}

// string Name = 6;
inline void DBRoleData::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DBRoleData::name() const {
  // @@protoc_insertion_point(field_get:DBRoleData.Name)
  return _internal_name();
}
inline void DBRoleData::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:DBRoleData.Name)
}
inline std::string* DBRoleData::mutable_name() {
  // @@protoc_insertion_point(field_mutable:DBRoleData.Name)
  return _internal_mutable_name();
}
inline const std::string& DBRoleData::_internal_name() const {
  return name_.Get();
}
inline void DBRoleData::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DBRoleData::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:DBRoleData.Name)
}
inline void DBRoleData::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:DBRoleData.Name)
}
inline void DBRoleData::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:DBRoleData.Name)
}
inline std::string* DBRoleData::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DBRoleData::release_name() {
  // @@protoc_insertion_point(field_release:DBRoleData.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DBRoleData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:DBRoleData.Name)
}
inline std::string* DBRoleData::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:DBRoleData.Name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DBRoleData::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleData.Name)
}

// int32 LangID = 7;
inline void DBRoleData::clear_langid() {
  langid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::_internal_langid() const {
  return langid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::langid() const {
  // @@protoc_insertion_point(field_get:DBRoleData.LangID)
  return _internal_langid();
}
inline void DBRoleData::_internal_set_langid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  langid_ = value;
}
inline void DBRoleData::set_langid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_langid(value);
  // @@protoc_insertion_point(field_set:DBRoleData.LangID)
}

// int32 VipLvl = 8;
inline void DBRoleData::clear_viplvl() {
  viplvl_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::_internal_viplvl() const {
  return viplvl_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::viplvl() const {
  // @@protoc_insertion_point(field_get:DBRoleData.VipLvl)
  return _internal_viplvl();
}
inline void DBRoleData::_internal_set_viplvl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  viplvl_ = value;
}
inline void DBRoleData::set_viplvl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_viplvl(value);
  // @@protoc_insertion_point(field_set:DBRoleData.VipLvl)
}

// int32 VipExp = 9;
inline void DBRoleData::clear_vipexp() {
  vipexp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::_internal_vipexp() const {
  return vipexp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::vipexp() const {
  // @@protoc_insertion_point(field_get:DBRoleData.VipExp)
  return _internal_vipexp();
}
inline void DBRoleData::_internal_set_vipexp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vipexp_ = value;
}
inline void DBRoleData::set_vipexp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vipexp(value);
  // @@protoc_insertion_point(field_set:DBRoleData.VipExp)
}

// int64 FightValue = 10;
inline void DBRoleData::clear_fightvalue() {
  fightvalue_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DBRoleData::_internal_fightvalue() const {
  return fightvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DBRoleData::fightvalue() const {
  // @@protoc_insertion_point(field_get:DBRoleData.FightValue)
  return _internal_fightvalue();
}
inline void DBRoleData::_internal_set_fightvalue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  fightvalue_ = value;
}
inline void DBRoleData::set_fightvalue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_fightvalue(value);
  // @@protoc_insertion_point(field_set:DBRoleData.FightValue)
}

// int32 CityCopyID = 11;
inline void DBRoleData::clear_citycopyid() {
  citycopyid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::_internal_citycopyid() const {
  return citycopyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::citycopyid() const {
  // @@protoc_insertion_point(field_get:DBRoleData.CityCopyID)
  return _internal_citycopyid();
}
inline void DBRoleData::_internal_set_citycopyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  citycopyid_ = value;
}
inline void DBRoleData::set_citycopyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_citycopyid(value);
  // @@protoc_insertion_point(field_set:DBRoleData.CityCopyID)
}

// repeated int64 Action = 12;
inline int DBRoleData::_internal_action_size() const {
  return action_.size();
}
inline int DBRoleData::action_size() const {
  return _internal_action_size();
}
inline void DBRoleData::clear_action() {
  action_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DBRoleData::_internal_action(int index) const {
  return action_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DBRoleData::action(int index) const {
  // @@protoc_insertion_point(field_get:DBRoleData.Action)
  return _internal_action(index);
}
inline void DBRoleData::set_action(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  action_.Set(index, value);
  // @@protoc_insertion_point(field_set:DBRoleData.Action)
}
inline void DBRoleData::_internal_add_action(::PROTOBUF_NAMESPACE_ID::int64 value) {
  action_.Add(value);
}
inline void DBRoleData::add_action(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_action(value);
  // @@protoc_insertion_point(field_add:DBRoleData.Action)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
DBRoleData::_internal_action() const {
  return action_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
DBRoleData::action() const {
  // @@protoc_insertion_point(field_list:DBRoleData.Action)
  return _internal_action();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
DBRoleData::_internal_mutable_action() {
  return &action_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
DBRoleData::mutable_action() {
  // @@protoc_insertion_point(field_mutable_list:DBRoleData.Action)
  return _internal_mutable_action();
}

// repeated int64 Actime = 13;
inline int DBRoleData::_internal_actime_size() const {
  return actime_.size();
}
inline int DBRoleData::actime_size() const {
  return _internal_actime_size();
}
inline void DBRoleData::clear_actime() {
  actime_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DBRoleData::_internal_actime(int index) const {
  return actime_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DBRoleData::actime(int index) const {
  // @@protoc_insertion_point(field_get:DBRoleData.Actime)
  return _internal_actime(index);
}
inline void DBRoleData::set_actime(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  actime_.Set(index, value);
  // @@protoc_insertion_point(field_set:DBRoleData.Actime)
}
inline void DBRoleData::_internal_add_actime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  actime_.Add(value);
}
inline void DBRoleData::add_actime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_actime(value);
  // @@protoc_insertion_point(field_add:DBRoleData.Actime)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
DBRoleData::_internal_actime() const {
  return actime_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
DBRoleData::actime() const {
  // @@protoc_insertion_point(field_list:DBRoleData.Actime)
  return _internal_actime();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
DBRoleData::_internal_mutable_actime() {
  return &actime_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
DBRoleData::mutable_actime() {
  // @@protoc_insertion_point(field_mutable_list:DBRoleData.Actime)
  return _internal_mutable_actime();
}

// uint64 CreateTime = 14;
inline void DBRoleData::clear_createtime() {
  createtime_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleData::_internal_createtime() const {
  return createtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleData::createtime() const {
  // @@protoc_insertion_point(field_get:DBRoleData.CreateTime)
  return _internal_createtime();
}
inline void DBRoleData::_internal_set_createtime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  createtime_ = value;
}
inline void DBRoleData::set_createtime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_createtime(value);
  // @@protoc_insertion_point(field_set:DBRoleData.CreateTime)
}

// uint64 LogonTime = 15;
inline void DBRoleData::clear_logontime() {
  logontime_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleData::_internal_logontime() const {
  return logontime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleData::logontime() const {
  // @@protoc_insertion_point(field_get:DBRoleData.LogonTime)
  return _internal_logontime();
}
inline void DBRoleData::_internal_set_logontime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  logontime_ = value;
}
inline void DBRoleData::set_logontime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_logontime(value);
  // @@protoc_insertion_point(field_set:DBRoleData.LogonTime)
}

// uint64 LogoffTime = 16;
inline void DBRoleData::clear_logofftime() {
  logofftime_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleData::_internal_logofftime() const {
  return logofftime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleData::logofftime() const {
  // @@protoc_insertion_point(field_get:DBRoleData.LogoffTime)
  return _internal_logofftime();
}
inline void DBRoleData::_internal_set_logofftime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  logofftime_ = value;
}
inline void DBRoleData::set_logofftime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_logofftime(value);
  // @@protoc_insertion_point(field_set:DBRoleData.LogoffTime)
}

// uint64 GuildID = 17;
inline void DBRoleData::clear_guildid() {
  guildid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleData::_internal_guildid() const {
  return guildid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleData::guildid() const {
  // @@protoc_insertion_point(field_get:DBRoleData.GuildID)
  return _internal_guildid();
}
inline void DBRoleData::_internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guildid_ = value;
}
inline void DBRoleData::set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guildid(value);
  // @@protoc_insertion_point(field_set:DBRoleData.GuildID)
}

// int32 Channel = 18;
inline void DBRoleData::clear_channel() {
  channel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::_internal_channel() const {
  return channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBRoleData::channel() const {
  // @@protoc_insertion_point(field_get:DBRoleData.Channel)
  return _internal_channel();
}
inline void DBRoleData::_internal_set_channel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  channel_ = value;
}
inline void DBRoleData::set_channel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:DBRoleData.Channel)
}

// uint32 OnlineTime = 19;
inline void DBRoleData::clear_onlinetime() {
  onlinetime_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBRoleData::_internal_onlinetime() const {
  return onlinetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBRoleData::onlinetime() const {
  // @@protoc_insertion_point(field_get:DBRoleData.OnlineTime)
  return _internal_onlinetime();
}
inline void DBRoleData::_internal_set_onlinetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  onlinetime_ = value;
}
inline void DBRoleData::set_onlinetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_onlinetime(value);
  // @@protoc_insertion_point(field_set:DBRoleData.OnlineTime)
}

// -------------------------------------------------------------------

// DBBagItem

// uint64 Guid = 1;
inline void DBBagItem::clear_guid() {
  guid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBBagItem::_internal_guid() const {
  return guid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBBagItem::guid() const {
  // @@protoc_insertion_point(field_get:DBBagItem.Guid)
  return _internal_guid();
}
inline void DBBagItem::_internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guid_ = value;
}
inline void DBBagItem::set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBBagItem.Guid)
}

// uint64 RoleID = 2;
inline void DBBagItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBBagItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBBagItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBBagItem.RoleID)
  return _internal_roleid();
}
inline void DBBagItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBBagItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBBagItem.RoleID)
}

// uint64 ItemGuid = 3;
inline void DBBagItem::clear_itemguid() {
  itemguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBBagItem::_internal_itemguid() const {
  return itemguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBBagItem::itemguid() const {
  // @@protoc_insertion_point(field_get:DBBagItem.ItemGuid)
  return _internal_itemguid();
}
inline void DBBagItem::_internal_set_itemguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  itemguid_ = value;
}
inline void DBBagItem::set_itemguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_itemguid(value);
  // @@protoc_insertion_point(field_set:DBBagItem.ItemGuid)
}

// uint32 ItemID = 4;
inline void DBBagItem::clear_itemid() {
  itemid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBBagItem::_internal_itemid() const {
  return itemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBBagItem::itemid() const {
  // @@protoc_insertion_point(field_get:DBBagItem.ItemID)
  return _internal_itemid();
}
inline void DBBagItem::_internal_set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  itemid_ = value;
}
inline void DBBagItem::set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_itemid(value);
  // @@protoc_insertion_point(field_set:DBBagItem.ItemID)
}

// int64 Count = 5;
inline void DBBagItem::clear_count() {
  count_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DBBagItem::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DBBagItem::count() const {
  // @@protoc_insertion_point(field_get:DBBagItem.Count)
  return _internal_count();
}
inline void DBBagItem::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  count_ = value;
}
inline void DBBagItem::set_count(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:DBBagItem.Count)
}

// int32 Bind = 6;
inline void DBBagItem::clear_bind() {
  bind_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBBagItem::_internal_bind() const {
  return bind_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBBagItem::bind() const {
  // @@protoc_insertion_point(field_get:DBBagItem.Bind)
  return _internal_bind();
}
inline void DBBagItem::_internal_set_bind(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bind_ = value;
}
inline void DBBagItem::set_bind(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bind(value);
  // @@protoc_insertion_point(field_set:DBBagItem.Bind)
}

// int32 Status = 7;
inline void DBBagItem::clear_status() {
  status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBBagItem::_internal_status() const {
  return status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBBagItem::status() const {
  // @@protoc_insertion_point(field_get:DBBagItem.Status)
  return _internal_status();
}
inline void DBBagItem::_internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  status_ = value;
}
inline void DBBagItem::set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:DBBagItem.Status)
}

// -------------------------------------------------------------------

// DBBagData

// repeated .DBBagItem ItemList = 1;
inline int DBBagData::_internal_itemlist_size() const {
  return itemlist_.size();
}
inline int DBBagData::itemlist_size() const {
  return _internal_itemlist_size();
}
inline void DBBagData::clear_itemlist() {
  itemlist_.Clear();
}
inline ::DBBagItem* DBBagData::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBBagData.ItemList)
  return itemlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBBagItem >*
DBBagData::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:DBBagData.ItemList)
  return &itemlist_;
}
inline const ::DBBagItem& DBBagData::_internal_itemlist(int index) const {
  return itemlist_.Get(index);
}
inline const ::DBBagItem& DBBagData::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:DBBagData.ItemList)
  return _internal_itemlist(index);
}
inline ::DBBagItem* DBBagData::_internal_add_itemlist() {
  return itemlist_.Add();
}
inline ::DBBagItem* DBBagData::add_itemlist() {
  // @@protoc_insertion_point(field_add:DBBagData.ItemList)
  return _internal_add_itemlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBBagItem >&
DBBagData::itemlist() const {
  // @@protoc_insertion_point(field_list:DBBagData.ItemList)
  return itemlist_;
}

// -------------------------------------------------------------------

// DBCopyItem

// uint64 RoleID = 1;
inline void DBCopyItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBCopyItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBCopyItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.RoleID)
  return _internal_roleid();
}
inline void DBCopyItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBCopyItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.RoleID)
}

// uint32 CopyID = 2;
inline void DBCopyItem::clear_copyid() {
  copyid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBCopyItem::_internal_copyid() const {
  return copyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBCopyItem::copyid() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.CopyID)
  return _internal_copyid();
}
inline void DBCopyItem::_internal_set_copyid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  copyid_ = value;
}
inline void DBCopyItem::set_copyid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.CopyID)
}

// int32 StarNum = 3;
inline void DBCopyItem::clear_starnum() {
  starnum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBCopyItem::_internal_starnum() const {
  return starnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBCopyItem::starnum() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.StarNum)
  return _internal_starnum();
}
inline void DBCopyItem::_internal_set_starnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  starnum_ = value;
}
inline void DBCopyItem::set_starnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_starnum(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.StarNum)
}

// int32 BattleCnt = 4;
inline void DBCopyItem::clear_battlecnt() {
  battlecnt_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBCopyItem::_internal_battlecnt() const {
  return battlecnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBCopyItem::battlecnt() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.BattleCnt)
  return _internal_battlecnt();
}
inline void DBCopyItem::_internal_set_battlecnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  battlecnt_ = value;
}
inline void DBCopyItem::set_battlecnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_battlecnt(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.BattleCnt)
}

// int32 ResetCnt = 5;
inline void DBCopyItem::clear_resetcnt() {
  resetcnt_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBCopyItem::_internal_resetcnt() const {
  return resetcnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBCopyItem::resetcnt() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.ResetCnt)
  return _internal_resetcnt();
}
inline void DBCopyItem::_internal_set_resetcnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  resetcnt_ = value;
}
inline void DBCopyItem::set_resetcnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_resetcnt(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.ResetCnt)
}

// uint64 BattleTime = 6;
inline void DBCopyItem::clear_battletime() {
  battletime_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBCopyItem::_internal_battletime() const {
  return battletime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBCopyItem::battletime() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.BattleTime)
  return _internal_battletime();
}
inline void DBCopyItem::_internal_set_battletime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  battletime_ = value;
}
inline void DBCopyItem::set_battletime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_battletime(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.BattleTime)
}

// uint64 ResetTime = 7;
inline void DBCopyItem::clear_resettime() {
  resettime_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBCopyItem::_internal_resettime() const {
  return resettime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBCopyItem::resettime() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.ResetTime)
  return _internal_resettime();
}
inline void DBCopyItem::_internal_set_resettime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  resettime_ = value;
}
inline void DBCopyItem::set_resettime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_resettime(value);
  // @@protoc_insertion_point(field_set:DBCopyItem.ResetTime)
}

// -------------------------------------------------------------------

// DBChapterItem

// uint64 RoleID = 1;
inline void DBChapterItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBChapterItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBChapterItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.RoleID)
  return _internal_roleid();
}
inline void DBChapterItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBChapterItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBChapterItem.RoleID)
}

// uint32 CopyType = 2;
inline void DBChapterItem::clear_copytype() {
  copytype_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBChapterItem::_internal_copytype() const {
  return copytype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBChapterItem::copytype() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.CopyType)
  return _internal_copytype();
}
inline void DBChapterItem::_internal_set_copytype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  copytype_ = value;
}
inline void DBChapterItem::set_copytype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_copytype(value);
  // @@protoc_insertion_point(field_set:DBChapterItem.CopyType)
}

// uint32 ChapterID = 3;
inline void DBChapterItem::clear_chapterid() {
  chapterid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBChapterItem::_internal_chapterid() const {
  return chapterid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBChapterItem::chapterid() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.ChapterID)
  return _internal_chapterid();
}
inline void DBChapterItem::_internal_set_chapterid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  chapterid_ = value;
}
inline void DBChapterItem::set_chapterid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chapterid(value);
  // @@protoc_insertion_point(field_set:DBChapterItem.ChapterID)
}

// uint32 StarAward = 4;
inline void DBChapterItem::clear_staraward() {
  staraward_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBChapterItem::_internal_staraward() const {
  return staraward_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBChapterItem::staraward() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.StarAward)
  return _internal_staraward();
}
inline void DBChapterItem::_internal_set_staraward(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  staraward_ = value;
}
inline void DBChapterItem::set_staraward(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_staraward(value);
  // @@protoc_insertion_point(field_set:DBChapterItem.StarAward)
}

// uint32 SceneAward = 5;
inline void DBChapterItem::clear_sceneaward() {
  sceneaward_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBChapterItem::_internal_sceneaward() const {
  return sceneaward_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBChapterItem::sceneaward() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.SceneAward)
  return _internal_sceneaward();
}
inline void DBChapterItem::_internal_set_sceneaward(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sceneaward_ = value;
}
inline void DBChapterItem::set_sceneaward(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sceneaward(value);
  // @@protoc_insertion_point(field_set:DBChapterItem.SceneAward)
}

// -------------------------------------------------------------------

// DBCopyData

// repeated .DBCopyItem CopyList = 1;
inline int DBCopyData::_internal_copylist_size() const {
  return copylist_.size();
}
inline int DBCopyData::copylist_size() const {
  return _internal_copylist_size();
}
inline void DBCopyData::clear_copylist() {
  copylist_.Clear();
}
inline ::DBCopyItem* DBCopyData::mutable_copylist(int index) {
  // @@protoc_insertion_point(field_mutable:DBCopyData.CopyList)
  return copylist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBCopyItem >*
DBCopyData::mutable_copylist() {
  // @@protoc_insertion_point(field_mutable_list:DBCopyData.CopyList)
  return &copylist_;
}
inline const ::DBCopyItem& DBCopyData::_internal_copylist(int index) const {
  return copylist_.Get(index);
}
inline const ::DBCopyItem& DBCopyData::copylist(int index) const {
  // @@protoc_insertion_point(field_get:DBCopyData.CopyList)
  return _internal_copylist(index);
}
inline ::DBCopyItem* DBCopyData::_internal_add_copylist() {
  return copylist_.Add();
}
inline ::DBCopyItem* DBCopyData::add_copylist() {
  // @@protoc_insertion_point(field_add:DBCopyData.CopyList)
  return _internal_add_copylist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBCopyItem >&
DBCopyData::copylist() const {
  // @@protoc_insertion_point(field_list:DBCopyData.CopyList)
  return copylist_;
}

// repeated .DBChapterItem ChapterList = 2;
inline int DBCopyData::_internal_chapterlist_size() const {
  return chapterlist_.size();
}
inline int DBCopyData::chapterlist_size() const {
  return _internal_chapterlist_size();
}
inline void DBCopyData::clear_chapterlist() {
  chapterlist_.Clear();
}
inline ::DBChapterItem* DBCopyData::mutable_chapterlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBCopyData.ChapterList)
  return chapterlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBChapterItem >*
DBCopyData::mutable_chapterlist() {
  // @@protoc_insertion_point(field_mutable_list:DBCopyData.ChapterList)
  return &chapterlist_;
}
inline const ::DBChapterItem& DBCopyData::_internal_chapterlist(int index) const {
  return chapterlist_.Get(index);
}
inline const ::DBChapterItem& DBCopyData::chapterlist(int index) const {
  // @@protoc_insertion_point(field_get:DBCopyData.ChapterList)
  return _internal_chapterlist(index);
}
inline ::DBChapterItem* DBCopyData::_internal_add_chapterlist() {
  return chapterlist_.Add();
}
inline ::DBChapterItem* DBCopyData::add_chapterlist() {
  // @@protoc_insertion_point(field_add:DBCopyData.ChapterList)
  return _internal_add_chapterlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBChapterItem >&
DBCopyData::chapterlist() const {
  // @@protoc_insertion_point(field_list:DBCopyData.ChapterList)
  return chapterlist_;
}

// -------------------------------------------------------------------

// DBEquipItem

// uint64 RoleID = 1;
inline void DBEquipItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBEquipItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBEquipItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.RoleID)
  return _internal_roleid();
}
inline void DBEquipItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBEquipItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.RoleID)
}

// uint64 Guid = 2;
inline void DBEquipItem::clear_guid() {
  guid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBEquipItem::_internal_guid() const {
  return guid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBEquipItem::guid() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.Guid)
  return _internal_guid();
}
inline void DBEquipItem::_internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guid_ = value;
}
inline void DBEquipItem::set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.Guid)
}

// int32 EquipID = 3;
inline void DBEquipItem::clear_equipid() {
  equipid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBEquipItem::_internal_equipid() const {
  return equipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBEquipItem::equipid() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.EquipID)
  return _internal_equipid();
}
inline void DBEquipItem::_internal_set_equipid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  equipid_ = value;
}
inline void DBEquipItem::set_equipid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_equipid(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.EquipID)
}

// int32 StrengthLvl = 4;
inline void DBEquipItem::clear_strengthlvl() {
  strengthlvl_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBEquipItem::_internal_strengthlvl() const {
  return strengthlvl_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBEquipItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.StrengthLvl)
  return _internal_strengthlvl();
}
inline void DBEquipItem::_internal_set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  strengthlvl_ = value;
}
inline void DBEquipItem::set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_strengthlvl(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.StrengthLvl)
}

// int32 RefineLevel = 5;
inline void DBEquipItem::clear_refinelevel() {
  refinelevel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBEquipItem::_internal_refinelevel() const {
  return refinelevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBEquipItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.RefineLevel)
  return _internal_refinelevel();
}
inline void DBEquipItem::_internal_set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  refinelevel_ = value;
}
inline void DBEquipItem::set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_refinelevel(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.RefineLevel)
}

// int32 StarLevel = 6;
inline void DBEquipItem::clear_starlevel() {
  starlevel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBEquipItem::_internal_starlevel() const {
  return starlevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBEquipItem::starlevel() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.StarLevel)
  return _internal_starlevel();
}
inline void DBEquipItem::_internal_set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  starlevel_ = value;
}
inline void DBEquipItem::set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_starlevel(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.StarLevel)
}

// int32 RefineExp = 7;
inline void DBEquipItem::clear_refineexp() {
  refineexp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBEquipItem::_internal_refineexp() const {
  return refineexp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBEquipItem::refineexp() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.RefineExp)
  return _internal_refineexp();
}
inline void DBEquipItem::_internal_set_refineexp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  refineexp_ = value;
}
inline void DBEquipItem::set_refineexp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_refineexp(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.RefineExp)
}

// int32 StarExp = 8;
inline void DBEquipItem::clear_starexp() {
  starexp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBEquipItem::_internal_starexp() const {
  return starexp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBEquipItem::starexp() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.StarExp)
  return _internal_starexp();
}
inline void DBEquipItem::_internal_set_starexp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  starexp_ = value;
}
inline void DBEquipItem::set_starexp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_starexp(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.StarExp)
}

// bool IsUsing = 9;
inline void DBEquipItem::clear_isusing() {
  isusing_ = false;
}
inline bool DBEquipItem::_internal_isusing() const {
  return isusing_;
}
inline bool DBEquipItem::isusing() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.IsUsing)
  return _internal_isusing();
}
inline void DBEquipItem::_internal_set_isusing(bool value) {
  
  isusing_ = value;
}
inline void DBEquipItem::set_isusing(bool value) {
  _internal_set_isusing(value);
  // @@protoc_insertion_point(field_set:DBEquipItem.IsUsing)
}

// -------------------------------------------------------------------

// DBEquipData

// repeated .DBEquipItem EquipList = 1;
inline int DBEquipData::_internal_equiplist_size() const {
  return equiplist_.size();
}
inline int DBEquipData::equiplist_size() const {
  return _internal_equiplist_size();
}
inline void DBEquipData::clear_equiplist() {
  equiplist_.Clear();
}
inline ::DBEquipItem* DBEquipData::mutable_equiplist(int index) {
  // @@protoc_insertion_point(field_mutable:DBEquipData.EquipList)
  return equiplist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBEquipItem >*
DBEquipData::mutable_equiplist() {
  // @@protoc_insertion_point(field_mutable_list:DBEquipData.EquipList)
  return &equiplist_;
}
inline const ::DBEquipItem& DBEquipData::_internal_equiplist(int index) const {
  return equiplist_.Get(index);
}
inline const ::DBEquipItem& DBEquipData::equiplist(int index) const {
  // @@protoc_insertion_point(field_get:DBEquipData.EquipList)
  return _internal_equiplist(index);
}
inline ::DBEquipItem* DBEquipData::_internal_add_equiplist() {
  return equiplist_.Add();
}
inline ::DBEquipItem* DBEquipData::add_equiplist() {
  // @@protoc_insertion_point(field_add:DBEquipData.EquipList)
  return _internal_add_equiplist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBEquipItem >&
DBEquipData::equiplist() const {
  // @@protoc_insertion_point(field_list:DBEquipData.EquipList)
  return equiplist_;
}

// -------------------------------------------------------------------

// DBGemItem

// uint64 RoleID = 1;
inline void DBGemItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBGemItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBGemItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBGemItem.RoleID)
  return _internal_roleid();
}
inline void DBGemItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBGemItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBGemItem.RoleID)
}

// uint64 Guid = 2;
inline void DBGemItem::clear_guid() {
  guid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBGemItem::_internal_guid() const {
  return guid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBGemItem::guid() const {
  // @@protoc_insertion_point(field_get:DBGemItem.Guid)
  return _internal_guid();
}
inline void DBGemItem::_internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guid_ = value;
}
inline void DBGemItem::set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBGemItem.Guid)
}

// int32 GemID = 3;
inline void DBGemItem::clear_gemid() {
  gemid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::_internal_gemid() const {
  return gemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::gemid() const {
  // @@protoc_insertion_point(field_get:DBGemItem.GemID)
  return _internal_gemid();
}
inline void DBGemItem::_internal_set_gemid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  gemid_ = value;
}
inline void DBGemItem::set_gemid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_gemid(value);
  // @@protoc_insertion_point(field_set:DBGemItem.GemID)
}

// int32 StrengthLvl = 4;
inline void DBGemItem::clear_strengthlvl() {
  strengthlvl_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::_internal_strengthlvl() const {
  return strengthlvl_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:DBGemItem.StrengthLvl)
  return _internal_strengthlvl();
}
inline void DBGemItem::_internal_set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  strengthlvl_ = value;
}
inline void DBGemItem::set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_strengthlvl(value);
  // @@protoc_insertion_point(field_set:DBGemItem.StrengthLvl)
}

// int32 RefineLevel = 5;
inline void DBGemItem::clear_refinelevel() {
  refinelevel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::_internal_refinelevel() const {
  return refinelevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:DBGemItem.RefineLevel)
  return _internal_refinelevel();
}
inline void DBGemItem::_internal_set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  refinelevel_ = value;
}
inline void DBGemItem::set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_refinelevel(value);
  // @@protoc_insertion_point(field_set:DBGemItem.RefineLevel)
}

// int32 StarLevel = 6;
inline void DBGemItem::clear_starlevel() {
  starlevel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::_internal_starlevel() const {
  return starlevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::starlevel() const {
  // @@protoc_insertion_point(field_get:DBGemItem.StarLevel)
  return _internal_starlevel();
}
inline void DBGemItem::_internal_set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  starlevel_ = value;
}
inline void DBGemItem::set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_starlevel(value);
  // @@protoc_insertion_point(field_set:DBGemItem.StarLevel)
}

// int32 RefineExp = 7;
inline void DBGemItem::clear_refineexp() {
  refineexp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::_internal_refineexp() const {
  return refineexp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::refineexp() const {
  // @@protoc_insertion_point(field_get:DBGemItem.RefineExp)
  return _internal_refineexp();
}
inline void DBGemItem::_internal_set_refineexp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  refineexp_ = value;
}
inline void DBGemItem::set_refineexp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_refineexp(value);
  // @@protoc_insertion_point(field_set:DBGemItem.RefineExp)
}

// int32 StarExp = 8;
inline void DBGemItem::clear_starexp() {
  starexp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::_internal_starexp() const {
  return starexp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::starexp() const {
  // @@protoc_insertion_point(field_get:DBGemItem.StarExp)
  return _internal_starexp();
}
inline void DBGemItem::_internal_set_starexp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  starexp_ = value;
}
inline void DBGemItem::set_starexp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_starexp(value);
  // @@protoc_insertion_point(field_set:DBGemItem.StarExp)
}

// int32 Pos = 9;
inline void DBGemItem::clear_pos() {
  pos_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::_internal_pos() const {
  return pos_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBGemItem::pos() const {
  // @@protoc_insertion_point(field_get:DBGemItem.Pos)
  return _internal_pos();
}
inline void DBGemItem::_internal_set_pos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pos_ = value;
}
inline void DBGemItem::set_pos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pos(value);
  // @@protoc_insertion_point(field_set:DBGemItem.Pos)
}

// -------------------------------------------------------------------

// DBGemData

// repeated .DBGemItem GemList = 1;
inline int DBGemData::_internal_gemlist_size() const {
  return gemlist_.size();
}
inline int DBGemData::gemlist_size() const {
  return _internal_gemlist_size();
}
inline void DBGemData::clear_gemlist() {
  gemlist_.Clear();
}
inline ::DBGemItem* DBGemData::mutable_gemlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBGemData.GemList)
  return gemlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBGemItem >*
DBGemData::mutable_gemlist() {
  // @@protoc_insertion_point(field_mutable_list:DBGemData.GemList)
  return &gemlist_;
}
inline const ::DBGemItem& DBGemData::_internal_gemlist(int index) const {
  return gemlist_.Get(index);
}
inline const ::DBGemItem& DBGemData::gemlist(int index) const {
  // @@protoc_insertion_point(field_get:DBGemData.GemList)
  return _internal_gemlist(index);
}
inline ::DBGemItem* DBGemData::_internal_add_gemlist() {
  return gemlist_.Add();
}
inline ::DBGemItem* DBGemData::add_gemlist() {
  // @@protoc_insertion_point(field_add:DBGemData.GemList)
  return _internal_add_gemlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBGemItem >&
DBGemData::gemlist() const {
  // @@protoc_insertion_point(field_list:DBGemData.GemList)
  return gemlist_;
}

// -------------------------------------------------------------------

// DBSkillItem

// uint64 RoleID = 1;
inline void DBSkillItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBSkillItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBSkillItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.RoleID)
  return _internal_roleid();
}
inline void DBSkillItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBSkillItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBSkillItem.RoleID)
}

// uint32 SkillID = 2;
inline void DBSkillItem::clear_skillid() {
  skillid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBSkillItem::_internal_skillid() const {
  return skillid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBSkillItem::skillid() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.SkillID)
  return _internal_skillid();
}
inline void DBSkillItem::_internal_set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  skillid_ = value;
}
inline void DBSkillItem::set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skillid(value);
  // @@protoc_insertion_point(field_set:DBSkillItem.SkillID)
}

// int32 Level = 3;
inline void DBSkillItem::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBSkillItem::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBSkillItem::level() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.Level)
  return _internal_level();
}
inline void DBSkillItem::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void DBSkillItem::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:DBSkillItem.Level)
}

// int32 KeyPos = 4;
inline void DBSkillItem::clear_keypos() {
  keypos_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBSkillItem::_internal_keypos() const {
  return keypos_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBSkillItem::keypos() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.KeyPos)
  return _internal_keypos();
}
inline void DBSkillItem::_internal_set_keypos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  keypos_ = value;
}
inline void DBSkillItem::set_keypos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_keypos(value);
  // @@protoc_insertion_point(field_set:DBSkillItem.KeyPos)
}

// -------------------------------------------------------------------

// DBSkillData

// repeated .DBSkillItem SkillList = 1;
inline int DBSkillData::_internal_skilllist_size() const {
  return skilllist_.size();
}
inline int DBSkillData::skilllist_size() const {
  return _internal_skilllist_size();
}
inline void DBSkillData::clear_skilllist() {
  skilllist_.Clear();
}
inline ::DBSkillItem* DBSkillData::mutable_skilllist(int index) {
  // @@protoc_insertion_point(field_mutable:DBSkillData.SkillList)
  return skilllist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBSkillItem >*
DBSkillData::mutable_skilllist() {
  // @@protoc_insertion_point(field_mutable_list:DBSkillData.SkillList)
  return &skilllist_;
}
inline const ::DBSkillItem& DBSkillData::_internal_skilllist(int index) const {
  return skilllist_.Get(index);
}
inline const ::DBSkillItem& DBSkillData::skilllist(int index) const {
  // @@protoc_insertion_point(field_get:DBSkillData.SkillList)
  return _internal_skilllist(index);
}
inline ::DBSkillItem* DBSkillData::_internal_add_skilllist() {
  return skilllist_.Add();
}
inline ::DBSkillItem* DBSkillData::add_skilllist() {
  // @@protoc_insertion_point(field_add:DBSkillData.SkillList)
  return _internal_add_skilllist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBSkillItem >&
DBSkillData::skilllist() const {
  // @@protoc_insertion_point(field_list:DBSkillData.SkillList)
  return skilllist_;
}

// -------------------------------------------------------------------

// DBPetItem

// uint64 RoleID = 1;
inline void DBPetItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBPetItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBPetItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBPetItem.RoleID)
  return _internal_roleid();
}
inline void DBPetItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBPetItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBPetItem.RoleID)
}

// uint64 Guid = 2;
inline void DBPetItem::clear_guid() {
  guid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBPetItem::_internal_guid() const {
  return guid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBPetItem::guid() const {
  // @@protoc_insertion_point(field_get:DBPetItem.Guid)
  return _internal_guid();
}
inline void DBPetItem::_internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guid_ = value;
}
inline void DBPetItem::set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBPetItem.Guid)
}

// int32 PetID = 3;
inline void DBPetItem::clear_petid() {
  petid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPetItem::_internal_petid() const {
  return petid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPetItem::petid() const {
  // @@protoc_insertion_point(field_get:DBPetItem.PetID)
  return _internal_petid();
}
inline void DBPetItem::_internal_set_petid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  petid_ = value;
}
inline void DBPetItem::set_petid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_petid(value);
  // @@protoc_insertion_point(field_set:DBPetItem.PetID)
}

// int32 StrengthLvl = 4;
inline void DBPetItem::clear_strengthlvl() {
  strengthlvl_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPetItem::_internal_strengthlvl() const {
  return strengthlvl_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPetItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:DBPetItem.StrengthLvl)
  return _internal_strengthlvl();
}
inline void DBPetItem::_internal_set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  strengthlvl_ = value;
}
inline void DBPetItem::set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_strengthlvl(value);
  // @@protoc_insertion_point(field_set:DBPetItem.StrengthLvl)
}

// int32 RefineLevel = 5;
inline void DBPetItem::clear_refinelevel() {
  refinelevel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPetItem::_internal_refinelevel() const {
  return refinelevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPetItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:DBPetItem.RefineLevel)
  return _internal_refinelevel();
}
inline void DBPetItem::_internal_set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  refinelevel_ = value;
}
inline void DBPetItem::set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_refinelevel(value);
  // @@protoc_insertion_point(field_set:DBPetItem.RefineLevel)
}

// int32 StarLevel = 6;
inline void DBPetItem::clear_starlevel() {
  starlevel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPetItem::_internal_starlevel() const {
  return starlevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPetItem::starlevel() const {
  // @@protoc_insertion_point(field_get:DBPetItem.StarLevel)
  return _internal_starlevel();
}
inline void DBPetItem::_internal_set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  starlevel_ = value;
}
inline void DBPetItem::set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_starlevel(value);
  // @@protoc_insertion_point(field_set:DBPetItem.StarLevel)
}

// bool IsUsing = 7;
inline void DBPetItem::clear_isusing() {
  isusing_ = false;
}
inline bool DBPetItem::_internal_isusing() const {
  return isusing_;
}
inline bool DBPetItem::isusing() const {
  // @@protoc_insertion_point(field_get:DBPetItem.IsUsing)
  return _internal_isusing();
}
inline void DBPetItem::_internal_set_isusing(bool value) {
  
  isusing_ = value;
}
inline void DBPetItem::set_isusing(bool value) {
  _internal_set_isusing(value);
  // @@protoc_insertion_point(field_set:DBPetItem.IsUsing)
}

// -------------------------------------------------------------------

// DBPetData

// repeated .DBPetItem PetList = 1;
inline int DBPetData::_internal_petlist_size() const {
  return petlist_.size();
}
inline int DBPetData::petlist_size() const {
  return _internal_petlist_size();
}
inline void DBPetData::clear_petlist() {
  petlist_.Clear();
}
inline ::DBPetItem* DBPetData::mutable_petlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBPetData.PetList)
  return petlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBPetItem >*
DBPetData::mutable_petlist() {
  // @@protoc_insertion_point(field_mutable_list:DBPetData.PetList)
  return &petlist_;
}
inline const ::DBPetItem& DBPetData::_internal_petlist(int index) const {
  return petlist_.Get(index);
}
inline const ::DBPetItem& DBPetData::petlist(int index) const {
  // @@protoc_insertion_point(field_get:DBPetData.PetList)
  return _internal_petlist(index);
}
inline ::DBPetItem* DBPetData::_internal_add_petlist() {
  return petlist_.Add();
}
inline ::DBPetItem* DBPetData::add_petlist() {
  // @@protoc_insertion_point(field_add:DBPetData.PetList)
  return _internal_add_petlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBPetItem >&
DBPetData::petlist() const {
  // @@protoc_insertion_point(field_list:DBPetData.PetList)
  return petlist_;
}

// -------------------------------------------------------------------

// DBMountItem

// uint64 RoleID = 1;
inline void DBMountItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMountItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMountItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBMountItem.RoleID)
  return _internal_roleid();
}
inline void DBMountItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBMountItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBMountItem.RoleID)
}

// uint64 Guid = 2;
inline void DBMountItem::clear_guid() {
  guid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMountItem::_internal_guid() const {
  return guid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMountItem::guid() const {
  // @@protoc_insertion_point(field_get:DBMountItem.Guid)
  return _internal_guid();
}
inline void DBMountItem::_internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guid_ = value;
}
inline void DBMountItem::set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBMountItem.Guid)
}

// int32 MountID = 3;
inline void DBMountItem::clear_mountid() {
  mountid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBMountItem::_internal_mountid() const {
  return mountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBMountItem::mountid() const {
  // @@protoc_insertion_point(field_get:DBMountItem.MountID)
  return _internal_mountid();
}
inline void DBMountItem::_internal_set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mountid_ = value;
}
inline void DBMountItem::set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mountid(value);
  // @@protoc_insertion_point(field_set:DBMountItem.MountID)
}

// int32 StrengthLvl = 4;
inline void DBMountItem::clear_strengthlvl() {
  strengthlvl_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBMountItem::_internal_strengthlvl() const {
  return strengthlvl_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBMountItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:DBMountItem.StrengthLvl)
  return _internal_strengthlvl();
}
inline void DBMountItem::_internal_set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  strengthlvl_ = value;
}
inline void DBMountItem::set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_strengthlvl(value);
  // @@protoc_insertion_point(field_set:DBMountItem.StrengthLvl)
}

// int32 RefineLevel = 5;
inline void DBMountItem::clear_refinelevel() {
  refinelevel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBMountItem::_internal_refinelevel() const {
  return refinelevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBMountItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:DBMountItem.RefineLevel)
  return _internal_refinelevel();
}
inline void DBMountItem::_internal_set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  refinelevel_ = value;
}
inline void DBMountItem::set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_refinelevel(value);
  // @@protoc_insertion_point(field_set:DBMountItem.RefineLevel)
}

// int32 StarLevel = 6;
inline void DBMountItem::clear_starlevel() {
  starlevel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBMountItem::_internal_starlevel() const {
  return starlevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBMountItem::starlevel() const {
  // @@protoc_insertion_point(field_get:DBMountItem.StarLevel)
  return _internal_starlevel();
}
inline void DBMountItem::_internal_set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  starlevel_ = value;
}
inline void DBMountItem::set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_starlevel(value);
  // @@protoc_insertion_point(field_set:DBMountItem.StarLevel)
}

// bool IsUsing = 7;
inline void DBMountItem::clear_isusing() {
  isusing_ = false;
}
inline bool DBMountItem::_internal_isusing() const {
  return isusing_;
}
inline bool DBMountItem::isusing() const {
  // @@protoc_insertion_point(field_get:DBMountItem.IsUsing)
  return _internal_isusing();
}
inline void DBMountItem::_internal_set_isusing(bool value) {
  
  isusing_ = value;
}
inline void DBMountItem::set_isusing(bool value) {
  _internal_set_isusing(value);
  // @@protoc_insertion_point(field_set:DBMountItem.IsUsing)
}

// -------------------------------------------------------------------

// DBMountData

// repeated .DBMountItem MountList = 1;
inline int DBMountData::_internal_mountlist_size() const {
  return mountlist_.size();
}
inline int DBMountData::mountlist_size() const {
  return _internal_mountlist_size();
}
inline void DBMountData::clear_mountlist() {
  mountlist_.Clear();
}
inline ::DBMountItem* DBMountData::mutable_mountlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBMountData.MountList)
  return mountlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBMountItem >*
DBMountData::mutable_mountlist() {
  // @@protoc_insertion_point(field_mutable_list:DBMountData.MountList)
  return &mountlist_;
}
inline const ::DBMountItem& DBMountData::_internal_mountlist(int index) const {
  return mountlist_.Get(index);
}
inline const ::DBMountItem& DBMountData::mountlist(int index) const {
  // @@protoc_insertion_point(field_get:DBMountData.MountList)
  return _internal_mountlist(index);
}
inline ::DBMountItem* DBMountData::_internal_add_mountlist() {
  return mountlist_.Add();
}
inline ::DBMountItem* DBMountData::add_mountlist() {
  // @@protoc_insertion_point(field_add:DBMountData.MountList)
  return _internal_add_mountlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBMountItem >&
DBMountData::mountlist() const {
  // @@protoc_insertion_point(field_list:DBMountData.MountList)
  return mountlist_;
}

// -------------------------------------------------------------------

// DBPartnerItem

// uint64 RoleID = 1;
inline void DBPartnerItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBPartnerItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBPartnerItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.RoleID)
  return _internal_roleid();
}
inline void DBPartnerItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBPartnerItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.RoleID)
}

// uint64 Guid = 2;
inline void DBPartnerItem::clear_guid() {
  guid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBPartnerItem::_internal_guid() const {
  return guid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBPartnerItem::guid() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.Guid)
  return _internal_guid();
}
inline void DBPartnerItem::_internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guid_ = value;
}
inline void DBPartnerItem::set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.Guid)
}

// int32 PartnerID = 3;
inline void DBPartnerItem::clear_partnerid() {
  partnerid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPartnerItem::_internal_partnerid() const {
  return partnerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPartnerItem::partnerid() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.PartnerID)
  return _internal_partnerid();
}
inline void DBPartnerItem::_internal_set_partnerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  partnerid_ = value;
}
inline void DBPartnerItem::set_partnerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_partnerid(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.PartnerID)
}

// int32 StrengthLvl = 4;
inline void DBPartnerItem::clear_strengthlvl() {
  strengthlvl_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPartnerItem::_internal_strengthlvl() const {
  return strengthlvl_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPartnerItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.StrengthLvl)
  return _internal_strengthlvl();
}
inline void DBPartnerItem::_internal_set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  strengthlvl_ = value;
}
inline void DBPartnerItem::set_strengthlvl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_strengthlvl(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.StrengthLvl)
}

// int32 RefineLevel = 5;
inline void DBPartnerItem::clear_refinelevel() {
  refinelevel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPartnerItem::_internal_refinelevel() const {
  return refinelevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPartnerItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.RefineLevel)
  return _internal_refinelevel();
}
inline void DBPartnerItem::_internal_set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  refinelevel_ = value;
}
inline void DBPartnerItem::set_refinelevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_refinelevel(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.RefineLevel)
}

// int32 StarLevel = 6;
inline void DBPartnerItem::clear_starlevel() {
  starlevel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPartnerItem::_internal_starlevel() const {
  return starlevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPartnerItem::starlevel() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.StarLevel)
  return _internal_starlevel();
}
inline void DBPartnerItem::_internal_set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  starlevel_ = value;
}
inline void DBPartnerItem::set_starlevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_starlevel(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.StarLevel)
}

// int32 SetPos = 7;
inline void DBPartnerItem::clear_setpos() {
  setpos_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPartnerItem::_internal_setpos() const {
  return setpos_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBPartnerItem::setpos() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.SetPos)
  return _internal_setpos();
}
inline void DBPartnerItem::_internal_set_setpos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  setpos_ = value;
}
inline void DBPartnerItem::set_setpos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_setpos(value);
  // @@protoc_insertion_point(field_set:DBPartnerItem.SetPos)
}

// -------------------------------------------------------------------

// DBPartnerData

// repeated .DBPartnerItem PartnerList = 1;
inline int DBPartnerData::_internal_partnerlist_size() const {
  return partnerlist_.size();
}
inline int DBPartnerData::partnerlist_size() const {
  return _internal_partnerlist_size();
}
inline void DBPartnerData::clear_partnerlist() {
  partnerlist_.Clear();
}
inline ::DBPartnerItem* DBPartnerData::mutable_partnerlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBPartnerData.PartnerList)
  return partnerlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBPartnerItem >*
DBPartnerData::mutable_partnerlist() {
  // @@protoc_insertion_point(field_mutable_list:DBPartnerData.PartnerList)
  return &partnerlist_;
}
inline const ::DBPartnerItem& DBPartnerData::_internal_partnerlist(int index) const {
  return partnerlist_.Get(index);
}
inline const ::DBPartnerItem& DBPartnerData::partnerlist(int index) const {
  // @@protoc_insertion_point(field_get:DBPartnerData.PartnerList)
  return _internal_partnerlist(index);
}
inline ::DBPartnerItem* DBPartnerData::_internal_add_partnerlist() {
  return partnerlist_.Add();
}
inline ::DBPartnerItem* DBPartnerData::add_partnerlist() {
  // @@protoc_insertion_point(field_add:DBPartnerData.PartnerList)
  return _internal_add_partnerlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBPartnerItem >&
DBPartnerData::partnerlist() const {
  // @@protoc_insertion_point(field_list:DBPartnerData.PartnerList)
  return partnerlist_;
}

// -------------------------------------------------------------------

// DBTaskItem

// uint64 RoleID = 1;
inline void DBTaskItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBTaskItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBTaskItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBTaskItem.RoleID)
  return _internal_roleid();
}
inline void DBTaskItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBTaskItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBTaskItem.RoleID)
}

// uint32 TaskID = 2;
inline void DBTaskItem::clear_taskid() {
  taskid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBTaskItem::_internal_taskid() const {
  return taskid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBTaskItem::taskid() const {
  // @@protoc_insertion_point(field_get:DBTaskItem.TaskID)
  return _internal_taskid();
}
inline void DBTaskItem::_internal_set_taskid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  taskid_ = value;
}
inline void DBTaskItem::set_taskid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_taskid(value);
  // @@protoc_insertion_point(field_set:DBTaskItem.TaskID)
}

// int32 Status = 3;
inline void DBTaskItem::clear_status() {
  status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBTaskItem::_internal_status() const {
  return status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBTaskItem::status() const {
  // @@protoc_insertion_point(field_get:DBTaskItem.Status)
  return _internal_status();
}
inline void DBTaskItem::_internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  status_ = value;
}
inline void DBTaskItem::set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:DBTaskItem.Status)
}

// int32 Progress = 4;
inline void DBTaskItem::clear_progress() {
  progress_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBTaskItem::_internal_progress() const {
  return progress_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DBTaskItem::progress() const {
  // @@protoc_insertion_point(field_get:DBTaskItem.Progress)
  return _internal_progress();
}
inline void DBTaskItem::_internal_set_progress(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  progress_ = value;
}
inline void DBTaskItem::set_progress(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_progress(value);
  // @@protoc_insertion_point(field_set:DBTaskItem.Progress)
}

// -------------------------------------------------------------------

// DBTaskData

// repeated .DBTaskItem TaskList = 1;
inline int DBTaskData::_internal_tasklist_size() const {
  return tasklist_.size();
}
inline int DBTaskData::tasklist_size() const {
  return _internal_tasklist_size();
}
inline void DBTaskData::clear_tasklist() {
  tasklist_.Clear();
}
inline ::DBTaskItem* DBTaskData::mutable_tasklist(int index) {
  // @@protoc_insertion_point(field_mutable:DBTaskData.TaskList)
  return tasklist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBTaskItem >*
DBTaskData::mutable_tasklist() {
  // @@protoc_insertion_point(field_mutable_list:DBTaskData.TaskList)
  return &tasklist_;
}
inline const ::DBTaskItem& DBTaskData::_internal_tasklist(int index) const {
  return tasklist_.Get(index);
}
inline const ::DBTaskItem& DBTaskData::tasklist(int index) const {
  // @@protoc_insertion_point(field_get:DBTaskData.TaskList)
  return _internal_tasklist(index);
}
inline ::DBTaskItem* DBTaskData::_internal_add_tasklist() {
  return tasklist_.Add();
}
inline ::DBTaskItem* DBTaskData::add_tasklist() {
  // @@protoc_insertion_point(field_add:DBTaskData.TaskList)
  return _internal_add_tasklist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBTaskItem >&
DBTaskData::tasklist() const {
  // @@protoc_insertion_point(field_list:DBTaskData.TaskList)
  return tasklist_;
}

// -------------------------------------------------------------------

// DBMailItem

// uint64 RoleID = 1;
inline void DBMailItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMailItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMailItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBMailItem.RoleID)
  return _internal_roleid();
}
inline void DBMailItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBMailItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBMailItem.RoleID)
}

// uint64 Guid = 2;
inline void DBMailItem::clear_guid() {
  guid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMailItem::_internal_guid() const {
  return guid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMailItem::guid() const {
  // @@protoc_insertion_point(field_get:DBMailItem.Guid)
  return _internal_guid();
}
inline void DBMailItem::_internal_set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guid_ = value;
}
inline void DBMailItem::set_guid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:DBMailItem.Guid)
}

// uint64 GroupID = 3;
inline void DBMailItem::clear_groupid() {
  groupid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMailItem::_internal_groupid() const {
  return groupid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMailItem::groupid() const {
  // @@protoc_insertion_point(field_get:DBMailItem.GroupID)
  return _internal_groupid();
}
inline void DBMailItem::_internal_set_groupid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  groupid_ = value;
}
inline void DBMailItem::set_groupid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_groupid(value);
  // @@protoc_insertion_point(field_set:DBMailItem.GroupID)
}

// uint64 Time = 4;
inline void DBMailItem::clear_time() {
  time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMailItem::_internal_time() const {
  return time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMailItem::time() const {
  // @@protoc_insertion_point(field_get:DBMailItem.Time)
  return _internal_time();
}
inline void DBMailItem::_internal_set_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  time_ = value;
}
inline void DBMailItem::set_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:DBMailItem.Time)
}

// uint64 SenderID = 5;
inline void DBMailItem::clear_senderid() {
  senderid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMailItem::_internal_senderid() const {
  return senderid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBMailItem::senderid() const {
  // @@protoc_insertion_point(field_get:DBMailItem.SenderID)
  return _internal_senderid();
}
inline void DBMailItem::_internal_set_senderid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  senderid_ = value;
}
inline void DBMailItem::set_senderid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_senderid(value);
  // @@protoc_insertion_point(field_set:DBMailItem.SenderID)
}

// string Sender = 6;
inline void DBMailItem::clear_sender() {
  sender_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DBMailItem::sender() const {
  // @@protoc_insertion_point(field_get:DBMailItem.Sender)
  return _internal_sender();
}
inline void DBMailItem::set_sender(const std::string& value) {
  _internal_set_sender(value);
  // @@protoc_insertion_point(field_set:DBMailItem.Sender)
}
inline std::string* DBMailItem::mutable_sender() {
  // @@protoc_insertion_point(field_mutable:DBMailItem.Sender)
  return _internal_mutable_sender();
}
inline const std::string& DBMailItem::_internal_sender() const {
  return sender_.Get();
}
inline void DBMailItem::_internal_set_sender(const std::string& value) {
  
  sender_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DBMailItem::set_sender(std::string&& value) {
  
  sender_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:DBMailItem.Sender)
}
inline void DBMailItem::set_sender(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sender_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:DBMailItem.Sender)
}
inline void DBMailItem::set_sender(const char* value,
    size_t size) {
  
  sender_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:DBMailItem.Sender)
}
inline std::string* DBMailItem::_internal_mutable_sender() {
  
  return sender_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DBMailItem::release_sender() {
  // @@protoc_insertion_point(field_release:DBMailItem.Sender)
  return sender_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DBMailItem::set_allocated_sender(std::string* sender) {
  if (sender != nullptr) {
    
  } else {
    
  }
  sender_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sender,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:DBMailItem.Sender)
}
inline std::string* DBMailItem::unsafe_arena_release_sender() {
  // @@protoc_insertion_point(field_unsafe_arena_release:DBMailItem.Sender)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return sender_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DBMailItem::unsafe_arena_set_allocated_sender(
    std::string* sender) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (sender != nullptr) {
    
  } else {
    
  }
  sender_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      sender, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBMailItem.Sender)
}

// uint32 MailType = 7;
inline void DBMailItem::clear_mailtype() {
  mailtype_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBMailItem::_internal_mailtype() const {
  return mailtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBMailItem::mailtype() const {
  // @@protoc_insertion_point(field_get:DBMailItem.MailType)
  return _internal_mailtype();
}
inline void DBMailItem::_internal_set_mailtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  mailtype_ = value;
}
inline void DBMailItem::set_mailtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mailtype(value);
  // @@protoc_insertion_point(field_set:DBMailItem.MailType)
}

// uint32 Status = 8;
inline void DBMailItem::clear_status() {
  status_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBMailItem::_internal_status() const {
  return status_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBMailItem::status() const {
  // @@protoc_insertion_point(field_get:DBMailItem.Status)
  return _internal_status();
}
inline void DBMailItem::_internal_set_status(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  status_ = value;
}
inline void DBMailItem::set_status(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:DBMailItem.Status)
}

// string Title = 9;
inline void DBMailItem::clear_title() {
  title_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DBMailItem::title() const {
  // @@protoc_insertion_point(field_get:DBMailItem.Title)
  return _internal_title();
}
inline void DBMailItem::set_title(const std::string& value) {
  _internal_set_title(value);
  // @@protoc_insertion_point(field_set:DBMailItem.Title)
}
inline std::string* DBMailItem::mutable_title() {
  // @@protoc_insertion_point(field_mutable:DBMailItem.Title)
  return _internal_mutable_title();
}
inline const std::string& DBMailItem::_internal_title() const {
  return title_.Get();
}
inline void DBMailItem::_internal_set_title(const std::string& value) {
  
  title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DBMailItem::set_title(std::string&& value) {
  
  title_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:DBMailItem.Title)
}
inline void DBMailItem::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:DBMailItem.Title)
}
inline void DBMailItem::set_title(const char* value,
    size_t size) {
  
  title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:DBMailItem.Title)
}
inline std::string* DBMailItem::_internal_mutable_title() {
  
  return title_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DBMailItem::release_title() {
  // @@protoc_insertion_point(field_release:DBMailItem.Title)
  return title_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DBMailItem::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    
  } else {
    
  }
  title_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), title,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:DBMailItem.Title)
}
inline std::string* DBMailItem::unsafe_arena_release_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:DBMailItem.Title)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return title_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DBMailItem::unsafe_arena_set_allocated_title(
    std::string* title) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (title != nullptr) {
    
  } else {
    
  }
  title_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      title, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBMailItem.Title)
}

// string Content = 10;
inline void DBMailItem::clear_content() {
  content_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DBMailItem::content() const {
  // @@protoc_insertion_point(field_get:DBMailItem.Content)
  return _internal_content();
}
inline void DBMailItem::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:DBMailItem.Content)
}
inline std::string* DBMailItem::mutable_content() {
  // @@protoc_insertion_point(field_mutable:DBMailItem.Content)
  return _internal_mutable_content();
}
inline const std::string& DBMailItem::_internal_content() const {
  return content_.Get();
}
inline void DBMailItem::_internal_set_content(const std::string& value) {
  
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DBMailItem::set_content(std::string&& value) {
  
  content_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:DBMailItem.Content)
}
inline void DBMailItem::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:DBMailItem.Content)
}
inline void DBMailItem::set_content(const char* value,
    size_t size) {
  
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:DBMailItem.Content)
}
inline std::string* DBMailItem::_internal_mutable_content() {
  
  return content_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DBMailItem::release_content() {
  // @@protoc_insertion_point(field_release:DBMailItem.Content)
  return content_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DBMailItem::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:DBMailItem.Content)
}
inline std::string* DBMailItem::unsafe_arena_release_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:DBMailItem.Content)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return content_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DBMailItem::unsafe_arena_set_allocated_content(
    std::string* content) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (content != nullptr) {
    
  } else {
    
  }
  content_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      content, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBMailItem.Content)
}

// bytes Items = 11;
inline void DBMailItem::clear_items() {
  items_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DBMailItem::items() const {
  // @@protoc_insertion_point(field_get:DBMailItem.Items)
  return _internal_items();
}
inline void DBMailItem::set_items(const std::string& value) {
  _internal_set_items(value);
  // @@protoc_insertion_point(field_set:DBMailItem.Items)
}
inline std::string* DBMailItem::mutable_items() {
  // @@protoc_insertion_point(field_mutable:DBMailItem.Items)
  return _internal_mutable_items();
}
inline const std::string& DBMailItem::_internal_items() const {
  return items_.Get();
}
inline void DBMailItem::_internal_set_items(const std::string& value) {
  
  items_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DBMailItem::set_items(std::string&& value) {
  
  items_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:DBMailItem.Items)
}
inline void DBMailItem::set_items(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  items_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:DBMailItem.Items)
}
inline void DBMailItem::set_items(const void* value,
    size_t size) {
  
  items_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:DBMailItem.Items)
}
inline std::string* DBMailItem::_internal_mutable_items() {
  
  return items_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DBMailItem::release_items() {
  // @@protoc_insertion_point(field_release:DBMailItem.Items)
  return items_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DBMailItem::set_allocated_items(std::string* items) {
  if (items != nullptr) {
    
  } else {
    
  }
  items_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), items,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:DBMailItem.Items)
}
inline std::string* DBMailItem::unsafe_arena_release_items() {
  // @@protoc_insertion_point(field_unsafe_arena_release:DBMailItem.Items)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return items_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DBMailItem::unsafe_arena_set_allocated_items(
    std::string* items) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (items != nullptr) {
    
  } else {
    
  }
  items_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      items, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBMailItem.Items)
}

// -------------------------------------------------------------------

// DBMailData

// repeated .DBMailItem MailList = 1;
inline int DBMailData::_internal_maillist_size() const {
  return maillist_.size();
}
inline int DBMailData::maillist_size() const {
  return _internal_maillist_size();
}
inline void DBMailData::clear_maillist() {
  maillist_.Clear();
}
inline ::DBMailItem* DBMailData::mutable_maillist(int index) {
  // @@protoc_insertion_point(field_mutable:DBMailData.MailList)
  return maillist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBMailItem >*
DBMailData::mutable_maillist() {
  // @@protoc_insertion_point(field_mutable_list:DBMailData.MailList)
  return &maillist_;
}
inline const ::DBMailItem& DBMailData::_internal_maillist(int index) const {
  return maillist_.Get(index);
}
inline const ::DBMailItem& DBMailData::maillist(int index) const {
  // @@protoc_insertion_point(field_get:DBMailData.MailList)
  return _internal_maillist(index);
}
inline ::DBMailItem* DBMailData::_internal_add_maillist() {
  return maillist_.Add();
}
inline ::DBMailItem* DBMailData::add_maillist() {
  // @@protoc_insertion_point(field_add:DBMailData.MailList)
  return _internal_add_maillist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBMailItem >&
DBMailData::maillist() const {
  // @@protoc_insertion_point(field_list:DBMailData.MailList)
  return maillist_;
}

// -------------------------------------------------------------------

// DBActivityItem

// uint64 RoleID = 1;
inline void DBActivityItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBActivityItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBActivityItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.RoleID)
  return _internal_roleid();
}
inline void DBActivityItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBActivityItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBActivityItem.RoleID)
}

// uint32 ActivityID = 2;
inline void DBActivityItem::clear_activityid() {
  activityid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBActivityItem::_internal_activityid() const {
  return activityid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBActivityItem::activityid() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.ActivityID)
  return _internal_activityid();
}
inline void DBActivityItem::_internal_set_activityid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  activityid_ = value;
}
inline void DBActivityItem::set_activityid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_activityid(value);
  // @@protoc_insertion_point(field_set:DBActivityItem.ActivityID)
}

// uint32 ActivityType = 3;
inline void DBActivityItem::clear_activitytype() {
  activitytype_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBActivityItem::_internal_activitytype() const {
  return activitytype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBActivityItem::activitytype() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.ActivityType)
  return _internal_activitytype();
}
inline void DBActivityItem::_internal_set_activitytype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  activitytype_ = value;
}
inline void DBActivityItem::set_activitytype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_activitytype(value);
  // @@protoc_insertion_point(field_set:DBActivityItem.ActivityType)
}

// uint32 JoinTime = 4;
inline void DBActivityItem::clear_jointime() {
  jointime_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBActivityItem::_internal_jointime() const {
  return jointime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBActivityItem::jointime() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.JoinTime)
  return _internal_jointime();
}
inline void DBActivityItem::_internal_set_jointime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  jointime_ = value;
}
inline void DBActivityItem::set_jointime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_jointime(value);
  // @@protoc_insertion_point(field_set:DBActivityItem.JoinTime)
}

// uint32 DataLen = 5;
inline void DBActivityItem::clear_datalen() {
  datalen_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBActivityItem::_internal_datalen() const {
  return datalen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBActivityItem::datalen() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.DataLen)
  return _internal_datalen();
}
inline void DBActivityItem::_internal_set_datalen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  datalen_ = value;
}
inline void DBActivityItem::set_datalen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_datalen(value);
  // @@protoc_insertion_point(field_set:DBActivityItem.DataLen)
}

// bytes Data = 6;
inline void DBActivityItem::clear_data() {
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DBActivityItem::data() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.Data)
  return _internal_data();
}
inline void DBActivityItem::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:DBActivityItem.Data)
}
inline std::string* DBActivityItem::mutable_data() {
  // @@protoc_insertion_point(field_mutable:DBActivityItem.Data)
  return _internal_mutable_data();
}
inline const std::string& DBActivityItem::_internal_data() const {
  return data_.Get();
}
inline void DBActivityItem::_internal_set_data(const std::string& value) {
  
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DBActivityItem::set_data(std::string&& value) {
  
  data_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:DBActivityItem.Data)
}
inline void DBActivityItem::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:DBActivityItem.Data)
}
inline void DBActivityItem::set_data(const void* value,
    size_t size) {
  
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:DBActivityItem.Data)
}
inline std::string* DBActivityItem::_internal_mutable_data() {
  
  return data_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DBActivityItem::release_data() {
  // @@protoc_insertion_point(field_release:DBActivityItem.Data)
  return data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DBActivityItem::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:DBActivityItem.Data)
}
inline std::string* DBActivityItem::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:DBActivityItem.Data)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return data_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DBActivityItem::unsafe_arena_set_allocated_data(
    std::string* data) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (data != nullptr) {
    
  } else {
    
  }
  data_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      data, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBActivityItem.Data)
}

// -------------------------------------------------------------------

// DBActivityData

// repeated .DBActivityItem ActivityList = 1;
inline int DBActivityData::_internal_activitylist_size() const {
  return activitylist_.size();
}
inline int DBActivityData::activitylist_size() const {
  return _internal_activitylist_size();
}
inline void DBActivityData::clear_activitylist() {
  activitylist_.Clear();
}
inline ::DBActivityItem* DBActivityData::mutable_activitylist(int index) {
  // @@protoc_insertion_point(field_mutable:DBActivityData.ActivityList)
  return activitylist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBActivityItem >*
DBActivityData::mutable_activitylist() {
  // @@protoc_insertion_point(field_mutable_list:DBActivityData.ActivityList)
  return &activitylist_;
}
inline const ::DBActivityItem& DBActivityData::_internal_activitylist(int index) const {
  return activitylist_.Get(index);
}
inline const ::DBActivityItem& DBActivityData::activitylist(int index) const {
  // @@protoc_insertion_point(field_get:DBActivityData.ActivityList)
  return _internal_activitylist(index);
}
inline ::DBActivityItem* DBActivityData::_internal_add_activitylist() {
  return activitylist_.Add();
}
inline ::DBActivityItem* DBActivityData::add_activitylist() {
  // @@protoc_insertion_point(field_add:DBActivityData.ActivityList)
  return _internal_add_activitylist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBActivityItem >&
DBActivityData::activitylist() const {
  // @@protoc_insertion_point(field_list:DBActivityData.ActivityList)
  return activitylist_;
}

// -------------------------------------------------------------------

// DBCounterItem

// uint64 RoleID = 1;
inline void DBCounterItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBCounterItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBCounterItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.RoleID)
  return _internal_roleid();
}
inline void DBCounterItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBCounterItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.RoleID)
}

// uint32 CounterID = 2;
inline void DBCounterItem::clear_counterid() {
  counterid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBCounterItem::_internal_counterid() const {
  return counterid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBCounterItem::counterid() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.CounterID)
  return _internal_counterid();
}
inline void DBCounterItem::_internal_set_counterid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  counterid_ = value;
}
inline void DBCounterItem::set_counterid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_counterid(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.CounterID)
}

// uint32 Index = 3;
inline void DBCounterItem::clear_index() {
  index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBCounterItem::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBCounterItem::index() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.Index)
  return _internal_index();
}
inline void DBCounterItem::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  index_ = value;
}
inline void DBCounterItem::set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.Index)
}

// int64 Value = 4;
inline void DBCounterItem::clear_value() {
  value_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DBCounterItem::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DBCounterItem::value() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.Value)
  return _internal_value();
}
inline void DBCounterItem::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  value_ = value;
}
inline void DBCounterItem::set_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.Value)
}

// uint64 Time = 5;
inline void DBCounterItem::clear_time() {
  time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBCounterItem::_internal_time() const {
  return time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBCounterItem::time() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.Time)
  return _internal_time();
}
inline void DBCounterItem::_internal_set_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  time_ = value;
}
inline void DBCounterItem::set_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.Time)
}

// uint32 Param1 = 6;
inline void DBCounterItem::clear_param1() {
  param1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBCounterItem::_internal_param1() const {
  return param1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBCounterItem::param1() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.Param1)
  return _internal_param1();
}
inline void DBCounterItem::_internal_set_param1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  param1_ = value;
}
inline void DBCounterItem::set_param1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.Param1)
}

// uint32 Param2 = 7;
inline void DBCounterItem::clear_param2() {
  param2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBCounterItem::_internal_param2() const {
  return param2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBCounterItem::param2() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.Param2)
  return _internal_param2();
}
inline void DBCounterItem::_internal_set_param2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  param2_ = value;
}
inline void DBCounterItem::set_param2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_param2(value);
  // @@protoc_insertion_point(field_set:DBCounterItem.Param2)
}

// -------------------------------------------------------------------

// DBCounterData

// repeated .DBCounterItem CounterList = 1;
inline int DBCounterData::_internal_counterlist_size() const {
  return counterlist_.size();
}
inline int DBCounterData::counterlist_size() const {
  return _internal_counterlist_size();
}
inline void DBCounterData::clear_counterlist() {
  counterlist_.Clear();
}
inline ::DBCounterItem* DBCounterData::mutable_counterlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBCounterData.CounterList)
  return counterlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBCounterItem >*
DBCounterData::mutable_counterlist() {
  // @@protoc_insertion_point(field_mutable_list:DBCounterData.CounterList)
  return &counterlist_;
}
inline const ::DBCounterItem& DBCounterData::_internal_counterlist(int index) const {
  return counterlist_.Get(index);
}
inline const ::DBCounterItem& DBCounterData::counterlist(int index) const {
  // @@protoc_insertion_point(field_get:DBCounterData.CounterList)
  return _internal_counterlist(index);
}
inline ::DBCounterItem* DBCounterData::_internal_add_counterlist() {
  return counterlist_.Add();
}
inline ::DBCounterItem* DBCounterData::add_counterlist() {
  // @@protoc_insertion_point(field_add:DBCounterData.CounterList)
  return _internal_add_counterlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBCounterItem >&
DBCounterData::counterlist() const {
  // @@protoc_insertion_point(field_list:DBCounterData.CounterList)
  return counterlist_;
}

// -------------------------------------------------------------------

// DBFriendItem

// uint64 RoleID = 1;
inline void DBFriendItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBFriendItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBFriendItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBFriendItem.RoleID)
  return _internal_roleid();
}
inline void DBFriendItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBFriendItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBFriendItem.RoleID)
}

// uint64 FriendID = 2;
inline void DBFriendItem::clear_friendid() {
  friendid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBFriendItem::_internal_friendid() const {
  return friendid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBFriendItem::friendid() const {
  // @@protoc_insertion_point(field_get:DBFriendItem.FriendID)
  return _internal_friendid();
}
inline void DBFriendItem::_internal_set_friendid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  friendid_ = value;
}
inline void DBFriendItem::set_friendid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_friendid(value);
  // @@protoc_insertion_point(field_set:DBFriendItem.FriendID)
}

// -------------------------------------------------------------------

// DBFriendData

// repeated .DBFriendItem FriendList = 1;
inline int DBFriendData::_internal_friendlist_size() const {
  return friendlist_.size();
}
inline int DBFriendData::friendlist_size() const {
  return _internal_friendlist_size();
}
inline void DBFriendData::clear_friendlist() {
  friendlist_.Clear();
}
inline ::DBFriendItem* DBFriendData::mutable_friendlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBFriendData.FriendList)
  return friendlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBFriendItem >*
DBFriendData::mutable_friendlist() {
  // @@protoc_insertion_point(field_mutable_list:DBFriendData.FriendList)
  return &friendlist_;
}
inline const ::DBFriendItem& DBFriendData::_internal_friendlist(int index) const {
  return friendlist_.Get(index);
}
inline const ::DBFriendItem& DBFriendData::friendlist(int index) const {
  // @@protoc_insertion_point(field_get:DBFriendData.FriendList)
  return _internal_friendlist(index);
}
inline ::DBFriendItem* DBFriendData::_internal_add_friendlist() {
  return friendlist_.Add();
}
inline ::DBFriendItem* DBFriendData::add_friendlist() {
  // @@protoc_insertion_point(field_add:DBFriendData.FriendList)
  return _internal_add_friendlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DBFriendItem >&
DBFriendData::friendlist() const {
  // @@protoc_insertion_point(field_list:DBFriendData.FriendList)
  return friendlist_;
}

// -------------------------------------------------------------------

// DBRoleLoginAck

// uint32 RetCode = 1;
inline void DBRoleLoginAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBRoleLoginAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DBRoleLoginAck::retcode() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.RetCode)
  return _internal_retcode();
}
inline void DBRoleLoginAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void DBRoleLoginAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:DBRoleLoginAck.RetCode)
}

// uint64 RoleID = 2;
inline void DBRoleLoginAck::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleLoginAck::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DBRoleLoginAck::roleid() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.RoleID)
  return _internal_roleid();
}
inline void DBRoleLoginAck::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void DBRoleLoginAck::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:DBRoleLoginAck.RoleID)
}

// .DBRoleData RoleData = 3;
inline bool DBRoleLoginAck::_internal_has_roledata() const {
  return this != internal_default_instance() && roledata_ != nullptr;
}
inline bool DBRoleLoginAck::has_roledata() const {
  return _internal_has_roledata();
}
inline void DBRoleLoginAck::clear_roledata() {
  if (GetArena() == nullptr && roledata_ != nullptr) {
    delete roledata_;
  }
  roledata_ = nullptr;
}
inline const ::DBRoleData& DBRoleLoginAck::_internal_roledata() const {
  const ::DBRoleData* p = roledata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBRoleData*>(
      &::_DBRoleData_default_instance_);
}
inline const ::DBRoleData& DBRoleLoginAck::roledata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.RoleData)
  return _internal_roledata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_roledata(
    ::DBRoleData* roledata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roledata_);
  }
  roledata_ = roledata;
  if (roledata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.RoleData)
}
inline ::DBRoleData* DBRoleLoginAck::release_roledata() {
  auto temp = unsafe_arena_release_roledata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBRoleData* DBRoleLoginAck::unsafe_arena_release_roledata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.RoleData)
  
  ::DBRoleData* temp = roledata_;
  roledata_ = nullptr;
  return temp;
}
inline ::DBRoleData* DBRoleLoginAck::_internal_mutable_roledata() {
  
  if (roledata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBRoleData>(GetArena());
    roledata_ = p;
  }
  return roledata_;
}
inline ::DBRoleData* DBRoleLoginAck::mutable_roledata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.RoleData)
  return _internal_mutable_roledata();
}
inline void DBRoleLoginAck::set_allocated_roledata(::DBRoleData* roledata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete roledata_;
  }
  if (roledata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(roledata);
    if (message_arena != submessage_arena) {
      roledata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roledata, submessage_arena);
    }
    
  } else {
    
  }
  roledata_ = roledata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.RoleData)
}

// .DBBagData BagData = 4;
inline bool DBRoleLoginAck::_internal_has_bagdata() const {
  return this != internal_default_instance() && bagdata_ != nullptr;
}
inline bool DBRoleLoginAck::has_bagdata() const {
  return _internal_has_bagdata();
}
inline void DBRoleLoginAck::clear_bagdata() {
  if (GetArena() == nullptr && bagdata_ != nullptr) {
    delete bagdata_;
  }
  bagdata_ = nullptr;
}
inline const ::DBBagData& DBRoleLoginAck::_internal_bagdata() const {
  const ::DBBagData* p = bagdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBBagData*>(
      &::_DBBagData_default_instance_);
}
inline const ::DBBagData& DBRoleLoginAck::bagdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.BagData)
  return _internal_bagdata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_bagdata(
    ::DBBagData* bagdata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bagdata_);
  }
  bagdata_ = bagdata;
  if (bagdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.BagData)
}
inline ::DBBagData* DBRoleLoginAck::release_bagdata() {
  auto temp = unsafe_arena_release_bagdata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBBagData* DBRoleLoginAck::unsafe_arena_release_bagdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.BagData)
  
  ::DBBagData* temp = bagdata_;
  bagdata_ = nullptr;
  return temp;
}
inline ::DBBagData* DBRoleLoginAck::_internal_mutable_bagdata() {
  
  if (bagdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBBagData>(GetArena());
    bagdata_ = p;
  }
  return bagdata_;
}
inline ::DBBagData* DBRoleLoginAck::mutable_bagdata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.BagData)
  return _internal_mutable_bagdata();
}
inline void DBRoleLoginAck::set_allocated_bagdata(::DBBagData* bagdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete bagdata_;
  }
  if (bagdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bagdata);
    if (message_arena != submessage_arena) {
      bagdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bagdata, submessage_arena);
    }
    
  } else {
    
  }
  bagdata_ = bagdata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.BagData)
}

// .DBCopyData CopyData = 5;
inline bool DBRoleLoginAck::_internal_has_copydata() const {
  return this != internal_default_instance() && copydata_ != nullptr;
}
inline bool DBRoleLoginAck::has_copydata() const {
  return _internal_has_copydata();
}
inline void DBRoleLoginAck::clear_copydata() {
  if (GetArena() == nullptr && copydata_ != nullptr) {
    delete copydata_;
  }
  copydata_ = nullptr;
}
inline const ::DBCopyData& DBRoleLoginAck::_internal_copydata() const {
  const ::DBCopyData* p = copydata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBCopyData*>(
      &::_DBCopyData_default_instance_);
}
inline const ::DBCopyData& DBRoleLoginAck::copydata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.CopyData)
  return _internal_copydata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_copydata(
    ::DBCopyData* copydata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(copydata_);
  }
  copydata_ = copydata;
  if (copydata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.CopyData)
}
inline ::DBCopyData* DBRoleLoginAck::release_copydata() {
  auto temp = unsafe_arena_release_copydata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBCopyData* DBRoleLoginAck::unsafe_arena_release_copydata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.CopyData)
  
  ::DBCopyData* temp = copydata_;
  copydata_ = nullptr;
  return temp;
}
inline ::DBCopyData* DBRoleLoginAck::_internal_mutable_copydata() {
  
  if (copydata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBCopyData>(GetArena());
    copydata_ = p;
  }
  return copydata_;
}
inline ::DBCopyData* DBRoleLoginAck::mutable_copydata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.CopyData)
  return _internal_mutable_copydata();
}
inline void DBRoleLoginAck::set_allocated_copydata(::DBCopyData* copydata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete copydata_;
  }
  if (copydata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(copydata);
    if (message_arena != submessage_arena) {
      copydata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, copydata, submessage_arena);
    }
    
  } else {
    
  }
  copydata_ = copydata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.CopyData)
}

// .DBEquipData EquipData = 6;
inline bool DBRoleLoginAck::_internal_has_equipdata() const {
  return this != internal_default_instance() && equipdata_ != nullptr;
}
inline bool DBRoleLoginAck::has_equipdata() const {
  return _internal_has_equipdata();
}
inline void DBRoleLoginAck::clear_equipdata() {
  if (GetArena() == nullptr && equipdata_ != nullptr) {
    delete equipdata_;
  }
  equipdata_ = nullptr;
}
inline const ::DBEquipData& DBRoleLoginAck::_internal_equipdata() const {
  const ::DBEquipData* p = equipdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBEquipData*>(
      &::_DBEquipData_default_instance_);
}
inline const ::DBEquipData& DBRoleLoginAck::equipdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.EquipData)
  return _internal_equipdata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_equipdata(
    ::DBEquipData* equipdata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(equipdata_);
  }
  equipdata_ = equipdata;
  if (equipdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.EquipData)
}
inline ::DBEquipData* DBRoleLoginAck::release_equipdata() {
  auto temp = unsafe_arena_release_equipdata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBEquipData* DBRoleLoginAck::unsafe_arena_release_equipdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.EquipData)
  
  ::DBEquipData* temp = equipdata_;
  equipdata_ = nullptr;
  return temp;
}
inline ::DBEquipData* DBRoleLoginAck::_internal_mutable_equipdata() {
  
  if (equipdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBEquipData>(GetArena());
    equipdata_ = p;
  }
  return equipdata_;
}
inline ::DBEquipData* DBRoleLoginAck::mutable_equipdata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.EquipData)
  return _internal_mutable_equipdata();
}
inline void DBRoleLoginAck::set_allocated_equipdata(::DBEquipData* equipdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete equipdata_;
  }
  if (equipdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(equipdata);
    if (message_arena != submessage_arena) {
      equipdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, equipdata, submessage_arena);
    }
    
  } else {
    
  }
  equipdata_ = equipdata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.EquipData)
}

// .DBGemData GemData = 7;
inline bool DBRoleLoginAck::_internal_has_gemdata() const {
  return this != internal_default_instance() && gemdata_ != nullptr;
}
inline bool DBRoleLoginAck::has_gemdata() const {
  return _internal_has_gemdata();
}
inline void DBRoleLoginAck::clear_gemdata() {
  if (GetArena() == nullptr && gemdata_ != nullptr) {
    delete gemdata_;
  }
  gemdata_ = nullptr;
}
inline const ::DBGemData& DBRoleLoginAck::_internal_gemdata() const {
  const ::DBGemData* p = gemdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBGemData*>(
      &::_DBGemData_default_instance_);
}
inline const ::DBGemData& DBRoleLoginAck::gemdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.GemData)
  return _internal_gemdata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_gemdata(
    ::DBGemData* gemdata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(gemdata_);
  }
  gemdata_ = gemdata;
  if (gemdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.GemData)
}
inline ::DBGemData* DBRoleLoginAck::release_gemdata() {
  auto temp = unsafe_arena_release_gemdata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBGemData* DBRoleLoginAck::unsafe_arena_release_gemdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.GemData)
  
  ::DBGemData* temp = gemdata_;
  gemdata_ = nullptr;
  return temp;
}
inline ::DBGemData* DBRoleLoginAck::_internal_mutable_gemdata() {
  
  if (gemdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBGemData>(GetArena());
    gemdata_ = p;
  }
  return gemdata_;
}
inline ::DBGemData* DBRoleLoginAck::mutable_gemdata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.GemData)
  return _internal_mutable_gemdata();
}
inline void DBRoleLoginAck::set_allocated_gemdata(::DBGemData* gemdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete gemdata_;
  }
  if (gemdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gemdata);
    if (message_arena != submessage_arena) {
      gemdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gemdata, submessage_arena);
    }
    
  } else {
    
  }
  gemdata_ = gemdata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.GemData)
}

// .DBPetData PetData = 8;
inline bool DBRoleLoginAck::_internal_has_petdata() const {
  return this != internal_default_instance() && petdata_ != nullptr;
}
inline bool DBRoleLoginAck::has_petdata() const {
  return _internal_has_petdata();
}
inline void DBRoleLoginAck::clear_petdata() {
  if (GetArena() == nullptr && petdata_ != nullptr) {
    delete petdata_;
  }
  petdata_ = nullptr;
}
inline const ::DBPetData& DBRoleLoginAck::_internal_petdata() const {
  const ::DBPetData* p = petdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBPetData*>(
      &::_DBPetData_default_instance_);
}
inline const ::DBPetData& DBRoleLoginAck::petdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.PetData)
  return _internal_petdata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_petdata(
    ::DBPetData* petdata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(petdata_);
  }
  petdata_ = petdata;
  if (petdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.PetData)
}
inline ::DBPetData* DBRoleLoginAck::release_petdata() {
  auto temp = unsafe_arena_release_petdata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBPetData* DBRoleLoginAck::unsafe_arena_release_petdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.PetData)
  
  ::DBPetData* temp = petdata_;
  petdata_ = nullptr;
  return temp;
}
inline ::DBPetData* DBRoleLoginAck::_internal_mutable_petdata() {
  
  if (petdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBPetData>(GetArena());
    petdata_ = p;
  }
  return petdata_;
}
inline ::DBPetData* DBRoleLoginAck::mutable_petdata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.PetData)
  return _internal_mutable_petdata();
}
inline void DBRoleLoginAck::set_allocated_petdata(::DBPetData* petdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete petdata_;
  }
  if (petdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(petdata);
    if (message_arena != submessage_arena) {
      petdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, petdata, submessage_arena);
    }
    
  } else {
    
  }
  petdata_ = petdata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.PetData)
}

// .DBPartnerData PartnerData = 9;
inline bool DBRoleLoginAck::_internal_has_partnerdata() const {
  return this != internal_default_instance() && partnerdata_ != nullptr;
}
inline bool DBRoleLoginAck::has_partnerdata() const {
  return _internal_has_partnerdata();
}
inline void DBRoleLoginAck::clear_partnerdata() {
  if (GetArena() == nullptr && partnerdata_ != nullptr) {
    delete partnerdata_;
  }
  partnerdata_ = nullptr;
}
inline const ::DBPartnerData& DBRoleLoginAck::_internal_partnerdata() const {
  const ::DBPartnerData* p = partnerdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBPartnerData*>(
      &::_DBPartnerData_default_instance_);
}
inline const ::DBPartnerData& DBRoleLoginAck::partnerdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.PartnerData)
  return _internal_partnerdata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_partnerdata(
    ::DBPartnerData* partnerdata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(partnerdata_);
  }
  partnerdata_ = partnerdata;
  if (partnerdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.PartnerData)
}
inline ::DBPartnerData* DBRoleLoginAck::release_partnerdata() {
  auto temp = unsafe_arena_release_partnerdata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBPartnerData* DBRoleLoginAck::unsafe_arena_release_partnerdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.PartnerData)
  
  ::DBPartnerData* temp = partnerdata_;
  partnerdata_ = nullptr;
  return temp;
}
inline ::DBPartnerData* DBRoleLoginAck::_internal_mutable_partnerdata() {
  
  if (partnerdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBPartnerData>(GetArena());
    partnerdata_ = p;
  }
  return partnerdata_;
}
inline ::DBPartnerData* DBRoleLoginAck::mutable_partnerdata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.PartnerData)
  return _internal_mutable_partnerdata();
}
inline void DBRoleLoginAck::set_allocated_partnerdata(::DBPartnerData* partnerdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete partnerdata_;
  }
  if (partnerdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(partnerdata);
    if (message_arena != submessage_arena) {
      partnerdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, partnerdata, submessage_arena);
    }
    
  } else {
    
  }
  partnerdata_ = partnerdata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.PartnerData)
}

// .DBTaskData TaskData = 10;
inline bool DBRoleLoginAck::_internal_has_taskdata() const {
  return this != internal_default_instance() && taskdata_ != nullptr;
}
inline bool DBRoleLoginAck::has_taskdata() const {
  return _internal_has_taskdata();
}
inline void DBRoleLoginAck::clear_taskdata() {
  if (GetArena() == nullptr && taskdata_ != nullptr) {
    delete taskdata_;
  }
  taskdata_ = nullptr;
}
inline const ::DBTaskData& DBRoleLoginAck::_internal_taskdata() const {
  const ::DBTaskData* p = taskdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBTaskData*>(
      &::_DBTaskData_default_instance_);
}
inline const ::DBTaskData& DBRoleLoginAck::taskdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.TaskData)
  return _internal_taskdata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_taskdata(
    ::DBTaskData* taskdata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(taskdata_);
  }
  taskdata_ = taskdata;
  if (taskdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.TaskData)
}
inline ::DBTaskData* DBRoleLoginAck::release_taskdata() {
  auto temp = unsafe_arena_release_taskdata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBTaskData* DBRoleLoginAck::unsafe_arena_release_taskdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.TaskData)
  
  ::DBTaskData* temp = taskdata_;
  taskdata_ = nullptr;
  return temp;
}
inline ::DBTaskData* DBRoleLoginAck::_internal_mutable_taskdata() {
  
  if (taskdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBTaskData>(GetArena());
    taskdata_ = p;
  }
  return taskdata_;
}
inline ::DBTaskData* DBRoleLoginAck::mutable_taskdata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.TaskData)
  return _internal_mutable_taskdata();
}
inline void DBRoleLoginAck::set_allocated_taskdata(::DBTaskData* taskdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete taskdata_;
  }
  if (taskdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(taskdata);
    if (message_arena != submessage_arena) {
      taskdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, taskdata, submessage_arena);
    }
    
  } else {
    
  }
  taskdata_ = taskdata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.TaskData)
}

// .DBMailData MailData = 11;
inline bool DBRoleLoginAck::_internal_has_maildata() const {
  return this != internal_default_instance() && maildata_ != nullptr;
}
inline bool DBRoleLoginAck::has_maildata() const {
  return _internal_has_maildata();
}
inline void DBRoleLoginAck::clear_maildata() {
  if (GetArena() == nullptr && maildata_ != nullptr) {
    delete maildata_;
  }
  maildata_ = nullptr;
}
inline const ::DBMailData& DBRoleLoginAck::_internal_maildata() const {
  const ::DBMailData* p = maildata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBMailData*>(
      &::_DBMailData_default_instance_);
}
inline const ::DBMailData& DBRoleLoginAck::maildata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.MailData)
  return _internal_maildata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_maildata(
    ::DBMailData* maildata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(maildata_);
  }
  maildata_ = maildata;
  if (maildata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.MailData)
}
inline ::DBMailData* DBRoleLoginAck::release_maildata() {
  auto temp = unsafe_arena_release_maildata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBMailData* DBRoleLoginAck::unsafe_arena_release_maildata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.MailData)
  
  ::DBMailData* temp = maildata_;
  maildata_ = nullptr;
  return temp;
}
inline ::DBMailData* DBRoleLoginAck::_internal_mutable_maildata() {
  
  if (maildata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBMailData>(GetArena());
    maildata_ = p;
  }
  return maildata_;
}
inline ::DBMailData* DBRoleLoginAck::mutable_maildata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.MailData)
  return _internal_mutable_maildata();
}
inline void DBRoleLoginAck::set_allocated_maildata(::DBMailData* maildata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete maildata_;
  }
  if (maildata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(maildata);
    if (message_arena != submessage_arena) {
      maildata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, maildata, submessage_arena);
    }
    
  } else {
    
  }
  maildata_ = maildata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.MailData)
}

// .DBMountData MountData = 12;
inline bool DBRoleLoginAck::_internal_has_mountdata() const {
  return this != internal_default_instance() && mountdata_ != nullptr;
}
inline bool DBRoleLoginAck::has_mountdata() const {
  return _internal_has_mountdata();
}
inline void DBRoleLoginAck::clear_mountdata() {
  if (GetArena() == nullptr && mountdata_ != nullptr) {
    delete mountdata_;
  }
  mountdata_ = nullptr;
}
inline const ::DBMountData& DBRoleLoginAck::_internal_mountdata() const {
  const ::DBMountData* p = mountdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBMountData*>(
      &::_DBMountData_default_instance_);
}
inline const ::DBMountData& DBRoleLoginAck::mountdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.MountData)
  return _internal_mountdata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_mountdata(
    ::DBMountData* mountdata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mountdata_);
  }
  mountdata_ = mountdata;
  if (mountdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.MountData)
}
inline ::DBMountData* DBRoleLoginAck::release_mountdata() {
  auto temp = unsafe_arena_release_mountdata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBMountData* DBRoleLoginAck::unsafe_arena_release_mountdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.MountData)
  
  ::DBMountData* temp = mountdata_;
  mountdata_ = nullptr;
  return temp;
}
inline ::DBMountData* DBRoleLoginAck::_internal_mutable_mountdata() {
  
  if (mountdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBMountData>(GetArena());
    mountdata_ = p;
  }
  return mountdata_;
}
inline ::DBMountData* DBRoleLoginAck::mutable_mountdata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.MountData)
  return _internal_mutable_mountdata();
}
inline void DBRoleLoginAck::set_allocated_mountdata(::DBMountData* mountdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete mountdata_;
  }
  if (mountdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(mountdata);
    if (message_arena != submessage_arena) {
      mountdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mountdata, submessage_arena);
    }
    
  } else {
    
  }
  mountdata_ = mountdata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.MountData)
}

// .DBActivityData ActivityData = 13;
inline bool DBRoleLoginAck::_internal_has_activitydata() const {
  return this != internal_default_instance() && activitydata_ != nullptr;
}
inline bool DBRoleLoginAck::has_activitydata() const {
  return _internal_has_activitydata();
}
inline void DBRoleLoginAck::clear_activitydata() {
  if (GetArena() == nullptr && activitydata_ != nullptr) {
    delete activitydata_;
  }
  activitydata_ = nullptr;
}
inline const ::DBActivityData& DBRoleLoginAck::_internal_activitydata() const {
  const ::DBActivityData* p = activitydata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBActivityData*>(
      &::_DBActivityData_default_instance_);
}
inline const ::DBActivityData& DBRoleLoginAck::activitydata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.ActivityData)
  return _internal_activitydata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_activitydata(
    ::DBActivityData* activitydata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(activitydata_);
  }
  activitydata_ = activitydata;
  if (activitydata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.ActivityData)
}
inline ::DBActivityData* DBRoleLoginAck::release_activitydata() {
  auto temp = unsafe_arena_release_activitydata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBActivityData* DBRoleLoginAck::unsafe_arena_release_activitydata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.ActivityData)
  
  ::DBActivityData* temp = activitydata_;
  activitydata_ = nullptr;
  return temp;
}
inline ::DBActivityData* DBRoleLoginAck::_internal_mutable_activitydata() {
  
  if (activitydata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBActivityData>(GetArena());
    activitydata_ = p;
  }
  return activitydata_;
}
inline ::DBActivityData* DBRoleLoginAck::mutable_activitydata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.ActivityData)
  return _internal_mutable_activitydata();
}
inline void DBRoleLoginAck::set_allocated_activitydata(::DBActivityData* activitydata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete activitydata_;
  }
  if (activitydata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(activitydata);
    if (message_arena != submessage_arena) {
      activitydata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, activitydata, submessage_arena);
    }
    
  } else {
    
  }
  activitydata_ = activitydata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.ActivityData)
}

// .DBCounterData CounterData = 14;
inline bool DBRoleLoginAck::_internal_has_counterdata() const {
  return this != internal_default_instance() && counterdata_ != nullptr;
}
inline bool DBRoleLoginAck::has_counterdata() const {
  return _internal_has_counterdata();
}
inline void DBRoleLoginAck::clear_counterdata() {
  if (GetArena() == nullptr && counterdata_ != nullptr) {
    delete counterdata_;
  }
  counterdata_ = nullptr;
}
inline const ::DBCounterData& DBRoleLoginAck::_internal_counterdata() const {
  const ::DBCounterData* p = counterdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBCounterData*>(
      &::_DBCounterData_default_instance_);
}
inline const ::DBCounterData& DBRoleLoginAck::counterdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.CounterData)
  return _internal_counterdata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_counterdata(
    ::DBCounterData* counterdata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(counterdata_);
  }
  counterdata_ = counterdata;
  if (counterdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.CounterData)
}
inline ::DBCounterData* DBRoleLoginAck::release_counterdata() {
  auto temp = unsafe_arena_release_counterdata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBCounterData* DBRoleLoginAck::unsafe_arena_release_counterdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.CounterData)
  
  ::DBCounterData* temp = counterdata_;
  counterdata_ = nullptr;
  return temp;
}
inline ::DBCounterData* DBRoleLoginAck::_internal_mutable_counterdata() {
  
  if (counterdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBCounterData>(GetArena());
    counterdata_ = p;
  }
  return counterdata_;
}
inline ::DBCounterData* DBRoleLoginAck::mutable_counterdata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.CounterData)
  return _internal_mutable_counterdata();
}
inline void DBRoleLoginAck::set_allocated_counterdata(::DBCounterData* counterdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete counterdata_;
  }
  if (counterdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(counterdata);
    if (message_arena != submessage_arena) {
      counterdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, counterdata, submessage_arena);
    }
    
  } else {
    
  }
  counterdata_ = counterdata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.CounterData)
}

// .DBFriendData FriendData = 15;
inline bool DBRoleLoginAck::_internal_has_frienddata() const {
  return this != internal_default_instance() && frienddata_ != nullptr;
}
inline bool DBRoleLoginAck::has_frienddata() const {
  return _internal_has_frienddata();
}
inline void DBRoleLoginAck::clear_frienddata() {
  if (GetArena() == nullptr && frienddata_ != nullptr) {
    delete frienddata_;
  }
  frienddata_ = nullptr;
}
inline const ::DBFriendData& DBRoleLoginAck::_internal_frienddata() const {
  const ::DBFriendData* p = frienddata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBFriendData*>(
      &::_DBFriendData_default_instance_);
}
inline const ::DBFriendData& DBRoleLoginAck::frienddata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.FriendData)
  return _internal_frienddata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_frienddata(
    ::DBFriendData* frienddata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(frienddata_);
  }
  frienddata_ = frienddata;
  if (frienddata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.FriendData)
}
inline ::DBFriendData* DBRoleLoginAck::release_frienddata() {
  auto temp = unsafe_arena_release_frienddata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBFriendData* DBRoleLoginAck::unsafe_arena_release_frienddata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.FriendData)
  
  ::DBFriendData* temp = frienddata_;
  frienddata_ = nullptr;
  return temp;
}
inline ::DBFriendData* DBRoleLoginAck::_internal_mutable_frienddata() {
  
  if (frienddata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBFriendData>(GetArena());
    frienddata_ = p;
  }
  return frienddata_;
}
inline ::DBFriendData* DBRoleLoginAck::mutable_frienddata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.FriendData)
  return _internal_mutable_frienddata();
}
inline void DBRoleLoginAck::set_allocated_frienddata(::DBFriendData* frienddata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete frienddata_;
  }
  if (frienddata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(frienddata);
    if (message_arena != submessage_arena) {
      frienddata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, frienddata, submessage_arena);
    }
    
  } else {
    
  }
  frienddata_ = frienddata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.FriendData)
}

// .DBSkillData SkillData = 16;
inline bool DBRoleLoginAck::_internal_has_skilldata() const {
  return this != internal_default_instance() && skilldata_ != nullptr;
}
inline bool DBRoleLoginAck::has_skilldata() const {
  return _internal_has_skilldata();
}
inline void DBRoleLoginAck::clear_skilldata() {
  if (GetArena() == nullptr && skilldata_ != nullptr) {
    delete skilldata_;
  }
  skilldata_ = nullptr;
}
inline const ::DBSkillData& DBRoleLoginAck::_internal_skilldata() const {
  const ::DBSkillData* p = skilldata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::DBSkillData*>(
      &::_DBSkillData_default_instance_);
}
inline const ::DBSkillData& DBRoleLoginAck::skilldata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.SkillData)
  return _internal_skilldata();
}
inline void DBRoleLoginAck::unsafe_arena_set_allocated_skilldata(
    ::DBSkillData* skilldata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(skilldata_);
  }
  skilldata_ = skilldata;
  if (skilldata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DBRoleLoginAck.SkillData)
}
inline ::DBSkillData* DBRoleLoginAck::release_skilldata() {
  auto temp = unsafe_arena_release_skilldata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::DBSkillData* DBRoleLoginAck::unsafe_arena_release_skilldata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.SkillData)
  
  ::DBSkillData* temp = skilldata_;
  skilldata_ = nullptr;
  return temp;
}
inline ::DBSkillData* DBRoleLoginAck::_internal_mutable_skilldata() {
  
  if (skilldata_ == nullptr) {
    auto* p = CreateMaybeMessage<::DBSkillData>(GetArena());
    skilldata_ = p;
  }
  return skilldata_;
}
inline ::DBSkillData* DBRoleLoginAck::mutable_skilldata() {
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.SkillData)
  return _internal_mutable_skilldata();
}
inline void DBRoleLoginAck::set_allocated_skilldata(::DBSkillData* skilldata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete skilldata_;
  }
  if (skilldata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(skilldata);
    if (message_arena != submessage_arena) {
      skilldata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, skilldata, submessage_arena);
    }
    
  } else {
    
  }
  skilldata_ = skilldata;
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.SkillData)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Msg_5fLoginDBData_2eproto
