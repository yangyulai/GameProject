// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_Move.proto

#include "Msg_Move.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Msg_5fMove_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActionNtyItem_Msg_5fMove_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Msg_5fMove_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActionReqItem_Msg_5fMove_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Msg_5fMove_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BulletItem_Msg_5fMove_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Msg_5fMove_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NewItem_Msg_5fMove_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Msg_5fBase_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SkillItem_Msg_5fBase_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Msg_5fMove_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SkillResultItem_Msg_5fMove_2eproto;
class SkillCastReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SkillCastReq> _instance;
} _SkillCastReq_default_instance_;
class SkillCastAckDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SkillCastAck> _instance;
} _SkillCastAck_default_instance_;
class SkillResultItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SkillResultItem> _instance;
} _SkillResultItem_default_instance_;
class SkillResultNtfDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SkillResultNtf> _instance;
} _SkillResultNtf_default_instance_;
class ObjectActionReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectActionReq> _instance;
} _ObjectActionReq_default_instance_;
class ObjectActionNtyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectActionNty> _instance;
} _ObjectActionNty_default_instance_;
class ActionReqItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActionReqItem> _instance;
} _ActionReqItem_default_instance_;
class ObjectActionAckDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectActionAck> _instance;
} _ObjectActionAck_default_instance_;
class ActionNtyItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActionNtyItem> _instance;
} _ActionNtyItem_default_instance_;
class NewItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NewItem> _instance;
} _NewItem_default_instance_;
class ObjectNewNtyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectNewNty> _instance;
} _ObjectNewNty_default_instance_;
class ObjectRemoveNtyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectRemoveNty> _instance;
} _ObjectRemoveNty_default_instance_;
class BulletItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BulletItem> _instance;
} _BulletItem_default_instance_;
class BulletNewNtfDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BulletNewNtf> _instance;
} _BulletNewNtf_default_instance_;
class HeartBeatReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HeartBeatReq> _instance;
} _HeartBeatReq_default_instance_;
class HeartBeatAckDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HeartBeatAck> _instance;
} _HeartBeatAck_default_instance_;
class ObjectDieNotifyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectDieNotify> _instance;
} _ObjectDieNotify_default_instance_;
class Msg_RidingMountReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_RidingMountReq> _instance;
} _Msg_RidingMountReq_default_instance_;
class Msg_RidingMountAckDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_RidingMountAck> _instance;
} _Msg_RidingMountAck_default_instance_;
class Msg_RoleRebornReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_RoleRebornReq> _instance;
} _Msg_RoleRebornReq_default_instance_;
class Msg_RoleRebornAckDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_RoleRebornAck> _instance;
} _Msg_RoleRebornAck_default_instance_;
static void InitDefaultsscc_info_ActionNtyItem_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ActionNtyItem_default_instance_;
    new (ptr) ::ActionNtyItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ActionNtyItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActionNtyItem_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ActionNtyItem_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_ActionReqItem_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ActionReqItem_default_instance_;
    new (ptr) ::ActionReqItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ActionReqItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActionReqItem_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ActionReqItem_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_BulletItem_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_BulletItem_default_instance_;
    new (ptr) ::BulletItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BulletItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BulletItem_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BulletItem_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_BulletNewNtf_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_BulletNewNtf_default_instance_;
    new (ptr) ::BulletNewNtf();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BulletNewNtf::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BulletNewNtf_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BulletNewNtf_Msg_5fMove_2eproto}, {
      &scc_info_BulletItem_Msg_5fMove_2eproto.base,}};

static void InitDefaultsscc_info_HeartBeatAck_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_HeartBeatAck_default_instance_;
    new (ptr) ::HeartBeatAck();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HeartBeatAck::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HeartBeatAck_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HeartBeatAck_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_HeartBeatReq_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_HeartBeatReq_default_instance_;
    new (ptr) ::HeartBeatReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HeartBeatReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HeartBeatReq_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HeartBeatReq_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_Msg_RidingMountAck_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_RidingMountAck_default_instance_;
    new (ptr) ::Msg_RidingMountAck();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_RidingMountAck::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_RidingMountAck_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_RidingMountAck_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_Msg_RidingMountReq_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_RidingMountReq_default_instance_;
    new (ptr) ::Msg_RidingMountReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_RidingMountReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_RidingMountReq_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_RidingMountReq_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_Msg_RoleRebornAck_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_RoleRebornAck_default_instance_;
    new (ptr) ::Msg_RoleRebornAck();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_RoleRebornAck::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_RoleRebornAck_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_RoleRebornAck_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_Msg_RoleRebornReq_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_RoleRebornReq_default_instance_;
    new (ptr) ::Msg_RoleRebornReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_RoleRebornReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_RoleRebornReq_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_RoleRebornReq_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_NewItem_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_NewItem_default_instance_;
    new (ptr) ::NewItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NewItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NewItem_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_NewItem_Msg_5fMove_2eproto}, {
      &scc_info_SkillItem_Msg_5fBase_2eproto.base,}};

static void InitDefaultsscc_info_ObjectActionAck_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ObjectActionAck_default_instance_;
    new (ptr) ::ObjectActionAck();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ObjectActionAck::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectActionAck_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ObjectActionAck_Msg_5fMove_2eproto}, {
      &scc_info_ActionReqItem_Msg_5fMove_2eproto.base,}};

static void InitDefaultsscc_info_ObjectActionNty_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ObjectActionNty_default_instance_;
    new (ptr) ::ObjectActionNty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ObjectActionNty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectActionNty_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ObjectActionNty_Msg_5fMove_2eproto}, {
      &scc_info_ActionNtyItem_Msg_5fMove_2eproto.base,}};

static void InitDefaultsscc_info_ObjectActionReq_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ObjectActionReq_default_instance_;
    new (ptr) ::ObjectActionReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ObjectActionReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectActionReq_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ObjectActionReq_Msg_5fMove_2eproto}, {
      &scc_info_ActionReqItem_Msg_5fMove_2eproto.base,}};

static void InitDefaultsscc_info_ObjectDieNotify_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ObjectDieNotify_default_instance_;
    new (ptr) ::ObjectDieNotify();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ObjectDieNotify::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectDieNotify_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjectDieNotify_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_ObjectNewNty_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ObjectNewNty_default_instance_;
    new (ptr) ::ObjectNewNty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ObjectNewNty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectNewNty_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ObjectNewNty_Msg_5fMove_2eproto}, {
      &scc_info_NewItem_Msg_5fMove_2eproto.base,}};

static void InitDefaultsscc_info_ObjectRemoveNty_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ObjectRemoveNty_default_instance_;
    new (ptr) ::ObjectRemoveNty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ObjectRemoveNty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectRemoveNty_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjectRemoveNty_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_SkillCastAck_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SkillCastAck_default_instance_;
    new (ptr) ::SkillCastAck();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SkillCastAck::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SkillCastAck_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SkillCastAck_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_SkillCastReq_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SkillCastReq_default_instance_;
    new (ptr) ::SkillCastReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SkillCastReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SkillCastReq_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SkillCastReq_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_SkillResultItem_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SkillResultItem_default_instance_;
    new (ptr) ::SkillResultItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SkillResultItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SkillResultItem_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SkillResultItem_Msg_5fMove_2eproto}, {}};

static void InitDefaultsscc_info_SkillResultNtf_Msg_5fMove_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SkillResultNtf_default_instance_;
    new (ptr) ::SkillResultNtf();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SkillResultNtf::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SkillResultNtf_Msg_5fMove_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SkillResultNtf_Msg_5fMove_2eproto}, {
      &scc_info_SkillResultItem_Msg_5fMove_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Msg_5fMove_2eproto[21];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Msg_5fMove_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Msg_5fMove_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Msg_5fMove_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SkillCastReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SkillCastReq, objectguid_),
  PROTOBUF_FIELD_OFFSET(::SkillCastReq, skillid_),
  PROTOBUF_FIELD_OFFSET(::SkillCastReq, hostx_),
  PROTOBUF_FIELD_OFFSET(::SkillCastReq, hosty_),
  PROTOBUF_FIELD_OFFSET(::SkillCastReq, hostz_),
  PROTOBUF_FIELD_OFFSET(::SkillCastReq, hostft_),
  PROTOBUF_FIELD_OFFSET(::SkillCastReq, targetx_),
  PROTOBUF_FIELD_OFFSET(::SkillCastReq, targety_),
  PROTOBUF_FIELD_OFFSET(::SkillCastReq, targetz_),
  PROTOBUF_FIELD_OFFSET(::SkillCastReq, targetft_),
  PROTOBUF_FIELD_OFFSET(::SkillCastReq, targetobjects_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SkillCastAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SkillCastAck, retcode_),
  PROTOBUF_FIELD_OFFSET(::SkillCastAck, objectguid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SkillResultItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SkillResultItem, objectguid_),
  PROTOBUF_FIELD_OFFSET(::SkillResultItem, skillid_),
  PROTOBUF_FIELD_OFFSET(::SkillResultItem, actionid_),
  PROTOBUF_FIELD_OFFSET(::SkillResultItem, orgx_),
  PROTOBUF_FIELD_OFFSET(::SkillResultItem, orgy_),
  PROTOBUF_FIELD_OFFSET(::SkillResultItem, orgz_),
  PROTOBUF_FIELD_OFFSET(::SkillResultItem, orgft_),
  PROTOBUF_FIELD_OFFSET(::SkillResultItem, hpchange_),
  PROTOBUF_FIELD_OFFSET(::SkillResultItem, bcrit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SkillResultNtf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SkillResultNtf, itemlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ObjectActionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ObjectActionReq, actionlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ObjectActionNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ObjectActionNty, actionlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ActionReqItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ActionReqItem, objectguid_),
  PROTOBUF_FIELD_OFFSET(::ActionReqItem, actionid_),
  PROTOBUF_FIELD_OFFSET(::ActionReqItem, hostx_),
  PROTOBUF_FIELD_OFFSET(::ActionReqItem, hosty_),
  PROTOBUF_FIELD_OFFSET(::ActionReqItem, hostz_),
  PROTOBUF_FIELD_OFFSET(::ActionReqItem, hostft_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ObjectActionAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ObjectActionAck, actionlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, objectguid_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, actionid_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, camp_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, objectstatus_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, speed_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, hostx_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, hosty_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, hostz_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, hostft_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, actorid_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, mountid_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, level_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, controlerid_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, hp_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, mp_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, hpmax_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, mpmax_),
  PROTOBUF_FIELD_OFFSET(::ActionNtyItem, equips_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NewItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::NewItem, objectguid_),
  PROTOBUF_FIELD_OFFSET(::NewItem, actionid_),
  PROTOBUF_FIELD_OFFSET(::NewItem, objtype_),
  PROTOBUF_FIELD_OFFSET(::NewItem, objectstatus_),
  PROTOBUF_FIELD_OFFSET(::NewItem, actorid_),
  PROTOBUF_FIELD_OFFSET(::NewItem, mountid_),
  PROTOBUF_FIELD_OFFSET(::NewItem, camp_),
  PROTOBUF_FIELD_OFFSET(::NewItem, name_),
  PROTOBUF_FIELD_OFFSET(::NewItem, level_),
  PROTOBUF_FIELD_OFFSET(::NewItem, speed_),
  PROTOBUF_FIELD_OFFSET(::NewItem, hostguid_),
  PROTOBUF_FIELD_OFFSET(::NewItem, controlerid_),
  PROTOBUF_FIELD_OFFSET(::NewItem, summonid_),
  PROTOBUF_FIELD_OFFSET(::NewItem, x_),
  PROTOBUF_FIELD_OFFSET(::NewItem, y_),
  PROTOBUF_FIELD_OFFSET(::NewItem, z_),
  PROTOBUF_FIELD_OFFSET(::NewItem, ft_),
  PROTOBUF_FIELD_OFFSET(::NewItem, hp_),
  PROTOBUF_FIELD_OFFSET(::NewItem, mp_),
  PROTOBUF_FIELD_OFFSET(::NewItem, hpmax_),
  PROTOBUF_FIELD_OFFSET(::NewItem, mpmax_),
  PROTOBUF_FIELD_OFFSET(::NewItem, equips_),
  PROTOBUF_FIELD_OFFSET(::NewItem, skills_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ObjectNewNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ObjectNewNty, newlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ObjectRemoveNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ObjectRemoveNty, removelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BulletItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BulletItem, objectguid_),
  PROTOBUF_FIELD_OFFSET(::BulletItem, targetguid_),
  PROTOBUF_FIELD_OFFSET(::BulletItem, casterguid_),
  PROTOBUF_FIELD_OFFSET(::BulletItem, bulletid_),
  PROTOBUF_FIELD_OFFSET(::BulletItem, x_),
  PROTOBUF_FIELD_OFFSET(::BulletItem, y_),
  PROTOBUF_FIELD_OFFSET(::BulletItem, z_),
  PROTOBUF_FIELD_OFFSET(::BulletItem, angle_),
  PROTOBUF_FIELD_OFFSET(::BulletItem, speed_),
  PROTOBUF_FIELD_OFFSET(::BulletItem, accspeed_),
  PROTOBUF_FIELD_OFFSET(::BulletItem, lifetime_),
  PROTOBUF_FIELD_OFFSET(::BulletItem, lefttime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BulletNewNtf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BulletNewNtf, itemlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HeartBeatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::HeartBeatReq, timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HeartBeatAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::HeartBeatAck, timestamp_),
  PROTOBUF_FIELD_OFFSET(::HeartBeatAck, servertime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ObjectDieNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ObjectDieNotify, objectguid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_RidingMountReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_RidingMountReq, objectguid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_RidingMountAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_RidingMountAck, retcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_RoleRebornReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_RoleRebornReq, objectguid_),
  PROTOBUF_FIELD_OFFSET(::Msg_RoleRebornReq, reborntype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_RoleRebornAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_RoleRebornAck, retcode_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SkillCastReq)},
  { 16, -1, sizeof(::SkillCastAck)},
  { 23, -1, sizeof(::SkillResultItem)},
  { 37, -1, sizeof(::SkillResultNtf)},
  { 43, -1, sizeof(::ObjectActionReq)},
  { 49, -1, sizeof(::ObjectActionNty)},
  { 55, -1, sizeof(::ActionReqItem)},
  { 66, -1, sizeof(::ObjectActionAck)},
  { 72, -1, sizeof(::ActionNtyItem)},
  { 95, -1, sizeof(::NewItem)},
  { 123, -1, sizeof(::ObjectNewNty)},
  { 129, -1, sizeof(::ObjectRemoveNty)},
  { 135, -1, sizeof(::BulletItem)},
  { 152, -1, sizeof(::BulletNewNtf)},
  { 158, -1, sizeof(::HeartBeatReq)},
  { 164, -1, sizeof(::HeartBeatAck)},
  { 171, -1, sizeof(::ObjectDieNotify)},
  { 177, -1, sizeof(::Msg_RidingMountReq)},
  { 183, -1, sizeof(::Msg_RidingMountAck)},
  { 189, -1, sizeof(::Msg_RoleRebornReq)},
  { 196, -1, sizeof(::Msg_RoleRebornAck)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SkillCastReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SkillCastAck_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SkillResultItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SkillResultNtf_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ObjectActionReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ObjectActionNty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ActionReqItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ObjectActionAck_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ActionNtyItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_NewItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ObjectNewNty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ObjectRemoveNty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_BulletItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_BulletNewNtf_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_HeartBeatReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_HeartBeatAck_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ObjectDieNotify_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_RidingMountReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_RidingMountAck_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_RoleRebornReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_RoleRebornAck_default_instance_),
};

const char descriptor_table_protodef_Msg_5fMove_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016Msg_Move.proto\032\016Msg_Base.proto\"\314\001\n\014Ski"
  "llCastReq\022\022\n\nObjectGuid\030\001 \001(\004\022\017\n\007SkillID"
  "\030\002 \001(\005\022\r\n\005HostX\030\003 \001(\002\022\r\n\005HostY\030\004 \001(\002\022\r\n\005"
  "HostZ\030\005 \001(\002\022\016\n\006HostFt\030\006 \001(\002\022\017\n\007TargetX\030\007"
  " \001(\002\022\017\n\007TargetY\030\010 \001(\002\022\017\n\007TargetZ\030\t \001(\002\022\020"
  "\n\010TargetFt\030\n \001(\002\022\025\n\rTargetObjects\030\013 \003(\004\""
  "3\n\014SkillCastAck\022\017\n\007RetCode\030\001 \001(\r\022\022\n\nObje"
  "ctGuid\030\002 \001(\004\"\242\001\n\017SkillResultItem\022\022\n\nObje"
  "ctGuid\030\001 \001(\004\022\017\n\007SkillID\030\002 \001(\005\022\020\n\010ActionI"
  "D\030\003 \001(\005\022\014\n\004OrgX\030\004 \001(\002\022\014\n\004OrgY\030\005 \001(\002\022\014\n\004O"
  "rgZ\030\006 \001(\002\022\r\n\005OrgFt\030\007 \001(\002\022\020\n\010HpChange\030\010 \001"
  "(\005\022\r\n\005bCrit\030\t \001(\010\"4\n\016SkillResultNtf\022\"\n\010I"
  "temList\030\001 \003(\0132\020.SkillResultItem\"5\n\017Objec"
  "tActionReq\022\"\n\nActionList\030\001 \003(\0132\016.ActionR"
  "eqItem\"5\n\017ObjectActionNty\022\"\n\nActionList\030"
  "\001 \003(\0132\016.ActionNtyItem\"r\n\rActionReqItem\022\022"
  "\n\nObjectGuid\030\001 \001(\004\022\020\n\010ActionID\030\002 \001(\005\022\r\n\005"
  "HostX\030\003 \001(\002\022\r\n\005HostY\030\004 \001(\002\022\r\n\005HostZ\030\005 \001("
  "\002\022\016\n\006HostFt\030\006 \001(\002\"5\n\017ObjectActionAck\022\"\n\n"
  "ActionList\030\001 \003(\0132\016.ActionReqItem\"\261\002\n\rAct"
  "ionNtyItem\022\022\n\nObjectGuid\030\001 \001(\004\022\020\n\010Action"
  "ID\030\002 \001(\005\022\014\n\004Camp\030\003 \001(\005\022\024\n\014ObjectStatus\030\004"
  " \001(\005\022\r\n\005Speed\030\005 \001(\005\022\r\n\005HostX\030\006 \001(\002\022\r\n\005Ho"
  "stY\030\007 \001(\002\022\r\n\005HostZ\030\010 \001(\002\022\016\n\006HostFt\030\t \001(\002"
  "\022\017\n\007ActorID\030\n \001(\005\022\017\n\007MountID\030\013 \001(\005\022\r\n\005Le"
  "vel\030\014 \001(\005\022\023\n\013ControlerID\030\r \001(\004\022\n\n\002Hp\030\016 \001"
  "(\005\022\n\n\002Mp\030\017 \001(\005\022\r\n\005HpMax\030\020 \001(\005\022\r\n\005MpMax\030\021"
  " \001(\005\022\016\n\006Equips\030\022 \003(\005\"\372\002\n\007NewItem\022\022\n\nObje"
  "ctGuid\030\001 \001(\004\022\020\n\010ActionID\030\002 \001(\005\022\017\n\007ObjTyp"
  "e\030\003 \001(\005\022\024\n\014ObjectStatus\030\004 \001(\005\022\017\n\007ActorID"
  "\030\005 \001(\005\022\017\n\007MountID\030\006 \001(\005\022\014\n\004Camp\030\007 \001(\005\022\014\n"
  "\004Name\030\010 \001(\t\022\r\n\005Level\030\t \001(\005\022\r\n\005Speed\030\n \001("
  "\005\022\020\n\010HostGuid\030\013 \001(\004\022\023\n\013ControlerID\030\014 \001(\004"
  "\022\020\n\010SummonID\030\r \001(\004\022\t\n\001X\030\016 \001(\002\022\t\n\001Y\030\017 \001(\002"
  "\022\t\n\001Z\030\020 \001(\002\022\n\n\002Ft\030\021 \001(\002\022\n\n\002Hp\030\022 \001(\005\022\n\n\002M"
  "p\030\023 \001(\005\022\r\n\005HpMax\030\024 \001(\005\022\r\n\005MpMax\030\025 \001(\005\022\016\n"
  "\006Equips\030\026 \003(\005\022\032\n\006Skills\030\027 \003(\0132\n.SkillIte"
  "m\")\n\014ObjectNewNty\022\031\n\007NewList\030\001 \003(\0132\010.New"
  "Item\"%\n\017ObjectRemoveNty\022\022\n\nRemoveList\030\001 "
  "\003(\004\"\317\001\n\nBulletItem\022\022\n\nObjectGuid\030\001 \001(\004\022\022"
  "\n\nTargetGuid\030\002 \001(\004\022\022\n\nCasterGuid\030\003 \001(\004\022\020"
  "\n\010BulletID\030\004 \001(\005\022\t\n\001X\030\005 \001(\002\022\t\n\001Y\030\006 \001(\002\022\t"
  "\n\001Z\030\007 \001(\002\022\r\n\005Angle\030\010 \001(\002\022\r\n\005Speed\030\t \001(\002\022"
  "\020\n\010AccSpeed\030\n \001(\002\022\020\n\010LifeTime\030\013 \001(\002\022\020\n\010L"
  "eftTime\030\014 \001(\002\"-\n\014BulletNewNtf\022\035\n\010ItemLis"
  "t\030\001 \003(\0132\013.BulletItem\"!\n\014HeartBeatReq\022\021\n\t"
  "TimeStamp\030\001 \001(\r\"5\n\014HeartBeatAck\022\021\n\tTimeS"
  "tamp\030\001 \001(\r\022\022\n\nServerTime\030\002 \001(\r\"%\n\017Object"
  "DieNotify\022\022\n\nObjectGuid\030\001 \001(\004\"(\n\022Msg_Rid"
  "ingMountReq\022\022\n\nObjectGuid\030\001 \001(\004\"%\n\022Msg_R"
  "idingMountAck\022\017\n\007RetCode\030\001 \001(\r\";\n\021Msg_Ro"
  "leRebornReq\022\022\n\nObjectGuid\030\001 \001(\004\022\022\n\nRebor"
  "nType\030\002 \001(\005\"$\n\021Msg_RoleRebornAck\022\017\n\007RetC"
  "ode\030\001 \001(\rb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Msg_5fMove_2eproto_deps[1] = {
  &::descriptor_table_Msg_5fBase_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Msg_5fMove_2eproto_sccs[21] = {
  &scc_info_ActionNtyItem_Msg_5fMove_2eproto.base,
  &scc_info_ActionReqItem_Msg_5fMove_2eproto.base,
  &scc_info_BulletItem_Msg_5fMove_2eproto.base,
  &scc_info_BulletNewNtf_Msg_5fMove_2eproto.base,
  &scc_info_HeartBeatAck_Msg_5fMove_2eproto.base,
  &scc_info_HeartBeatReq_Msg_5fMove_2eproto.base,
  &scc_info_Msg_RidingMountAck_Msg_5fMove_2eproto.base,
  &scc_info_Msg_RidingMountReq_Msg_5fMove_2eproto.base,
  &scc_info_Msg_RoleRebornAck_Msg_5fMove_2eproto.base,
  &scc_info_Msg_RoleRebornReq_Msg_5fMove_2eproto.base,
  &scc_info_NewItem_Msg_5fMove_2eproto.base,
  &scc_info_ObjectActionAck_Msg_5fMove_2eproto.base,
  &scc_info_ObjectActionNty_Msg_5fMove_2eproto.base,
  &scc_info_ObjectActionReq_Msg_5fMove_2eproto.base,
  &scc_info_ObjectDieNotify_Msg_5fMove_2eproto.base,
  &scc_info_ObjectNewNty_Msg_5fMove_2eproto.base,
  &scc_info_ObjectRemoveNty_Msg_5fMove_2eproto.base,
  &scc_info_SkillCastAck_Msg_5fMove_2eproto.base,
  &scc_info_SkillCastReq_Msg_5fMove_2eproto.base,
  &scc_info_SkillResultItem_Msg_5fMove_2eproto.base,
  &scc_info_SkillResultNtf_Msg_5fMove_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Msg_5fMove_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Msg_5fMove_2eproto = {
  false, false, descriptor_table_protodef_Msg_5fMove_2eproto, "Msg_Move.proto", 2137,
  &descriptor_table_Msg_5fMove_2eproto_once, descriptor_table_Msg_5fMove_2eproto_sccs, descriptor_table_Msg_5fMove_2eproto_deps, 21, 1,
  schemas, file_default_instances, TableStruct_Msg_5fMove_2eproto::offsets,
  file_level_metadata_Msg_5fMove_2eproto, 21, file_level_enum_descriptors_Msg_5fMove_2eproto, file_level_service_descriptors_Msg_5fMove_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Msg_5fMove_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Msg_5fMove_2eproto)), true);

// ===================================================================

void SkillCastReq::InitAsDefaultInstance() {
}
class SkillCastReq::_Internal {
 public:
};

SkillCastReq::SkillCastReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  targetobjects_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SkillCastReq)
}
SkillCastReq::SkillCastReq(const SkillCastReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      targetobjects_(from.targetobjects_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&objectguid_, &from.objectguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetft_) -
    reinterpret_cast<char*>(&objectguid_)) + sizeof(targetft_));
  // @@protoc_insertion_point(copy_constructor:SkillCastReq)
}

void SkillCastReq::SharedCtor() {
  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetft_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(targetft_));
}

SkillCastReq::~SkillCastReq() {
  // @@protoc_insertion_point(destructor:SkillCastReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SkillCastReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SkillCastReq::ArenaDtor(void* object) {
  SkillCastReq* _this = reinterpret_cast< SkillCastReq* >(object);
  (void)_this;
}
void SkillCastReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SkillCastReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SkillCastReq& SkillCastReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SkillCastReq_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void SkillCastReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillCastReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetobjects_.Clear();
  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetft_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(targetft_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SkillCastReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 ObjectGuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SkillID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          skillid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float HostX = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          hostx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float HostY = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          hosty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float HostZ = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          hostz_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float HostFt = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          hostft_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float TargetX = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          targetx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float TargetY = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          targety_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float TargetZ = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          targetz_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float TargetFt = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 85)) {
          targetft_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated uint64 TargetObjects = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_targetobjects(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88) {
          _internal_add_targetobjects(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SkillCastReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SkillCastReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectguid(), target);
  }

  // int32 SkillID = 2;
  if (this->skillid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_skillid(), target);
  }

  // float HostX = 3;
  if (!(this->hostx() <= 0 && this->hostx() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_hostx(), target);
  }

  // float HostY = 4;
  if (!(this->hosty() <= 0 && this->hosty() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_hosty(), target);
  }

  // float HostZ = 5;
  if (!(this->hostz() <= 0 && this->hostz() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_hostz(), target);
  }

  // float HostFt = 6;
  if (!(this->hostft() <= 0 && this->hostft() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_hostft(), target);
  }

  // float TargetX = 7;
  if (!(this->targetx() <= 0 && this->targetx() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_targetx(), target);
  }

  // float TargetY = 8;
  if (!(this->targety() <= 0 && this->targety() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_targety(), target);
  }

  // float TargetZ = 9;
  if (!(this->targetz() <= 0 && this->targetz() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(9, this->_internal_targetz(), target);
  }

  // float TargetFt = 10;
  if (!(this->targetft() <= 0 && this->targetft() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(10, this->_internal_targetft(), target);
  }

  // repeated uint64 TargetObjects = 11;
  {
    int byte_size = _targetobjects_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          11, _internal_targetobjects(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillCastReq)
  return target;
}

size_t SkillCastReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillCastReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 TargetObjects = 11;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->targetobjects_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _targetobjects_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectguid());
  }

  // int32 SkillID = 2;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skillid());
  }

  // float HostX = 3;
  if (!(this->hostx() <= 0 && this->hostx() >= 0)) {
    total_size += 1 + 4;
  }

  // float HostY = 4;
  if (!(this->hosty() <= 0 && this->hosty() >= 0)) {
    total_size += 1 + 4;
  }

  // float HostZ = 5;
  if (!(this->hostz() <= 0 && this->hostz() >= 0)) {
    total_size += 1 + 4;
  }

  // float HostFt = 6;
  if (!(this->hostft() <= 0 && this->hostft() >= 0)) {
    total_size += 1 + 4;
  }

  // float TargetX = 7;
  if (!(this->targetx() <= 0 && this->targetx() >= 0)) {
    total_size += 1 + 4;
  }

  // float TargetY = 8;
  if (!(this->targety() <= 0 && this->targety() >= 0)) {
    total_size += 1 + 4;
  }

  // float TargetZ = 9;
  if (!(this->targetz() <= 0 && this->targetz() >= 0)) {
    total_size += 1 + 4;
  }

  // float TargetFt = 10;
  if (!(this->targetft() <= 0 && this->targetft() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SkillCastReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillCastReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillCastReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SkillCastReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillCastReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillCastReq)
    MergeFrom(*source);
  }
}

void SkillCastReq::MergeFrom(const SkillCastReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillCastReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  targetobjects_.MergeFrom(from.targetobjects_);
  if (from.objectguid() != 0) {
    _internal_set_objectguid(from._internal_objectguid());
  }
  if (from.skillid() != 0) {
    _internal_set_skillid(from._internal_skillid());
  }
  if (!(from.hostx() <= 0 && from.hostx() >= 0)) {
    _internal_set_hostx(from._internal_hostx());
  }
  if (!(from.hosty() <= 0 && from.hosty() >= 0)) {
    _internal_set_hosty(from._internal_hosty());
  }
  if (!(from.hostz() <= 0 && from.hostz() >= 0)) {
    _internal_set_hostz(from._internal_hostz());
  }
  if (!(from.hostft() <= 0 && from.hostft() >= 0)) {
    _internal_set_hostft(from._internal_hostft());
  }
  if (!(from.targetx() <= 0 && from.targetx() >= 0)) {
    _internal_set_targetx(from._internal_targetx());
  }
  if (!(from.targety() <= 0 && from.targety() >= 0)) {
    _internal_set_targety(from._internal_targety());
  }
  if (!(from.targetz() <= 0 && from.targetz() >= 0)) {
    _internal_set_targetz(from._internal_targetz());
  }
  if (!(from.targetft() <= 0 && from.targetft() >= 0)) {
    _internal_set_targetft(from._internal_targetft());
  }
}

void SkillCastReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillCastReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillCastReq::CopyFrom(const SkillCastReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillCastReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillCastReq::IsInitialized() const {
  return true;
}

void SkillCastReq::InternalSwap(SkillCastReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  targetobjects_.InternalSwap(&other->targetobjects_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SkillCastReq, targetft_)
      + sizeof(SkillCastReq::targetft_)
      - PROTOBUF_FIELD_OFFSET(SkillCastReq, objectguid_)>(
          reinterpret_cast<char*>(&objectguid_),
          reinterpret_cast<char*>(&other->objectguid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SkillCastReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SkillCastAck::InitAsDefaultInstance() {
}
class SkillCastAck::_Internal {
 public:
};

SkillCastAck::SkillCastAck(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SkillCastAck)
}
SkillCastAck::SkillCastAck(const SkillCastAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&objectguid_, &from.objectguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&objectguid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:SkillCastAck)
}

void SkillCastAck::SharedCtor() {
  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(retcode_));
}

SkillCastAck::~SkillCastAck() {
  // @@protoc_insertion_point(destructor:SkillCastAck)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SkillCastAck::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SkillCastAck::ArenaDtor(void* object) {
  SkillCastAck* _this = reinterpret_cast< SkillCastAck* >(object);
  (void)_this;
}
void SkillCastAck::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SkillCastAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SkillCastAck& SkillCastAck::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SkillCastAck_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void SkillCastAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillCastAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(retcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SkillCastAck::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ObjectGuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          objectguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SkillCastAck::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SkillCastAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  // uint64 ObjectGuid = 2;
  if (this->objectguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_objectguid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillCastAck)
  return target;
}

size_t SkillCastAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillCastAck)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 ObjectGuid = 2;
  if (this->objectguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectguid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SkillCastAck::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillCastAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillCastAck* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SkillCastAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillCastAck)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillCastAck)
    MergeFrom(*source);
  }
}

void SkillCastAck::MergeFrom(const SkillCastAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillCastAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectguid() != 0) {
    _internal_set_objectguid(from._internal_objectguid());
  }
  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void SkillCastAck::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillCastAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillCastAck::CopyFrom(const SkillCastAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillCastAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillCastAck::IsInitialized() const {
  return true;
}

void SkillCastAck::InternalSwap(SkillCastAck* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SkillCastAck, retcode_)
      + sizeof(SkillCastAck::retcode_)
      - PROTOBUF_FIELD_OFFSET(SkillCastAck, objectguid_)>(
          reinterpret_cast<char*>(&objectguid_),
          reinterpret_cast<char*>(&other->objectguid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SkillCastAck::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SkillResultItem::InitAsDefaultInstance() {
}
class SkillResultItem::_Internal {
 public:
};

SkillResultItem::SkillResultItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SkillResultItem)
}
SkillResultItem::SkillResultItem(const SkillResultItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&objectguid_, &from.objectguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&bcrit_) -
    reinterpret_cast<char*>(&objectguid_)) + sizeof(bcrit_));
  // @@protoc_insertion_point(copy_constructor:SkillResultItem)
}

void SkillResultItem::SharedCtor() {
  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bcrit_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(bcrit_));
}

SkillResultItem::~SkillResultItem() {
  // @@protoc_insertion_point(destructor:SkillResultItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SkillResultItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SkillResultItem::ArenaDtor(void* object) {
  SkillResultItem* _this = reinterpret_cast< SkillResultItem* >(object);
  (void)_this;
}
void SkillResultItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SkillResultItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SkillResultItem& SkillResultItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SkillResultItem_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void SkillResultItem::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillResultItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bcrit_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(bcrit_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SkillResultItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 ObjectGuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SkillID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          skillid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ActionID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          actionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float OrgX = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          orgx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float OrgY = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          orgy_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float OrgZ = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          orgz_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float OrgFt = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          orgft_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 HpChange = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          hpchange_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool bCrit = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          bcrit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SkillResultItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SkillResultItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectguid(), target);
  }

  // int32 SkillID = 2;
  if (this->skillid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_skillid(), target);
  }

  // int32 ActionID = 3;
  if (this->actionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_actionid(), target);
  }

  // float OrgX = 4;
  if (!(this->orgx() <= 0 && this->orgx() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_orgx(), target);
  }

  // float OrgY = 5;
  if (!(this->orgy() <= 0 && this->orgy() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_orgy(), target);
  }

  // float OrgZ = 6;
  if (!(this->orgz() <= 0 && this->orgz() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_orgz(), target);
  }

  // float OrgFt = 7;
  if (!(this->orgft() <= 0 && this->orgft() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_orgft(), target);
  }

  // int32 HpChange = 8;
  if (this->hpchange() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_hpchange(), target);
  }

  // bool bCrit = 9;
  if (this->bcrit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_bcrit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillResultItem)
  return target;
}

size_t SkillResultItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillResultItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectguid());
  }

  // int32 SkillID = 2;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skillid());
  }

  // int32 ActionID = 3;
  if (this->actionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actionid());
  }

  // float OrgX = 4;
  if (!(this->orgx() <= 0 && this->orgx() >= 0)) {
    total_size += 1 + 4;
  }

  // float OrgY = 5;
  if (!(this->orgy() <= 0 && this->orgy() >= 0)) {
    total_size += 1 + 4;
  }

  // float OrgZ = 6;
  if (!(this->orgz() <= 0 && this->orgz() >= 0)) {
    total_size += 1 + 4;
  }

  // float OrgFt = 7;
  if (!(this->orgft() <= 0 && this->orgft() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 HpChange = 8;
  if (this->hpchange() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hpchange());
  }

  // bool bCrit = 9;
  if (this->bcrit() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SkillResultItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillResultItem)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillResultItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SkillResultItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillResultItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillResultItem)
    MergeFrom(*source);
  }
}

void SkillResultItem::MergeFrom(const SkillResultItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillResultItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectguid() != 0) {
    _internal_set_objectguid(from._internal_objectguid());
  }
  if (from.skillid() != 0) {
    _internal_set_skillid(from._internal_skillid());
  }
  if (from.actionid() != 0) {
    _internal_set_actionid(from._internal_actionid());
  }
  if (!(from.orgx() <= 0 && from.orgx() >= 0)) {
    _internal_set_orgx(from._internal_orgx());
  }
  if (!(from.orgy() <= 0 && from.orgy() >= 0)) {
    _internal_set_orgy(from._internal_orgy());
  }
  if (!(from.orgz() <= 0 && from.orgz() >= 0)) {
    _internal_set_orgz(from._internal_orgz());
  }
  if (!(from.orgft() <= 0 && from.orgft() >= 0)) {
    _internal_set_orgft(from._internal_orgft());
  }
  if (from.hpchange() != 0) {
    _internal_set_hpchange(from._internal_hpchange());
  }
  if (from.bcrit() != 0) {
    _internal_set_bcrit(from._internal_bcrit());
  }
}

void SkillResultItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillResultItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillResultItem::CopyFrom(const SkillResultItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillResultItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillResultItem::IsInitialized() const {
  return true;
}

void SkillResultItem::InternalSwap(SkillResultItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SkillResultItem, bcrit_)
      + sizeof(SkillResultItem::bcrit_)
      - PROTOBUF_FIELD_OFFSET(SkillResultItem, objectguid_)>(
          reinterpret_cast<char*>(&objectguid_),
          reinterpret_cast<char*>(&other->objectguid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SkillResultItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SkillResultNtf::InitAsDefaultInstance() {
}
class SkillResultNtf::_Internal {
 public:
};

SkillResultNtf::SkillResultNtf(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  itemlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SkillResultNtf)
}
SkillResultNtf::SkillResultNtf(const SkillResultNtf& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      itemlist_(from.itemlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SkillResultNtf)
}

void SkillResultNtf::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SkillResultNtf_Msg_5fMove_2eproto.base);
}

SkillResultNtf::~SkillResultNtf() {
  // @@protoc_insertion_point(destructor:SkillResultNtf)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SkillResultNtf::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SkillResultNtf::ArenaDtor(void* object) {
  SkillResultNtf* _this = reinterpret_cast< SkillResultNtf* >(object);
  (void)_this;
}
void SkillResultNtf::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SkillResultNtf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SkillResultNtf& SkillResultNtf::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SkillResultNtf_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void SkillResultNtf::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillResultNtf)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SkillResultNtf::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .SkillResultItem ItemList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_itemlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SkillResultNtf::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SkillResultNtf)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SkillResultItem ItemList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_itemlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_itemlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillResultNtf)
  return target;
}

size_t SkillResultNtf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillResultNtf)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SkillResultItem ItemList = 1;
  total_size += 1UL * this->_internal_itemlist_size();
  for (const auto& msg : this->itemlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SkillResultNtf::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillResultNtf)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillResultNtf* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SkillResultNtf>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillResultNtf)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillResultNtf)
    MergeFrom(*source);
  }
}

void SkillResultNtf::MergeFrom(const SkillResultNtf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillResultNtf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  itemlist_.MergeFrom(from.itemlist_);
}

void SkillResultNtf::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillResultNtf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillResultNtf::CopyFrom(const SkillResultNtf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillResultNtf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillResultNtf::IsInitialized() const {
  return true;
}

void SkillResultNtf::InternalSwap(SkillResultNtf* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  itemlist_.InternalSwap(&other->itemlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SkillResultNtf::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObjectActionReq::InitAsDefaultInstance() {
}
class ObjectActionReq::_Internal {
 public:
};

ObjectActionReq::ObjectActionReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actionlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ObjectActionReq)
}
ObjectActionReq::ObjectActionReq(const ObjectActionReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actionlist_(from.actionlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ObjectActionReq)
}

void ObjectActionReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectActionReq_Msg_5fMove_2eproto.base);
}

ObjectActionReq::~ObjectActionReq() {
  // @@protoc_insertion_point(destructor:ObjectActionReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjectActionReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ObjectActionReq::ArenaDtor(void* object) {
  ObjectActionReq* _this = reinterpret_cast< ObjectActionReq* >(object);
  (void)_this;
}
void ObjectActionReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectActionReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectActionReq& ObjectActionReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectActionReq_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void ObjectActionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ObjectActionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actionlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectActionReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ActionReqItem ActionList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actionlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectActionReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ObjectActionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ActionReqItem ActionList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_actionlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_actionlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ObjectActionReq)
  return target;
}

size_t ObjectActionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ObjectActionReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ActionReqItem ActionList = 1;
  total_size += 1UL * this->_internal_actionlist_size();
  for (const auto& msg : this->actionlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectActionReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ObjectActionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectActionReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectActionReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ObjectActionReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ObjectActionReq)
    MergeFrom(*source);
  }
}

void ObjectActionReq::MergeFrom(const ObjectActionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ObjectActionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actionlist_.MergeFrom(from.actionlist_);
}

void ObjectActionReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ObjectActionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectActionReq::CopyFrom(const ObjectActionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObjectActionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectActionReq::IsInitialized() const {
  return true;
}

void ObjectActionReq::InternalSwap(ObjectActionReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actionlist_.InternalSwap(&other->actionlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectActionReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObjectActionNty::InitAsDefaultInstance() {
}
class ObjectActionNty::_Internal {
 public:
};

ObjectActionNty::ObjectActionNty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actionlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ObjectActionNty)
}
ObjectActionNty::ObjectActionNty(const ObjectActionNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actionlist_(from.actionlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ObjectActionNty)
}

void ObjectActionNty::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectActionNty_Msg_5fMove_2eproto.base);
}

ObjectActionNty::~ObjectActionNty() {
  // @@protoc_insertion_point(destructor:ObjectActionNty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjectActionNty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ObjectActionNty::ArenaDtor(void* object) {
  ObjectActionNty* _this = reinterpret_cast< ObjectActionNty* >(object);
  (void)_this;
}
void ObjectActionNty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectActionNty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectActionNty& ObjectActionNty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectActionNty_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void ObjectActionNty::Clear() {
// @@protoc_insertion_point(message_clear_start:ObjectActionNty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actionlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectActionNty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ActionNtyItem ActionList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actionlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectActionNty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ObjectActionNty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ActionNtyItem ActionList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_actionlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_actionlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ObjectActionNty)
  return target;
}

size_t ObjectActionNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ObjectActionNty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ActionNtyItem ActionList = 1;
  total_size += 1UL * this->_internal_actionlist_size();
  for (const auto& msg : this->actionlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectActionNty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ObjectActionNty)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectActionNty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectActionNty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ObjectActionNty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ObjectActionNty)
    MergeFrom(*source);
  }
}

void ObjectActionNty::MergeFrom(const ObjectActionNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ObjectActionNty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actionlist_.MergeFrom(from.actionlist_);
}

void ObjectActionNty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ObjectActionNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectActionNty::CopyFrom(const ObjectActionNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObjectActionNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectActionNty::IsInitialized() const {
  return true;
}

void ObjectActionNty::InternalSwap(ObjectActionNty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actionlist_.InternalSwap(&other->actionlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectActionNty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActionReqItem::InitAsDefaultInstance() {
}
class ActionReqItem::_Internal {
 public:
};

ActionReqItem::ActionReqItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ActionReqItem)
}
ActionReqItem::ActionReqItem(const ActionReqItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&objectguid_, &from.objectguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&hostft_) -
    reinterpret_cast<char*>(&objectguid_)) + sizeof(hostft_));
  // @@protoc_insertion_point(copy_constructor:ActionReqItem)
}

void ActionReqItem::SharedCtor() {
  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hostft_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(hostft_));
}

ActionReqItem::~ActionReqItem() {
  // @@protoc_insertion_point(destructor:ActionReqItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ActionReqItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ActionReqItem::ArenaDtor(void* object) {
  ActionReqItem* _this = reinterpret_cast< ActionReqItem* >(object);
  (void)_this;
}
void ActionReqItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActionReqItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActionReqItem& ActionReqItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActionReqItem_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void ActionReqItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ActionReqItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hostft_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(hostft_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActionReqItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 ObjectGuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ActionID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          actionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float HostX = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          hostx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float HostY = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          hosty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float HostZ = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          hostz_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float HostFt = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          hostft_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActionReqItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActionReqItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectguid(), target);
  }

  // int32 ActionID = 2;
  if (this->actionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_actionid(), target);
  }

  // float HostX = 3;
  if (!(this->hostx() <= 0 && this->hostx() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_hostx(), target);
  }

  // float HostY = 4;
  if (!(this->hosty() <= 0 && this->hosty() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_hosty(), target);
  }

  // float HostZ = 5;
  if (!(this->hostz() <= 0 && this->hostz() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_hostz(), target);
  }

  // float HostFt = 6;
  if (!(this->hostft() <= 0 && this->hostft() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_hostft(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActionReqItem)
  return target;
}

size_t ActionReqItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActionReqItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectguid());
  }

  // int32 ActionID = 2;
  if (this->actionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actionid());
  }

  // float HostX = 3;
  if (!(this->hostx() <= 0 && this->hostx() >= 0)) {
    total_size += 1 + 4;
  }

  // float HostY = 4;
  if (!(this->hosty() <= 0 && this->hosty() >= 0)) {
    total_size += 1 + 4;
  }

  // float HostZ = 5;
  if (!(this->hostz() <= 0 && this->hostz() >= 0)) {
    total_size += 1 + 4;
  }

  // float HostFt = 6;
  if (!(this->hostft() <= 0 && this->hostft() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionReqItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActionReqItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionReqItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActionReqItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActionReqItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActionReqItem)
    MergeFrom(*source);
  }
}

void ActionReqItem::MergeFrom(const ActionReqItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActionReqItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectguid() != 0) {
    _internal_set_objectguid(from._internal_objectguid());
  }
  if (from.actionid() != 0) {
    _internal_set_actionid(from._internal_actionid());
  }
  if (!(from.hostx() <= 0 && from.hostx() >= 0)) {
    _internal_set_hostx(from._internal_hostx());
  }
  if (!(from.hosty() <= 0 && from.hosty() >= 0)) {
    _internal_set_hosty(from._internal_hosty());
  }
  if (!(from.hostz() <= 0 && from.hostz() >= 0)) {
    _internal_set_hostz(from._internal_hostz());
  }
  if (!(from.hostft() <= 0 && from.hostft() >= 0)) {
    _internal_set_hostft(from._internal_hostft());
  }
}

void ActionReqItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActionReqItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionReqItem::CopyFrom(const ActionReqItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActionReqItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionReqItem::IsInitialized() const {
  return true;
}

void ActionReqItem::InternalSwap(ActionReqItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ActionReqItem, hostft_)
      + sizeof(ActionReqItem::hostft_)
      - PROTOBUF_FIELD_OFFSET(ActionReqItem, objectguid_)>(
          reinterpret_cast<char*>(&objectguid_),
          reinterpret_cast<char*>(&other->objectguid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionReqItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObjectActionAck::InitAsDefaultInstance() {
}
class ObjectActionAck::_Internal {
 public:
};

ObjectActionAck::ObjectActionAck(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actionlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ObjectActionAck)
}
ObjectActionAck::ObjectActionAck(const ObjectActionAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actionlist_(from.actionlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ObjectActionAck)
}

void ObjectActionAck::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectActionAck_Msg_5fMove_2eproto.base);
}

ObjectActionAck::~ObjectActionAck() {
  // @@protoc_insertion_point(destructor:ObjectActionAck)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjectActionAck::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ObjectActionAck::ArenaDtor(void* object) {
  ObjectActionAck* _this = reinterpret_cast< ObjectActionAck* >(object);
  (void)_this;
}
void ObjectActionAck::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectActionAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectActionAck& ObjectActionAck::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectActionAck_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void ObjectActionAck::Clear() {
// @@protoc_insertion_point(message_clear_start:ObjectActionAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actionlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectActionAck::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ActionReqItem ActionList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actionlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectActionAck::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ObjectActionAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ActionReqItem ActionList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_actionlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_actionlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ObjectActionAck)
  return target;
}

size_t ObjectActionAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ObjectActionAck)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ActionReqItem ActionList = 1;
  total_size += 1UL * this->_internal_actionlist_size();
  for (const auto& msg : this->actionlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectActionAck::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ObjectActionAck)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectActionAck* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectActionAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ObjectActionAck)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ObjectActionAck)
    MergeFrom(*source);
  }
}

void ObjectActionAck::MergeFrom(const ObjectActionAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ObjectActionAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actionlist_.MergeFrom(from.actionlist_);
}

void ObjectActionAck::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ObjectActionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectActionAck::CopyFrom(const ObjectActionAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObjectActionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectActionAck::IsInitialized() const {
  return true;
}

void ObjectActionAck::InternalSwap(ObjectActionAck* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actionlist_.InternalSwap(&other->actionlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectActionAck::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActionNtyItem::InitAsDefaultInstance() {
}
class ActionNtyItem::_Internal {
 public:
};

ActionNtyItem::ActionNtyItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  equips_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ActionNtyItem)
}
ActionNtyItem::ActionNtyItem(const ActionNtyItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      equips_(from.equips_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&objectguid_, &from.objectguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mpmax_) -
    reinterpret_cast<char*>(&objectguid_)) + sizeof(mpmax_));
  // @@protoc_insertion_point(copy_constructor:ActionNtyItem)
}

void ActionNtyItem::SharedCtor() {
  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mpmax_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(mpmax_));
}

ActionNtyItem::~ActionNtyItem() {
  // @@protoc_insertion_point(destructor:ActionNtyItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ActionNtyItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ActionNtyItem::ArenaDtor(void* object) {
  ActionNtyItem* _this = reinterpret_cast< ActionNtyItem* >(object);
  (void)_this;
}
void ActionNtyItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActionNtyItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActionNtyItem& ActionNtyItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActionNtyItem_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void ActionNtyItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ActionNtyItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  equips_.Clear();
  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mpmax_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(mpmax_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActionNtyItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 ObjectGuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ActionID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          actionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Camp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          camp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ObjectStatus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          objectstatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Speed = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float HostX = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          hostx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float HostY = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          hosty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float HostZ = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          hostz_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float HostFt = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          hostft_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 ActorID = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          actorid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 MountID = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          mountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Level = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ControlerID = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          controlerid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Hp = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Mp = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          mp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 HpMax = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          hpmax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 MpMax = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          mpmax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 Equips = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_equips(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144) {
          _internal_add_equips(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActionNtyItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActionNtyItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectguid(), target);
  }

  // int32 ActionID = 2;
  if (this->actionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_actionid(), target);
  }

  // int32 Camp = 3;
  if (this->camp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_camp(), target);
  }

  // int32 ObjectStatus = 4;
  if (this->objectstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_objectstatus(), target);
  }

  // int32 Speed = 5;
  if (this->speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_speed(), target);
  }

  // float HostX = 6;
  if (!(this->hostx() <= 0 && this->hostx() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_hostx(), target);
  }

  // float HostY = 7;
  if (!(this->hosty() <= 0 && this->hosty() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_hosty(), target);
  }

  // float HostZ = 8;
  if (!(this->hostz() <= 0 && this->hostz() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_hostz(), target);
  }

  // float HostFt = 9;
  if (!(this->hostft() <= 0 && this->hostft() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(9, this->_internal_hostft(), target);
  }

  // int32 ActorID = 10;
  if (this->actorid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_actorid(), target);
  }

  // int32 MountID = 11;
  if (this->mountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_mountid(), target);
  }

  // int32 Level = 12;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_level(), target);
  }

  // uint64 ControlerID = 13;
  if (this->controlerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(13, this->_internal_controlerid(), target);
  }

  // int32 Hp = 14;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->_internal_hp(), target);
  }

  // int32 Mp = 15;
  if (this->mp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->_internal_mp(), target);
  }

  // int32 HpMax = 16;
  if (this->hpmax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(16, this->_internal_hpmax(), target);
  }

  // int32 MpMax = 17;
  if (this->mpmax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(17, this->_internal_mpmax(), target);
  }

  // repeated int32 Equips = 18;
  {
    int byte_size = _equips_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          18, _internal_equips(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActionNtyItem)
  return target;
}

size_t ActionNtyItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActionNtyItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 Equips = 18;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->equips_);
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _equips_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectguid());
  }

  // int32 ActionID = 2;
  if (this->actionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actionid());
  }

  // int32 Camp = 3;
  if (this->camp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_camp());
  }

  // int32 ObjectStatus = 4;
  if (this->objectstatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_objectstatus());
  }

  // int32 Speed = 5;
  if (this->speed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_speed());
  }

  // float HostX = 6;
  if (!(this->hostx() <= 0 && this->hostx() >= 0)) {
    total_size += 1 + 4;
  }

  // float HostY = 7;
  if (!(this->hosty() <= 0 && this->hosty() >= 0)) {
    total_size += 1 + 4;
  }

  // float HostZ = 8;
  if (!(this->hostz() <= 0 && this->hostz() >= 0)) {
    total_size += 1 + 4;
  }

  // float HostFt = 9;
  if (!(this->hostft() <= 0 && this->hostft() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 ActorID = 10;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actorid());
  }

  // int32 MountID = 11;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mountid());
  }

  // uint64 ControlerID = 13;
  if (this->controlerid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_controlerid());
  }

  // int32 Level = 12;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  // int32 Hp = 14;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hp());
  }

  // int32 Mp = 15;
  if (this->mp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mp());
  }

  // int32 HpMax = 16;
  if (this->hpmax() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hpmax());
  }

  // int32 MpMax = 17;
  if (this->mpmax() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mpmax());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionNtyItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActionNtyItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionNtyItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActionNtyItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActionNtyItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActionNtyItem)
    MergeFrom(*source);
  }
}

void ActionNtyItem::MergeFrom(const ActionNtyItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActionNtyItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  equips_.MergeFrom(from.equips_);
  if (from.objectguid() != 0) {
    _internal_set_objectguid(from._internal_objectguid());
  }
  if (from.actionid() != 0) {
    _internal_set_actionid(from._internal_actionid());
  }
  if (from.camp() != 0) {
    _internal_set_camp(from._internal_camp());
  }
  if (from.objectstatus() != 0) {
    _internal_set_objectstatus(from._internal_objectstatus());
  }
  if (from.speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
  if (!(from.hostx() <= 0 && from.hostx() >= 0)) {
    _internal_set_hostx(from._internal_hostx());
  }
  if (!(from.hosty() <= 0 && from.hosty() >= 0)) {
    _internal_set_hosty(from._internal_hosty());
  }
  if (!(from.hostz() <= 0 && from.hostz() >= 0)) {
    _internal_set_hostz(from._internal_hostz());
  }
  if (!(from.hostft() <= 0 && from.hostft() >= 0)) {
    _internal_set_hostft(from._internal_hostft());
  }
  if (from.actorid() != 0) {
    _internal_set_actorid(from._internal_actorid());
  }
  if (from.mountid() != 0) {
    _internal_set_mountid(from._internal_mountid());
  }
  if (from.controlerid() != 0) {
    _internal_set_controlerid(from._internal_controlerid());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
  if (from.mp() != 0) {
    _internal_set_mp(from._internal_mp());
  }
  if (from.hpmax() != 0) {
    _internal_set_hpmax(from._internal_hpmax());
  }
  if (from.mpmax() != 0) {
    _internal_set_mpmax(from._internal_mpmax());
  }
}

void ActionNtyItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActionNtyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionNtyItem::CopyFrom(const ActionNtyItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActionNtyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionNtyItem::IsInitialized() const {
  return true;
}

void ActionNtyItem::InternalSwap(ActionNtyItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  equips_.InternalSwap(&other->equips_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ActionNtyItem, mpmax_)
      + sizeof(ActionNtyItem::mpmax_)
      - PROTOBUF_FIELD_OFFSET(ActionNtyItem, objectguid_)>(
          reinterpret_cast<char*>(&objectguid_),
          reinterpret_cast<char*>(&other->objectguid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionNtyItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NewItem::InitAsDefaultInstance() {
}
class NewItem::_Internal {
 public:
};

void NewItem::clear_skills() {
  skills_.Clear();
}
NewItem::NewItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  equips_(arena),
  skills_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:NewItem)
}
NewItem::NewItem(const NewItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      equips_(from.equips_),
      skills_(from.skills_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ::memcpy(&objectguid_, &from.objectguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mpmax_) -
    reinterpret_cast<char*>(&objectguid_)) + sizeof(mpmax_));
  // @@protoc_insertion_point(copy_constructor:NewItem)
}

void NewItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NewItem_Msg_5fMove_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mpmax_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(mpmax_));
}

NewItem::~NewItem() {
  // @@protoc_insertion_point(destructor:NewItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NewItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NewItem::ArenaDtor(void* object) {
  NewItem* _this = reinterpret_cast< NewItem* >(object);
  (void)_this;
}
void NewItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NewItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NewItem& NewItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NewItem_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void NewItem::Clear() {
// @@protoc_insertion_point(message_clear_start:NewItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  equips_.Clear();
  skills_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mpmax_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(mpmax_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 ObjectGuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ActionID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          actionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ObjType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          objtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ObjectStatus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          objectstatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ActorID = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          actorid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 MountID = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          mountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Camp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          camp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "NewItem.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Level = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Speed = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 HostGuid = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          hostguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 ControlerID = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          controlerid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 SummonID = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          summonid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float X = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 117)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float Y = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 125)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float Z = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 133)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float Ft = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 141)) {
          ft_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 Hp = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Mp = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          mp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 HpMax = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          hpmax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 MpMax = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          mpmax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 Equips = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_equips(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176) {
          _internal_add_equips(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .SkillItem Skills = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_skills(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<186>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NewItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NewItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectguid(), target);
  }

  // int32 ActionID = 2;
  if (this->actionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_actionid(), target);
  }

  // int32 ObjType = 3;
  if (this->objtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_objtype(), target);
  }

  // int32 ObjectStatus = 4;
  if (this->objectstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_objectstatus(), target);
  }

  // int32 ActorID = 5;
  if (this->actorid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_actorid(), target);
  }

  // int32 MountID = 6;
  if (this->mountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_mountid(), target);
  }

  // int32 Camp = 7;
  if (this->camp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_camp(), target);
  }

  // string Name = 8;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NewItem.Name");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_name(), target);
  }

  // int32 Level = 9;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_level(), target);
  }

  // int32 Speed = 10;
  if (this->speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_speed(), target);
  }

  // uint64 HostGuid = 11;
  if (this->hostguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(11, this->_internal_hostguid(), target);
  }

  // uint64 ControlerID = 12;
  if (this->controlerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(12, this->_internal_controlerid(), target);
  }

  // uint64 SummonID = 13;
  if (this->summonid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(13, this->_internal_summonid(), target);
  }

  // float X = 14;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(14, this->_internal_x(), target);
  }

  // float Y = 15;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(15, this->_internal_y(), target);
  }

  // float Z = 16;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(16, this->_internal_z(), target);
  }

  // float Ft = 17;
  if (!(this->ft() <= 0 && this->ft() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(17, this->_internal_ft(), target);
  }

  // int32 Hp = 18;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(18, this->_internal_hp(), target);
  }

  // int32 Mp = 19;
  if (this->mp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->_internal_mp(), target);
  }

  // int32 HpMax = 20;
  if (this->hpmax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(20, this->_internal_hpmax(), target);
  }

  // int32 MpMax = 21;
  if (this->mpmax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(21, this->_internal_mpmax(), target);
  }

  // repeated int32 Equips = 22;
  {
    int byte_size = _equips_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          22, _internal_equips(), byte_size, target);
    }
  }

  // repeated .SkillItem Skills = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_skills_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, this->_internal_skills(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NewItem)
  return target;
}

size_t NewItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NewItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 Equips = 22;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->equips_);
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _equips_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .SkillItem Skills = 23;
  total_size += 2UL * this->_internal_skills_size();
  for (const auto& msg : this->skills_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 8;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectguid());
  }

  // int32 ActionID = 2;
  if (this->actionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actionid());
  }

  // int32 ObjType = 3;
  if (this->objtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_objtype());
  }

  // int32 ObjectStatus = 4;
  if (this->objectstatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_objectstatus());
  }

  // int32 ActorID = 5;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actorid());
  }

  // int32 MountID = 6;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mountid());
  }

  // int32 Camp = 7;
  if (this->camp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_camp());
  }

  // int32 Level = 9;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  // int32 Speed = 10;
  if (this->speed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_speed());
  }

  // uint64 HostGuid = 11;
  if (this->hostguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_hostguid());
  }

  // uint64 ControlerID = 12;
  if (this->controlerid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_controlerid());
  }

  // uint64 SummonID = 13;
  if (this->summonid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_summonid());
  }

  // float X = 14;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float Y = 15;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float Z = 16;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 2 + 4;
  }

  // float Ft = 17;
  if (!(this->ft() <= 0 && this->ft() >= 0)) {
    total_size += 2 + 4;
  }

  // int32 Hp = 18;
  if (this->hp() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hp());
  }

  // int32 Mp = 19;
  if (this->mp() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mp());
  }

  // int32 HpMax = 20;
  if (this->hpmax() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hpmax());
  }

  // int32 MpMax = 21;
  if (this->mpmax() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mpmax());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NewItem)
  GOOGLE_DCHECK_NE(&from, this);
  const NewItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NewItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NewItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NewItem)
    MergeFrom(*source);
  }
}

void NewItem::MergeFrom(const NewItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NewItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  equips_.MergeFrom(from.equips_);
  skills_.MergeFrom(from.skills_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.objectguid() != 0) {
    _internal_set_objectguid(from._internal_objectguid());
  }
  if (from.actionid() != 0) {
    _internal_set_actionid(from._internal_actionid());
  }
  if (from.objtype() != 0) {
    _internal_set_objtype(from._internal_objtype());
  }
  if (from.objectstatus() != 0) {
    _internal_set_objectstatus(from._internal_objectstatus());
  }
  if (from.actorid() != 0) {
    _internal_set_actorid(from._internal_actorid());
  }
  if (from.mountid() != 0) {
    _internal_set_mountid(from._internal_mountid());
  }
  if (from.camp() != 0) {
    _internal_set_camp(from._internal_camp());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
  if (from.hostguid() != 0) {
    _internal_set_hostguid(from._internal_hostguid());
  }
  if (from.controlerid() != 0) {
    _internal_set_controlerid(from._internal_controlerid());
  }
  if (from.summonid() != 0) {
    _internal_set_summonid(from._internal_summonid());
  }
  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
  if (!(from.ft() <= 0 && from.ft() >= 0)) {
    _internal_set_ft(from._internal_ft());
  }
  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
  if (from.mp() != 0) {
    _internal_set_mp(from._internal_mp());
  }
  if (from.hpmax() != 0) {
    _internal_set_hpmax(from._internal_hpmax());
  }
  if (from.mpmax() != 0) {
    _internal_set_mpmax(from._internal_mpmax());
  }
}

void NewItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NewItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewItem::CopyFrom(const NewItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NewItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewItem::IsInitialized() const {
  return true;
}

void NewItem::InternalSwap(NewItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  equips_.InternalSwap(&other->equips_);
  skills_.InternalSwap(&other->skills_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NewItem, mpmax_)
      + sizeof(NewItem::mpmax_)
      - PROTOBUF_FIELD_OFFSET(NewItem, objectguid_)>(
          reinterpret_cast<char*>(&objectguid_),
          reinterpret_cast<char*>(&other->objectguid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NewItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObjectNewNty::InitAsDefaultInstance() {
}
class ObjectNewNty::_Internal {
 public:
};

ObjectNewNty::ObjectNewNty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  newlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ObjectNewNty)
}
ObjectNewNty::ObjectNewNty(const ObjectNewNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      newlist_(from.newlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ObjectNewNty)
}

void ObjectNewNty::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectNewNty_Msg_5fMove_2eproto.base);
}

ObjectNewNty::~ObjectNewNty() {
  // @@protoc_insertion_point(destructor:ObjectNewNty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjectNewNty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ObjectNewNty::ArenaDtor(void* object) {
  ObjectNewNty* _this = reinterpret_cast< ObjectNewNty* >(object);
  (void)_this;
}
void ObjectNewNty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectNewNty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectNewNty& ObjectNewNty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectNewNty_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void ObjectNewNty::Clear() {
// @@protoc_insertion_point(message_clear_start:ObjectNewNty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  newlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectNewNty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .NewItem NewList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_newlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectNewNty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ObjectNewNty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NewItem NewList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_newlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_newlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ObjectNewNty)
  return target;
}

size_t ObjectNewNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ObjectNewNty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NewItem NewList = 1;
  total_size += 1UL * this->_internal_newlist_size();
  for (const auto& msg : this->newlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectNewNty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ObjectNewNty)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectNewNty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectNewNty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ObjectNewNty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ObjectNewNty)
    MergeFrom(*source);
  }
}

void ObjectNewNty::MergeFrom(const ObjectNewNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ObjectNewNty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  newlist_.MergeFrom(from.newlist_);
}

void ObjectNewNty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ObjectNewNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectNewNty::CopyFrom(const ObjectNewNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObjectNewNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectNewNty::IsInitialized() const {
  return true;
}

void ObjectNewNty::InternalSwap(ObjectNewNty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  newlist_.InternalSwap(&other->newlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectNewNty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObjectRemoveNty::InitAsDefaultInstance() {
}
class ObjectRemoveNty::_Internal {
 public:
};

ObjectRemoveNty::ObjectRemoveNty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  removelist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ObjectRemoveNty)
}
ObjectRemoveNty::ObjectRemoveNty(const ObjectRemoveNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      removelist_(from.removelist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ObjectRemoveNty)
}

void ObjectRemoveNty::SharedCtor() {
}

ObjectRemoveNty::~ObjectRemoveNty() {
  // @@protoc_insertion_point(destructor:ObjectRemoveNty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjectRemoveNty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ObjectRemoveNty::ArenaDtor(void* object) {
  ObjectRemoveNty* _this = reinterpret_cast< ObjectRemoveNty* >(object);
  (void)_this;
}
void ObjectRemoveNty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectRemoveNty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectRemoveNty& ObjectRemoveNty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectRemoveNty_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void ObjectRemoveNty::Clear() {
// @@protoc_insertion_point(message_clear_start:ObjectRemoveNty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  removelist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectRemoveNty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint64 RemoveList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_removelist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_removelist(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectRemoveNty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ObjectRemoveNty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 RemoveList = 1;
  {
    int byte_size = _removelist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_removelist(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ObjectRemoveNty)
  return target;
}

size_t ObjectRemoveNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ObjectRemoveNty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 RemoveList = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->removelist_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _removelist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectRemoveNty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ObjectRemoveNty)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRemoveNty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectRemoveNty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ObjectRemoveNty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ObjectRemoveNty)
    MergeFrom(*source);
  }
}

void ObjectRemoveNty::MergeFrom(const ObjectRemoveNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ObjectRemoveNty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  removelist_.MergeFrom(from.removelist_);
}

void ObjectRemoveNty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ObjectRemoveNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRemoveNty::CopyFrom(const ObjectRemoveNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObjectRemoveNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRemoveNty::IsInitialized() const {
  return true;
}

void ObjectRemoveNty::InternalSwap(ObjectRemoveNty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  removelist_.InternalSwap(&other->removelist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectRemoveNty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BulletItem::InitAsDefaultInstance() {
}
class BulletItem::_Internal {
 public:
};

BulletItem::BulletItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:BulletItem)
}
BulletItem::BulletItem(const BulletItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&objectguid_, &from.objectguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&lefttime_) -
    reinterpret_cast<char*>(&objectguid_)) + sizeof(lefttime_));
  // @@protoc_insertion_point(copy_constructor:BulletItem)
}

void BulletItem::SharedCtor() {
  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lefttime_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(lefttime_));
}

BulletItem::~BulletItem() {
  // @@protoc_insertion_point(destructor:BulletItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BulletItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BulletItem::ArenaDtor(void* object) {
  BulletItem* _this = reinterpret_cast< BulletItem* >(object);
  (void)_this;
}
void BulletItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BulletItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BulletItem& BulletItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BulletItem_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void BulletItem::Clear() {
// @@protoc_insertion_point(message_clear_start:BulletItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lefttime_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(lefttime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BulletItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 ObjectGuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 TargetGuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          targetguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 CasterGuid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          casterguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 BulletID = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          bulletid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float X = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float Y = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float Z = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float Angle = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          angle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float Speed = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float AccSpeed = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 85)) {
          accspeed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float LifeTime = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 93)) {
          lifetime_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float LeftTime = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          lefttime_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BulletItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BulletItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectguid(), target);
  }

  // uint64 TargetGuid = 2;
  if (this->targetguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_targetguid(), target);
  }

  // uint64 CasterGuid = 3;
  if (this->casterguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_casterguid(), target);
  }

  // int32 BulletID = 4;
  if (this->bulletid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_bulletid(), target);
  }

  // float X = 5;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_x(), target);
  }

  // float Y = 6;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_y(), target);
  }

  // float Z = 7;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_z(), target);
  }

  // float Angle = 8;
  if (!(this->angle() <= 0 && this->angle() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_angle(), target);
  }

  // float Speed = 9;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(9, this->_internal_speed(), target);
  }

  // float AccSpeed = 10;
  if (!(this->accspeed() <= 0 && this->accspeed() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(10, this->_internal_accspeed(), target);
  }

  // float LifeTime = 11;
  if (!(this->lifetime() <= 0 && this->lifetime() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(11, this->_internal_lifetime(), target);
  }

  // float LeftTime = 12;
  if (!(this->lefttime() <= 0 && this->lefttime() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(12, this->_internal_lefttime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BulletItem)
  return target;
}

size_t BulletItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BulletItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectguid());
  }

  // uint64 TargetGuid = 2;
  if (this->targetguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_targetguid());
  }

  // uint64 CasterGuid = 3;
  if (this->casterguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_casterguid());
  }

  // int32 BulletID = 4;
  if (this->bulletid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_bulletid());
  }

  // float X = 5;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float Y = 6;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float Z = 7;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  // float Angle = 8;
  if (!(this->angle() <= 0 && this->angle() >= 0)) {
    total_size += 1 + 4;
  }

  // float Speed = 9;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    total_size += 1 + 4;
  }

  // float AccSpeed = 10;
  if (!(this->accspeed() <= 0 && this->accspeed() >= 0)) {
    total_size += 1 + 4;
  }

  // float LifeTime = 11;
  if (!(this->lifetime() <= 0 && this->lifetime() >= 0)) {
    total_size += 1 + 4;
  }

  // float LeftTime = 12;
  if (!(this->lefttime() <= 0 && this->lefttime() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulletItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BulletItem)
  GOOGLE_DCHECK_NE(&from, this);
  const BulletItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BulletItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BulletItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BulletItem)
    MergeFrom(*source);
  }
}

void BulletItem::MergeFrom(const BulletItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BulletItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectguid() != 0) {
    _internal_set_objectguid(from._internal_objectguid());
  }
  if (from.targetguid() != 0) {
    _internal_set_targetguid(from._internal_targetguid());
  }
  if (from.casterguid() != 0) {
    _internal_set_casterguid(from._internal_casterguid());
  }
  if (from.bulletid() != 0) {
    _internal_set_bulletid(from._internal_bulletid());
  }
  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
  if (!(from.angle() <= 0 && from.angle() >= 0)) {
    _internal_set_angle(from._internal_angle());
  }
  if (!(from.speed() <= 0 && from.speed() >= 0)) {
    _internal_set_speed(from._internal_speed());
  }
  if (!(from.accspeed() <= 0 && from.accspeed() >= 0)) {
    _internal_set_accspeed(from._internal_accspeed());
  }
  if (!(from.lifetime() <= 0 && from.lifetime() >= 0)) {
    _internal_set_lifetime(from._internal_lifetime());
  }
  if (!(from.lefttime() <= 0 && from.lefttime() >= 0)) {
    _internal_set_lefttime(from._internal_lefttime());
  }
}

void BulletItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BulletItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulletItem::CopyFrom(const BulletItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BulletItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulletItem::IsInitialized() const {
  return true;
}

void BulletItem::InternalSwap(BulletItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BulletItem, lefttime_)
      + sizeof(BulletItem::lefttime_)
      - PROTOBUF_FIELD_OFFSET(BulletItem, objectguid_)>(
          reinterpret_cast<char*>(&objectguid_),
          reinterpret_cast<char*>(&other->objectguid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BulletItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BulletNewNtf::InitAsDefaultInstance() {
}
class BulletNewNtf::_Internal {
 public:
};

BulletNewNtf::BulletNewNtf(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  itemlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:BulletNewNtf)
}
BulletNewNtf::BulletNewNtf(const BulletNewNtf& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      itemlist_(from.itemlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BulletNewNtf)
}

void BulletNewNtf::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BulletNewNtf_Msg_5fMove_2eproto.base);
}

BulletNewNtf::~BulletNewNtf() {
  // @@protoc_insertion_point(destructor:BulletNewNtf)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BulletNewNtf::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BulletNewNtf::ArenaDtor(void* object) {
  BulletNewNtf* _this = reinterpret_cast< BulletNewNtf* >(object);
  (void)_this;
}
void BulletNewNtf::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BulletNewNtf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BulletNewNtf& BulletNewNtf::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BulletNewNtf_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void BulletNewNtf::Clear() {
// @@protoc_insertion_point(message_clear_start:BulletNewNtf)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BulletNewNtf::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .BulletItem ItemList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_itemlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BulletNewNtf::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BulletNewNtf)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BulletItem ItemList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_itemlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_itemlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BulletNewNtf)
  return target;
}

size_t BulletNewNtf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BulletNewNtf)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .BulletItem ItemList = 1;
  total_size += 1UL * this->_internal_itemlist_size();
  for (const auto& msg : this->itemlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulletNewNtf::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BulletNewNtf)
  GOOGLE_DCHECK_NE(&from, this);
  const BulletNewNtf* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BulletNewNtf>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BulletNewNtf)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BulletNewNtf)
    MergeFrom(*source);
  }
}

void BulletNewNtf::MergeFrom(const BulletNewNtf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BulletNewNtf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  itemlist_.MergeFrom(from.itemlist_);
}

void BulletNewNtf::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BulletNewNtf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulletNewNtf::CopyFrom(const BulletNewNtf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BulletNewNtf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulletNewNtf::IsInitialized() const {
  return true;
}

void BulletNewNtf::InternalSwap(BulletNewNtf* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  itemlist_.InternalSwap(&other->itemlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BulletNewNtf::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HeartBeatReq::InitAsDefaultInstance() {
}
class HeartBeatReq::_Internal {
 public:
};

HeartBeatReq::HeartBeatReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:HeartBeatReq)
}
HeartBeatReq::HeartBeatReq(const HeartBeatReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:HeartBeatReq)
}

void HeartBeatReq::SharedCtor() {
  timestamp_ = 0u;
}

HeartBeatReq::~HeartBeatReq() {
  // @@protoc_insertion_point(destructor:HeartBeatReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HeartBeatReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HeartBeatReq::ArenaDtor(void* object) {
  HeartBeatReq* _this = reinterpret_cast< HeartBeatReq* >(object);
  (void)_this;
}
void HeartBeatReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HeartBeatReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeartBeatReq& HeartBeatReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HeartBeatReq_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void HeartBeatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:HeartBeatReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timestamp_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HeartBeatReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 TimeStamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HeartBeatReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HeartBeatReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TimeStamp = 1;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HeartBeatReq)
  return target;
}

size_t HeartBeatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HeartBeatReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 TimeStamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartBeatReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HeartBeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartBeatReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HeartBeatReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HeartBeatReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HeartBeatReq)
    MergeFrom(*source);
  }
}

void HeartBeatReq::MergeFrom(const HeartBeatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HeartBeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void HeartBeatReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HeartBeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatReq::CopyFrom(const HeartBeatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HeartBeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatReq::IsInitialized() const {
  return true;
}

void HeartBeatReq::InternalSwap(HeartBeatReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HeartBeatReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HeartBeatAck::InitAsDefaultInstance() {
}
class HeartBeatAck::_Internal {
 public:
};

HeartBeatAck::HeartBeatAck(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:HeartBeatAck)
}
HeartBeatAck::HeartBeatAck(const HeartBeatAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&servertime_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(servertime_));
  // @@protoc_insertion_point(copy_constructor:HeartBeatAck)
}

void HeartBeatAck::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&servertime_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(servertime_));
}

HeartBeatAck::~HeartBeatAck() {
  // @@protoc_insertion_point(destructor:HeartBeatAck)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HeartBeatAck::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HeartBeatAck::ArenaDtor(void* object) {
  HeartBeatAck* _this = reinterpret_cast< HeartBeatAck* >(object);
  (void)_this;
}
void HeartBeatAck::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HeartBeatAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeartBeatAck& HeartBeatAck::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HeartBeatAck_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void HeartBeatAck::Clear() {
// @@protoc_insertion_point(message_clear_start:HeartBeatAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&servertime_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(servertime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HeartBeatAck::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 TimeStamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 ServerTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          servertime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HeartBeatAck::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HeartBeatAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TimeStamp = 1;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_timestamp(), target);
  }

  // uint32 ServerTime = 2;
  if (this->servertime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_servertime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HeartBeatAck)
  return target;
}

size_t HeartBeatAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HeartBeatAck)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 TimeStamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_timestamp());
  }

  // uint32 ServerTime = 2;
  if (this->servertime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_servertime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartBeatAck::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HeartBeatAck)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartBeatAck* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HeartBeatAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HeartBeatAck)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HeartBeatAck)
    MergeFrom(*source);
  }
}

void HeartBeatAck::MergeFrom(const HeartBeatAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HeartBeatAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from.servertime() != 0) {
    _internal_set_servertime(from._internal_servertime());
  }
}

void HeartBeatAck::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HeartBeatAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatAck::CopyFrom(const HeartBeatAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HeartBeatAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatAck::IsInitialized() const {
  return true;
}

void HeartBeatAck::InternalSwap(HeartBeatAck* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HeartBeatAck, servertime_)
      + sizeof(HeartBeatAck::servertime_)
      - PROTOBUF_FIELD_OFFSET(HeartBeatAck, timestamp_)>(
          reinterpret_cast<char*>(&timestamp_),
          reinterpret_cast<char*>(&other->timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HeartBeatAck::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObjectDieNotify::InitAsDefaultInstance() {
}
class ObjectDieNotify::_Internal {
 public:
};

ObjectDieNotify::ObjectDieNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ObjectDieNotify)
}
ObjectDieNotify::ObjectDieNotify(const ObjectDieNotify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  objectguid_ = from.objectguid_;
  // @@protoc_insertion_point(copy_constructor:ObjectDieNotify)
}

void ObjectDieNotify::SharedCtor() {
  objectguid_ = PROTOBUF_ULONGLONG(0);
}

ObjectDieNotify::~ObjectDieNotify() {
  // @@protoc_insertion_point(destructor:ObjectDieNotify)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjectDieNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ObjectDieNotify::ArenaDtor(void* object) {
  ObjectDieNotify* _this = reinterpret_cast< ObjectDieNotify* >(object);
  (void)_this;
}
void ObjectDieNotify::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectDieNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectDieNotify& ObjectDieNotify::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectDieNotify_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void ObjectDieNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ObjectDieNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectguid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectDieNotify::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 ObjectGuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectDieNotify::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ObjectDieNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectguid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ObjectDieNotify)
  return target;
}

size_t ObjectDieNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ObjectDieNotify)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectguid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDieNotify::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ObjectDieNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDieNotify* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectDieNotify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ObjectDieNotify)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ObjectDieNotify)
    MergeFrom(*source);
  }
}

void ObjectDieNotify::MergeFrom(const ObjectDieNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ObjectDieNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectguid() != 0) {
    _internal_set_objectguid(from._internal_objectguid());
  }
}

void ObjectDieNotify::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ObjectDieNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDieNotify::CopyFrom(const ObjectDieNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObjectDieNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDieNotify::IsInitialized() const {
  return true;
}

void ObjectDieNotify::InternalSwap(ObjectDieNotify* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(objectguid_, other->objectguid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectDieNotify::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_RidingMountReq::InitAsDefaultInstance() {
}
class Msg_RidingMountReq::_Internal {
 public:
};

Msg_RidingMountReq::Msg_RidingMountReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_RidingMountReq)
}
Msg_RidingMountReq::Msg_RidingMountReq(const Msg_RidingMountReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  objectguid_ = from.objectguid_;
  // @@protoc_insertion_point(copy_constructor:Msg_RidingMountReq)
}

void Msg_RidingMountReq::SharedCtor() {
  objectguid_ = PROTOBUF_ULONGLONG(0);
}

Msg_RidingMountReq::~Msg_RidingMountReq() {
  // @@protoc_insertion_point(destructor:Msg_RidingMountReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_RidingMountReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_RidingMountReq::ArenaDtor(void* object) {
  Msg_RidingMountReq* _this = reinterpret_cast< Msg_RidingMountReq* >(object);
  (void)_this;
}
void Msg_RidingMountReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_RidingMountReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_RidingMountReq& Msg_RidingMountReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_RidingMountReq_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void Msg_RidingMountReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_RidingMountReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectguid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_RidingMountReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 ObjectGuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_RidingMountReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_RidingMountReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectguid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_RidingMountReq)
  return target;
}

size_t Msg_RidingMountReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_RidingMountReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectguid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_RidingMountReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_RidingMountReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_RidingMountReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_RidingMountReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_RidingMountReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_RidingMountReq)
    MergeFrom(*source);
  }
}

void Msg_RidingMountReq::MergeFrom(const Msg_RidingMountReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_RidingMountReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectguid() != 0) {
    _internal_set_objectguid(from._internal_objectguid());
  }
}

void Msg_RidingMountReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_RidingMountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_RidingMountReq::CopyFrom(const Msg_RidingMountReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_RidingMountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_RidingMountReq::IsInitialized() const {
  return true;
}

void Msg_RidingMountReq::InternalSwap(Msg_RidingMountReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(objectguid_, other->objectguid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_RidingMountReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_RidingMountAck::InitAsDefaultInstance() {
}
class Msg_RidingMountAck::_Internal {
 public:
};

Msg_RidingMountAck::Msg_RidingMountAck(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_RidingMountAck)
}
Msg_RidingMountAck::Msg_RidingMountAck(const Msg_RidingMountAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:Msg_RidingMountAck)
}

void Msg_RidingMountAck::SharedCtor() {
  retcode_ = 0u;
}

Msg_RidingMountAck::~Msg_RidingMountAck() {
  // @@protoc_insertion_point(destructor:Msg_RidingMountAck)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_RidingMountAck::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_RidingMountAck::ArenaDtor(void* object) {
  Msg_RidingMountAck* _this = reinterpret_cast< Msg_RidingMountAck* >(object);
  (void)_this;
}
void Msg_RidingMountAck::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_RidingMountAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_RidingMountAck& Msg_RidingMountAck::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_RidingMountAck_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void Msg_RidingMountAck::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_RidingMountAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_RidingMountAck::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_RidingMountAck::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_RidingMountAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_RidingMountAck)
  return target;
}

size_t Msg_RidingMountAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_RidingMountAck)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_RidingMountAck::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_RidingMountAck)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_RidingMountAck* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_RidingMountAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_RidingMountAck)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_RidingMountAck)
    MergeFrom(*source);
  }
}

void Msg_RidingMountAck::MergeFrom(const Msg_RidingMountAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_RidingMountAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void Msg_RidingMountAck::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_RidingMountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_RidingMountAck::CopyFrom(const Msg_RidingMountAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_RidingMountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_RidingMountAck::IsInitialized() const {
  return true;
}

void Msg_RidingMountAck::InternalSwap(Msg_RidingMountAck* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_RidingMountAck::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_RoleRebornReq::InitAsDefaultInstance() {
}
class Msg_RoleRebornReq::_Internal {
 public:
};

Msg_RoleRebornReq::Msg_RoleRebornReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_RoleRebornReq)
}
Msg_RoleRebornReq::Msg_RoleRebornReq(const Msg_RoleRebornReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&objectguid_, &from.objectguid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reborntype_) -
    reinterpret_cast<char*>(&objectguid_)) + sizeof(reborntype_));
  // @@protoc_insertion_point(copy_constructor:Msg_RoleRebornReq)
}

void Msg_RoleRebornReq::SharedCtor() {
  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reborntype_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(reborntype_));
}

Msg_RoleRebornReq::~Msg_RoleRebornReq() {
  // @@protoc_insertion_point(destructor:Msg_RoleRebornReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_RoleRebornReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_RoleRebornReq::ArenaDtor(void* object) {
  Msg_RoleRebornReq* _this = reinterpret_cast< Msg_RoleRebornReq* >(object);
  (void)_this;
}
void Msg_RoleRebornReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_RoleRebornReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_RoleRebornReq& Msg_RoleRebornReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_RoleRebornReq_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void Msg_RoleRebornReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_RoleRebornReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectguid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reborntype_) -
      reinterpret_cast<char*>(&objectguid_)) + sizeof(reborntype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_RoleRebornReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 ObjectGuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 RebornType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          reborntype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_RoleRebornReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_RoleRebornReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectguid(), target);
  }

  // int32 RebornType = 2;
  if (this->reborntype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_reborntype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_RoleRebornReq)
  return target;
}

size_t Msg_RoleRebornReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_RoleRebornReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 ObjectGuid = 1;
  if (this->objectguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectguid());
  }

  // int32 RebornType = 2;
  if (this->reborntype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_reborntype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_RoleRebornReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_RoleRebornReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_RoleRebornReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_RoleRebornReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_RoleRebornReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_RoleRebornReq)
    MergeFrom(*source);
  }
}

void Msg_RoleRebornReq::MergeFrom(const Msg_RoleRebornReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_RoleRebornReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectguid() != 0) {
    _internal_set_objectguid(from._internal_objectguid());
  }
  if (from.reborntype() != 0) {
    _internal_set_reborntype(from._internal_reborntype());
  }
}

void Msg_RoleRebornReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_RoleRebornReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_RoleRebornReq::CopyFrom(const Msg_RoleRebornReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_RoleRebornReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_RoleRebornReq::IsInitialized() const {
  return true;
}

void Msg_RoleRebornReq::InternalSwap(Msg_RoleRebornReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_RoleRebornReq, reborntype_)
      + sizeof(Msg_RoleRebornReq::reborntype_)
      - PROTOBUF_FIELD_OFFSET(Msg_RoleRebornReq, objectguid_)>(
          reinterpret_cast<char*>(&objectguid_),
          reinterpret_cast<char*>(&other->objectguid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_RoleRebornReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_RoleRebornAck::InitAsDefaultInstance() {
}
class Msg_RoleRebornAck::_Internal {
 public:
};

Msg_RoleRebornAck::Msg_RoleRebornAck(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_RoleRebornAck)
}
Msg_RoleRebornAck::Msg_RoleRebornAck(const Msg_RoleRebornAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:Msg_RoleRebornAck)
}

void Msg_RoleRebornAck::SharedCtor() {
  retcode_ = 0u;
}

Msg_RoleRebornAck::~Msg_RoleRebornAck() {
  // @@protoc_insertion_point(destructor:Msg_RoleRebornAck)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_RoleRebornAck::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_RoleRebornAck::ArenaDtor(void* object) {
  Msg_RoleRebornAck* _this = reinterpret_cast< Msg_RoleRebornAck* >(object);
  (void)_this;
}
void Msg_RoleRebornAck::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_RoleRebornAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_RoleRebornAck& Msg_RoleRebornAck::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_RoleRebornAck_Msg_5fMove_2eproto.base);
  return *internal_default_instance();
}


void Msg_RoleRebornAck::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_RoleRebornAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_RoleRebornAck::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_RoleRebornAck::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_RoleRebornAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_RoleRebornAck)
  return target;
}

size_t Msg_RoleRebornAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_RoleRebornAck)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_RoleRebornAck::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_RoleRebornAck)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_RoleRebornAck* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_RoleRebornAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_RoleRebornAck)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_RoleRebornAck)
    MergeFrom(*source);
  }
}

void Msg_RoleRebornAck::MergeFrom(const Msg_RoleRebornAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_RoleRebornAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void Msg_RoleRebornAck::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_RoleRebornAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_RoleRebornAck::CopyFrom(const Msg_RoleRebornAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_RoleRebornAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_RoleRebornAck::IsInitialized() const {
  return true;
}

void Msg_RoleRebornAck::InternalSwap(Msg_RoleRebornAck* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_RoleRebornAck::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::SkillCastReq* Arena::CreateMaybeMessage< ::SkillCastReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SkillCastReq >(arena);
}
template<> PROTOBUF_NOINLINE ::SkillCastAck* Arena::CreateMaybeMessage< ::SkillCastAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SkillCastAck >(arena);
}
template<> PROTOBUF_NOINLINE ::SkillResultItem* Arena::CreateMaybeMessage< ::SkillResultItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SkillResultItem >(arena);
}
template<> PROTOBUF_NOINLINE ::SkillResultNtf* Arena::CreateMaybeMessage< ::SkillResultNtf >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SkillResultNtf >(arena);
}
template<> PROTOBUF_NOINLINE ::ObjectActionReq* Arena::CreateMaybeMessage< ::ObjectActionReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ObjectActionReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ObjectActionNty* Arena::CreateMaybeMessage< ::ObjectActionNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ObjectActionNty >(arena);
}
template<> PROTOBUF_NOINLINE ::ActionReqItem* Arena::CreateMaybeMessage< ::ActionReqItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ActionReqItem >(arena);
}
template<> PROTOBUF_NOINLINE ::ObjectActionAck* Arena::CreateMaybeMessage< ::ObjectActionAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ObjectActionAck >(arena);
}
template<> PROTOBUF_NOINLINE ::ActionNtyItem* Arena::CreateMaybeMessage< ::ActionNtyItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ActionNtyItem >(arena);
}
template<> PROTOBUF_NOINLINE ::NewItem* Arena::CreateMaybeMessage< ::NewItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NewItem >(arena);
}
template<> PROTOBUF_NOINLINE ::ObjectNewNty* Arena::CreateMaybeMessage< ::ObjectNewNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ObjectNewNty >(arena);
}
template<> PROTOBUF_NOINLINE ::ObjectRemoveNty* Arena::CreateMaybeMessage< ::ObjectRemoveNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ObjectRemoveNty >(arena);
}
template<> PROTOBUF_NOINLINE ::BulletItem* Arena::CreateMaybeMessage< ::BulletItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::BulletItem >(arena);
}
template<> PROTOBUF_NOINLINE ::BulletNewNtf* Arena::CreateMaybeMessage< ::BulletNewNtf >(Arena* arena) {
  return Arena::CreateMessageInternal< ::BulletNewNtf >(arena);
}
template<> PROTOBUF_NOINLINE ::HeartBeatReq* Arena::CreateMaybeMessage< ::HeartBeatReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HeartBeatReq >(arena);
}
template<> PROTOBUF_NOINLINE ::HeartBeatAck* Arena::CreateMaybeMessage< ::HeartBeatAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HeartBeatAck >(arena);
}
template<> PROTOBUF_NOINLINE ::ObjectDieNotify* Arena::CreateMaybeMessage< ::ObjectDieNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ObjectDieNotify >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_RidingMountReq* Arena::CreateMaybeMessage< ::Msg_RidingMountReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_RidingMountReq >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_RidingMountAck* Arena::CreateMaybeMessage< ::Msg_RidingMountAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_RidingMountAck >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_RoleRebornReq* Arena::CreateMaybeMessage< ::Msg_RoleRebornReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_RoleRebornReq >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_RoleRebornAck* Arena::CreateMaybeMessage< ::Msg_RoleRebornAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_RoleRebornAck >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
