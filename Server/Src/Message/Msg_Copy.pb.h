// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_Copy.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Msg_5fCopy_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Msg_5fCopy_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Msg_Base.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Msg_5fCopy_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Msg_5fCopy_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[18]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Msg_5fCopy_2eproto;
class BattleResultNty;
class BattleResultNtyDefaultTypeInternal;
extern BattleResultNtyDefaultTypeInternal _BattleResultNty_default_instance_;
class MainCopyAck;
class MainCopyAckDefaultTypeInternal;
extern MainCopyAckDefaultTypeInternal _MainCopyAck_default_instance_;
class MainCopyReq;
class MainCopyReqDefaultTypeInternal;
extern MainCopyReqDefaultTypeInternal _MainCopyReq_default_instance_;
class MainCopyResultNty;
class MainCopyResultNtyDefaultTypeInternal;
extern MainCopyResultNtyDefaultTypeInternal _MainCopyResultNty_default_instance_;
class Msg_BroadRoomNotify;
class Msg_BroadRoomNotifyDefaultTypeInternal;
extern Msg_BroadRoomNotifyDefaultTypeInternal _Msg_BroadRoomNotify_default_instance_;
class Msg_CreateRoomAck;
class Msg_CreateRoomAckDefaultTypeInternal;
extern Msg_CreateRoomAckDefaultTypeInternal _Msg_CreateRoomAck_default_instance_;
class Msg_CreateRoomReq;
class Msg_CreateRoomReqDefaultTypeInternal;
extern Msg_CreateRoomReqDefaultTypeInternal _Msg_CreateRoomReq_default_instance_;
class Msg_JoinRoomAck;
class Msg_JoinRoomAckDefaultTypeInternal;
extern Msg_JoinRoomAckDefaultTypeInternal _Msg_JoinRoomAck_default_instance_;
class Msg_JoinRoomReq;
class Msg_JoinRoomReqDefaultTypeInternal;
extern Msg_JoinRoomReqDefaultTypeInternal _Msg_JoinRoomReq_default_instance_;
class Msg_KickRoomAck;
class Msg_KickRoomAckDefaultTypeInternal;
extern Msg_KickRoomAckDefaultTypeInternal _Msg_KickRoomAck_default_instance_;
class Msg_KickRoomReq;
class Msg_KickRoomReqDefaultTypeInternal;
extern Msg_KickRoomReqDefaultTypeInternal _Msg_KickRoomReq_default_instance_;
class Msg_LeaveRoomAck;
class Msg_LeaveRoomAckDefaultTypeInternal;
extern Msg_LeaveRoomAckDefaultTypeInternal _Msg_LeaveRoomAck_default_instance_;
class Msg_LeaveRoomReq;
class Msg_LeaveRoomReqDefaultTypeInternal;
extern Msg_LeaveRoomReqDefaultTypeInternal _Msg_LeaveRoomReq_default_instance_;
class Msg_RoomPlayerInfo;
class Msg_RoomPlayerInfoDefaultTypeInternal;
extern Msg_RoomPlayerInfoDefaultTypeInternal _Msg_RoomPlayerInfo_default_instance_;
class Msg_StartRoomAck;
class Msg_StartRoomAckDefaultTypeInternal;
extern Msg_StartRoomAckDefaultTypeInternal _Msg_StartRoomAck_default_instance_;
class Msg_StartRoomReq;
class Msg_StartRoomReqDefaultTypeInternal;
extern Msg_StartRoomReqDefaultTypeInternal _Msg_StartRoomReq_default_instance_;
class ResultObject;
class ResultObjectDefaultTypeInternal;
extern ResultObjectDefaultTypeInternal _ResultObject_default_instance_;
class ResultPlayer;
class ResultPlayerDefaultTypeInternal;
extern ResultPlayerDefaultTypeInternal _ResultPlayer_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::BattleResultNty* Arena::CreateMaybeMessage<::BattleResultNty>(Arena*);
template<> ::MainCopyAck* Arena::CreateMaybeMessage<::MainCopyAck>(Arena*);
template<> ::MainCopyReq* Arena::CreateMaybeMessage<::MainCopyReq>(Arena*);
template<> ::MainCopyResultNty* Arena::CreateMaybeMessage<::MainCopyResultNty>(Arena*);
template<> ::Msg_BroadRoomNotify* Arena::CreateMaybeMessage<::Msg_BroadRoomNotify>(Arena*);
template<> ::Msg_CreateRoomAck* Arena::CreateMaybeMessage<::Msg_CreateRoomAck>(Arena*);
template<> ::Msg_CreateRoomReq* Arena::CreateMaybeMessage<::Msg_CreateRoomReq>(Arena*);
template<> ::Msg_JoinRoomAck* Arena::CreateMaybeMessage<::Msg_JoinRoomAck>(Arena*);
template<> ::Msg_JoinRoomReq* Arena::CreateMaybeMessage<::Msg_JoinRoomReq>(Arena*);
template<> ::Msg_KickRoomAck* Arena::CreateMaybeMessage<::Msg_KickRoomAck>(Arena*);
template<> ::Msg_KickRoomReq* Arena::CreateMaybeMessage<::Msg_KickRoomReq>(Arena*);
template<> ::Msg_LeaveRoomAck* Arena::CreateMaybeMessage<::Msg_LeaveRoomAck>(Arena*);
template<> ::Msg_LeaveRoomReq* Arena::CreateMaybeMessage<::Msg_LeaveRoomReq>(Arena*);
template<> ::Msg_RoomPlayerInfo* Arena::CreateMaybeMessage<::Msg_RoomPlayerInfo>(Arena*);
template<> ::Msg_StartRoomAck* Arena::CreateMaybeMessage<::Msg_StartRoomAck>(Arena*);
template<> ::Msg_StartRoomReq* Arena::CreateMaybeMessage<::Msg_StartRoomReq>(Arena*);
template<> ::ResultObject* Arena::CreateMaybeMessage<::ResultObject>(Arena*);
template<> ::ResultPlayer* Arena::CreateMaybeMessage<::ResultPlayer>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class ResultObject PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ResultObject) */ {
 public:
  inline ResultObject() : ResultObject(nullptr) {};
  virtual ~ResultObject();

  ResultObject(const ResultObject& from);
  ResultObject(ResultObject&& from) noexcept
    : ResultObject() {
    *this = ::std::move(from);
  }

  inline ResultObject& operator=(const ResultObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResultObject& operator=(ResultObject&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResultObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResultObject* internal_default_instance() {
    return reinterpret_cast<const ResultObject*>(
               &_ResultObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ResultObject& a, ResultObject& b) {
    a.Swap(&b);
  }
  inline void Swap(ResultObject* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResultObject* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResultObject* New() const final {
    return CreateMaybeMessage<ResultObject>(nullptr);
  }

  ResultObject* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResultObject>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResultObject& from);
  void MergeFrom(const ResultObject& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResultObject* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ResultObject";
  }
  protected:
  explicit ResultObject(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIDFieldNumber = 1,
    kActorIDFieldNumber = 2,
    kObjectTypeFieldNumber = 3,
    kResultFieldNumber = 4,
    kKillFieldNumber = 5,
    kDeathFieldNumber = 6,
    kHealFieldNumber = 7,
    kDamageFieldNumber = 8,
  };
  // uint64 ObjectID = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 ActorID = 2;
  void clear_actorid();
  ::PROTOBUF_NAMESPACE_ID::int32 actorid() const;
  void set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actorid() const;
  void _internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ObjectType = 3;
  void clear_objecttype();
  ::PROTOBUF_NAMESPACE_ID::int32 objecttype() const;
  void set_objecttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_objecttype() const;
  void _internal_set_objecttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Result = 4;
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::int32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Kill = 5;
  void clear_kill();
  ::PROTOBUF_NAMESPACE_ID::int32 kill() const;
  void set_kill(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kill() const;
  void _internal_set_kill(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Death = 6;
  void clear_death();
  ::PROTOBUF_NAMESPACE_ID::int32 death() const;
  void set_death(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_death() const;
  void _internal_set_death(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Heal = 7;
  void clear_heal();
  ::PROTOBUF_NAMESPACE_ID::int32 heal() const;
  void set_heal(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_heal() const;
  void _internal_set_heal(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Damage = 8;
  void clear_damage();
  ::PROTOBUF_NAMESPACE_ID::int32 damage() const;
  void set_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_damage() const;
  void _internal_set_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ResultObject)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  ::PROTOBUF_NAMESPACE_ID::int32 actorid_;
  ::PROTOBUF_NAMESPACE_ID::int32 objecttype_;
  ::PROTOBUF_NAMESPACE_ID::int32 result_;
  ::PROTOBUF_NAMESPACE_ID::int32 kill_;
  ::PROTOBUF_NAMESPACE_ID::int32 death_;
  ::PROTOBUF_NAMESPACE_ID::int32 heal_;
  ::PROTOBUF_NAMESPACE_ID::int32 damage_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class ResultPlayer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ResultPlayer) */ {
 public:
  inline ResultPlayer() : ResultPlayer(nullptr) {};
  virtual ~ResultPlayer();

  ResultPlayer(const ResultPlayer& from);
  ResultPlayer(ResultPlayer&& from) noexcept
    : ResultPlayer() {
    *this = ::std::move(from);
  }

  inline ResultPlayer& operator=(const ResultPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResultPlayer& operator=(ResultPlayer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResultPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResultPlayer* internal_default_instance() {
    return reinterpret_cast<const ResultPlayer*>(
               &_ResultPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ResultPlayer& a, ResultPlayer& b) {
    a.Swap(&b);
  }
  inline void Swap(ResultPlayer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResultPlayer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResultPlayer* New() const final {
    return CreateMaybeMessage<ResultPlayer>(nullptr);
  }

  ResultPlayer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResultPlayer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResultPlayer& from);
  void MergeFrom(const ResultPlayer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResultPlayer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ResultPlayer";
  }
  protected:
  explicit ResultPlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIDFieldNumber = 1,
    kActorIDFieldNumber = 2,
    kObjectTypeFieldNumber = 3,
    kResultFieldNumber = 4,
    kKillFieldNumber = 5,
    kDeathFieldNumber = 6,
    kHealFieldNumber = 7,
    kDamageFieldNumber = 8,
  };
  // uint64 ObjectID = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 ActorID = 2;
  void clear_actorid();
  ::PROTOBUF_NAMESPACE_ID::int32 actorid() const;
  void set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actorid() const;
  void _internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ObjectType = 3;
  void clear_objecttype();
  ::PROTOBUF_NAMESPACE_ID::int32 objecttype() const;
  void set_objecttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_objecttype() const;
  void _internal_set_objecttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Result = 4;
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::int32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Kill = 5;
  void clear_kill();
  ::PROTOBUF_NAMESPACE_ID::int32 kill() const;
  void set_kill(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kill() const;
  void _internal_set_kill(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Death = 6;
  void clear_death();
  ::PROTOBUF_NAMESPACE_ID::int32 death() const;
  void set_death(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_death() const;
  void _internal_set_death(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Heal = 7;
  void clear_heal();
  ::PROTOBUF_NAMESPACE_ID::int32 heal() const;
  void set_heal(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_heal() const;
  void _internal_set_heal(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Damage = 8;
  void clear_damage();
  ::PROTOBUF_NAMESPACE_ID::int32 damage() const;
  void set_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_damage() const;
  void _internal_set_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ResultPlayer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  ::PROTOBUF_NAMESPACE_ID::int32 actorid_;
  ::PROTOBUF_NAMESPACE_ID::int32 objecttype_;
  ::PROTOBUF_NAMESPACE_ID::int32 result_;
  ::PROTOBUF_NAMESPACE_ID::int32 kill_;
  ::PROTOBUF_NAMESPACE_ID::int32 death_;
  ::PROTOBUF_NAMESPACE_ID::int32 heal_;
  ::PROTOBUF_NAMESPACE_ID::int32 damage_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class BattleResultNty PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:BattleResultNty) */ {
 public:
  inline BattleResultNty() : BattleResultNty(nullptr) {};
  virtual ~BattleResultNty();

  BattleResultNty(const BattleResultNty& from);
  BattleResultNty(BattleResultNty&& from) noexcept
    : BattleResultNty() {
    *this = ::std::move(from);
  }

  inline BattleResultNty& operator=(const BattleResultNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline BattleResultNty& operator=(BattleResultNty&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BattleResultNty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BattleResultNty* internal_default_instance() {
    return reinterpret_cast<const BattleResultNty*>(
               &_BattleResultNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(BattleResultNty& a, BattleResultNty& b) {
    a.Swap(&b);
  }
  inline void Swap(BattleResultNty* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BattleResultNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BattleResultNty* New() const final {
    return CreateMaybeMessage<BattleResultNty>(nullptr);
  }

  BattleResultNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BattleResultNty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BattleResultNty& from);
  void MergeFrom(const BattleResultNty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BattleResultNty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "BattleResultNty";
  }
  protected:
  explicit BattleResultNty(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerListFieldNumber = 6,
    kObjectListFieldNumber = 7,
    kServerIDFieldNumber = 1,
    kCopyGuidFieldNumber = 2,
    kCopyIDFieldNumber = 3,
    kCopyTypeFieldNumber = 4,
    kLastTimeFieldNumber = 5,
  };
  // repeated .ResultPlayer PlayerList = 6;
  int playerlist_size() const;
  private:
  int _internal_playerlist_size() const;
  public:
  void clear_playerlist();
  ::ResultPlayer* mutable_playerlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ResultPlayer >*
      mutable_playerlist();
  private:
  const ::ResultPlayer& _internal_playerlist(int index) const;
  ::ResultPlayer* _internal_add_playerlist();
  public:
  const ::ResultPlayer& playerlist(int index) const;
  ::ResultPlayer* add_playerlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ResultPlayer >&
      playerlist() const;

  // repeated .ResultObject ObjectList = 7;
  int objectlist_size() const;
  private:
  int _internal_objectlist_size() const;
  public:
  void clear_objectlist();
  ::ResultObject* mutable_objectlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ResultObject >*
      mutable_objectlist();
  private:
  const ::ResultObject& _internal_objectlist(int index) const;
  ::ResultObject* _internal_add_objectlist();
  public:
  const ::ResultObject& objectlist(int index) const;
  ::ResultObject* add_objectlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ResultObject >&
      objectlist() const;

  // int32 ServerID = 1;
  void clear_serverid();
  ::PROTOBUF_NAMESPACE_ID::int32 serverid() const;
  void set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverid() const;
  void _internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 CopyGuid = 2;
  void clear_copyguid();
  ::PROTOBUF_NAMESPACE_ID::uint32 copyguid() const;
  void set_copyguid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_copyguid() const;
  void _internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 CopyID = 3;
  void clear_copyid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyid() const;
  void set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyid() const;
  void _internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CopyType = 4;
  void clear_copytype();
  ::PROTOBUF_NAMESPACE_ID::int32 copytype() const;
  void set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copytype() const;
  void _internal_set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 LastTime = 5;
  void clear_lasttime();
  ::PROTOBUF_NAMESPACE_ID::uint64 lasttime() const;
  void set_lasttime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lasttime() const;
  void _internal_set_lasttime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:BattleResultNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ResultPlayer > playerlist_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ResultObject > objectlist_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 copyguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copytype_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lasttime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class MainCopyReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MainCopyReq) */ {
 public:
  inline MainCopyReq() : MainCopyReq(nullptr) {};
  virtual ~MainCopyReq();

  MainCopyReq(const MainCopyReq& from);
  MainCopyReq(MainCopyReq&& from) noexcept
    : MainCopyReq() {
    *this = ::std::move(from);
  }

  inline MainCopyReq& operator=(const MainCopyReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline MainCopyReq& operator=(MainCopyReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MainCopyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MainCopyReq* internal_default_instance() {
    return reinterpret_cast<const MainCopyReq*>(
               &_MainCopyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MainCopyReq& a, MainCopyReq& b) {
    a.Swap(&b);
  }
  inline void Swap(MainCopyReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MainCopyReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MainCopyReq* New() const final {
    return CreateMaybeMessage<MainCopyReq>(nullptr);
  }

  MainCopyReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MainCopyReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MainCopyReq& from);
  void MergeFrom(const MainCopyReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MainCopyReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MainCopyReq";
  }
  protected:
  explicit MainCopyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCopyIDFieldNumber = 1,
  };
  // int32 CopyID = 1;
  void clear_copyid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyid() const;
  void set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyid() const;
  void _internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MainCopyReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class MainCopyAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MainCopyAck) */ {
 public:
  inline MainCopyAck() : MainCopyAck(nullptr) {};
  virtual ~MainCopyAck();

  MainCopyAck(const MainCopyAck& from);
  MainCopyAck(MainCopyAck&& from) noexcept
    : MainCopyAck() {
    *this = ::std::move(from);
  }

  inline MainCopyAck& operator=(const MainCopyAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline MainCopyAck& operator=(MainCopyAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MainCopyAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MainCopyAck* internal_default_instance() {
    return reinterpret_cast<const MainCopyAck*>(
               &_MainCopyAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MainCopyAck& a, MainCopyAck& b) {
    a.Swap(&b);
  }
  inline void Swap(MainCopyAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MainCopyAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MainCopyAck* New() const final {
    return CreateMaybeMessage<MainCopyAck>(nullptr);
  }

  MainCopyAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MainCopyAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MainCopyAck& from);
  void MergeFrom(const MainCopyAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MainCopyAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MainCopyAck";
  }
  protected:
  explicit MainCopyAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:MainCopyAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class MainCopyResultNty PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MainCopyResultNty) */ {
 public:
  inline MainCopyResultNty() : MainCopyResultNty(nullptr) {};
  virtual ~MainCopyResultNty();

  MainCopyResultNty(const MainCopyResultNty& from);
  MainCopyResultNty(MainCopyResultNty&& from) noexcept
    : MainCopyResultNty() {
    *this = ::std::move(from);
  }

  inline MainCopyResultNty& operator=(const MainCopyResultNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline MainCopyResultNty& operator=(MainCopyResultNty&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MainCopyResultNty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MainCopyResultNty* internal_default_instance() {
    return reinterpret_cast<const MainCopyResultNty*>(
               &_MainCopyResultNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MainCopyResultNty& a, MainCopyResultNty& b) {
    a.Swap(&b);
  }
  inline void Swap(MainCopyResultNty* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MainCopyResultNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MainCopyResultNty* New() const final {
    return CreateMaybeMessage<MainCopyResultNty>(nullptr);
  }

  MainCopyResultNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MainCopyResultNty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MainCopyResultNty& from);
  void MergeFrom(const MainCopyResultNty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MainCopyResultNty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MainCopyResultNty";
  }
  protected:
  explicit MainCopyResultNty(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemListFieldNumber = 6,
    kRoleIDFieldNumber = 1,
    kCopyIDFieldNumber = 2,
    kCopyResultFieldNumber = 3,
    kLastTimeFieldNumber = 5,
    kStarNumFieldNumber = 4,
  };
  // repeated .ItemData ItemList = 6;
  int itemlist_size() const;
  private:
  int _internal_itemlist_size() const;
  public:
  void clear_itemlist();
  ::ItemData* mutable_itemlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ItemData >*
      mutable_itemlist();
  private:
  const ::ItemData& _internal_itemlist(int index) const;
  ::ItemData* _internal_add_itemlist();
  public:
  const ::ItemData& itemlist(int index) const;
  ::ItemData* add_itemlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ItemData >&
      itemlist() const;

  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 CopyID = 2;
  void clear_copyid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyid() const;
  void set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyid() const;
  void _internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CopyResult = 3;
  void clear_copyresult();
  ::PROTOBUF_NAMESPACE_ID::int32 copyresult() const;
  void set_copyresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyresult() const;
  void _internal_set_copyresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 LastTime = 5;
  void clear_lasttime();
  ::PROTOBUF_NAMESPACE_ID::uint64 lasttime() const;
  void set_lasttime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lasttime() const;
  void _internal_set_lasttime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 StarNum = 4;
  void clear_starnum();
  ::PROTOBUF_NAMESPACE_ID::int32 starnum() const;
  void set_starnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_starnum() const;
  void _internal_set_starnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MainCopyResultNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ItemData > itemlist_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyresult_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lasttime_;
  ::PROTOBUF_NAMESPACE_ID::int32 starnum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class Msg_CreateRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_CreateRoomReq) */ {
 public:
  inline Msg_CreateRoomReq() : Msg_CreateRoomReq(nullptr) {};
  virtual ~Msg_CreateRoomReq();

  Msg_CreateRoomReq(const Msg_CreateRoomReq& from);
  Msg_CreateRoomReq(Msg_CreateRoomReq&& from) noexcept
    : Msg_CreateRoomReq() {
    *this = ::std::move(from);
  }

  inline Msg_CreateRoomReq& operator=(const Msg_CreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_CreateRoomReq& operator=(Msg_CreateRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_CreateRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_CreateRoomReq* internal_default_instance() {
    return reinterpret_cast<const Msg_CreateRoomReq*>(
               &_Msg_CreateRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Msg_CreateRoomReq& a, Msg_CreateRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_CreateRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_CreateRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_CreateRoomReq* New() const final {
    return CreateMaybeMessage<Msg_CreateRoomReq>(nullptr);
  }

  Msg_CreateRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_CreateRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_CreateRoomReq& from);
  void MergeFrom(const Msg_CreateRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_CreateRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_CreateRoomReq";
  }
  protected:
  explicit Msg_CreateRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kCopyIDFieldNumber = 2,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 CopyID = 2;
  void clear_copyid();
  ::PROTOBUF_NAMESPACE_ID::uint32 copyid() const;
  void set_copyid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_copyid() const;
  void _internal_set_copyid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_CreateRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 copyid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class Msg_CreateRoomAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_CreateRoomAck) */ {
 public:
  inline Msg_CreateRoomAck() : Msg_CreateRoomAck(nullptr) {};
  virtual ~Msg_CreateRoomAck();

  Msg_CreateRoomAck(const Msg_CreateRoomAck& from);
  Msg_CreateRoomAck(Msg_CreateRoomAck&& from) noexcept
    : Msg_CreateRoomAck() {
    *this = ::std::move(from);
  }

  inline Msg_CreateRoomAck& operator=(const Msg_CreateRoomAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_CreateRoomAck& operator=(Msg_CreateRoomAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_CreateRoomAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_CreateRoomAck* internal_default_instance() {
    return reinterpret_cast<const Msg_CreateRoomAck*>(
               &_Msg_CreateRoomAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Msg_CreateRoomAck& a, Msg_CreateRoomAck& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_CreateRoomAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_CreateRoomAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_CreateRoomAck* New() const final {
    return CreateMaybeMessage<Msg_CreateRoomAck>(nullptr);
  }

  Msg_CreateRoomAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_CreateRoomAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_CreateRoomAck& from);
  void MergeFrom(const Msg_CreateRoomAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_CreateRoomAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_CreateRoomAck";
  }
  protected:
  explicit Msg_CreateRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoomIDFieldNumber = 2,
    kRetCodeFieldNumber = 1,
  };
  // uint64 RoomID = 2;
  void clear_roomid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid() const;
  void set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roomid() const;
  void _internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_CreateRoomAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class Msg_JoinRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_JoinRoomReq) */ {
 public:
  inline Msg_JoinRoomReq() : Msg_JoinRoomReq(nullptr) {};
  virtual ~Msg_JoinRoomReq();

  Msg_JoinRoomReq(const Msg_JoinRoomReq& from);
  Msg_JoinRoomReq(Msg_JoinRoomReq&& from) noexcept
    : Msg_JoinRoomReq() {
    *this = ::std::move(from);
  }

  inline Msg_JoinRoomReq& operator=(const Msg_JoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_JoinRoomReq& operator=(Msg_JoinRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_JoinRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_JoinRoomReq* internal_default_instance() {
    return reinterpret_cast<const Msg_JoinRoomReq*>(
               &_Msg_JoinRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Msg_JoinRoomReq& a, Msg_JoinRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_JoinRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_JoinRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_JoinRoomReq* New() const final {
    return CreateMaybeMessage<Msg_JoinRoomReq>(nullptr);
  }

  Msg_JoinRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_JoinRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_JoinRoomReq& from);
  void MergeFrom(const Msg_JoinRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_JoinRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_JoinRoomReq";
  }
  protected:
  explicit Msg_JoinRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kRoomIDFieldNumber = 2,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 RoomID = 2;
  void clear_roomid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid() const;
  void set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roomid() const;
  void _internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_JoinRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class Msg_JoinRoomAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_JoinRoomAck) */ {
 public:
  inline Msg_JoinRoomAck() : Msg_JoinRoomAck(nullptr) {};
  virtual ~Msg_JoinRoomAck();

  Msg_JoinRoomAck(const Msg_JoinRoomAck& from);
  Msg_JoinRoomAck(Msg_JoinRoomAck&& from) noexcept
    : Msg_JoinRoomAck() {
    *this = ::std::move(from);
  }

  inline Msg_JoinRoomAck& operator=(const Msg_JoinRoomAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_JoinRoomAck& operator=(Msg_JoinRoomAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_JoinRoomAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_JoinRoomAck* internal_default_instance() {
    return reinterpret_cast<const Msg_JoinRoomAck*>(
               &_Msg_JoinRoomAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Msg_JoinRoomAck& a, Msg_JoinRoomAck& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_JoinRoomAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_JoinRoomAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_JoinRoomAck* New() const final {
    return CreateMaybeMessage<Msg_JoinRoomAck>(nullptr);
  }

  Msg_JoinRoomAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_JoinRoomAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_JoinRoomAck& from);
  void MergeFrom(const Msg_JoinRoomAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_JoinRoomAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_JoinRoomAck";
  }
  protected:
  explicit Msg_JoinRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoomIDFieldNumber = 2,
    kRetCodeFieldNumber = 1,
  };
  // uint64 RoomID = 2;
  void clear_roomid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid() const;
  void set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roomid() const;
  void _internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_JoinRoomAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class Msg_KickRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_KickRoomReq) */ {
 public:
  inline Msg_KickRoomReq() : Msg_KickRoomReq(nullptr) {};
  virtual ~Msg_KickRoomReq();

  Msg_KickRoomReq(const Msg_KickRoomReq& from);
  Msg_KickRoomReq(Msg_KickRoomReq&& from) noexcept
    : Msg_KickRoomReq() {
    *this = ::std::move(from);
  }

  inline Msg_KickRoomReq& operator=(const Msg_KickRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_KickRoomReq& operator=(Msg_KickRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_KickRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_KickRoomReq* internal_default_instance() {
    return reinterpret_cast<const Msg_KickRoomReq*>(
               &_Msg_KickRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(Msg_KickRoomReq& a, Msg_KickRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_KickRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_KickRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_KickRoomReq* New() const final {
    return CreateMaybeMessage<Msg_KickRoomReq>(nullptr);
  }

  Msg_KickRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_KickRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_KickRoomReq& from);
  void MergeFrom(const Msg_KickRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_KickRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_KickRoomReq";
  }
  protected:
  explicit Msg_KickRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kRoomIDFieldNumber = 2,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 RoomID = 2;
  void clear_roomid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid() const;
  void set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roomid() const;
  void _internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_KickRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class Msg_KickRoomAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_KickRoomAck) */ {
 public:
  inline Msg_KickRoomAck() : Msg_KickRoomAck(nullptr) {};
  virtual ~Msg_KickRoomAck();

  Msg_KickRoomAck(const Msg_KickRoomAck& from);
  Msg_KickRoomAck(Msg_KickRoomAck&& from) noexcept
    : Msg_KickRoomAck() {
    *this = ::std::move(from);
  }

  inline Msg_KickRoomAck& operator=(const Msg_KickRoomAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_KickRoomAck& operator=(Msg_KickRoomAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_KickRoomAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_KickRoomAck* internal_default_instance() {
    return reinterpret_cast<const Msg_KickRoomAck*>(
               &_Msg_KickRoomAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(Msg_KickRoomAck& a, Msg_KickRoomAck& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_KickRoomAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_KickRoomAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_KickRoomAck* New() const final {
    return CreateMaybeMessage<Msg_KickRoomAck>(nullptr);
  }

  Msg_KickRoomAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_KickRoomAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_KickRoomAck& from);
  void MergeFrom(const Msg_KickRoomAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_KickRoomAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_KickRoomAck";
  }
  protected:
  explicit Msg_KickRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_KickRoomAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class Msg_LeaveRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_LeaveRoomReq) */ {
 public:
  inline Msg_LeaveRoomReq() : Msg_LeaveRoomReq(nullptr) {};
  virtual ~Msg_LeaveRoomReq();

  Msg_LeaveRoomReq(const Msg_LeaveRoomReq& from);
  Msg_LeaveRoomReq(Msg_LeaveRoomReq&& from) noexcept
    : Msg_LeaveRoomReq() {
    *this = ::std::move(from);
  }

  inline Msg_LeaveRoomReq& operator=(const Msg_LeaveRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_LeaveRoomReq& operator=(Msg_LeaveRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_LeaveRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_LeaveRoomReq* internal_default_instance() {
    return reinterpret_cast<const Msg_LeaveRoomReq*>(
               &_Msg_LeaveRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(Msg_LeaveRoomReq& a, Msg_LeaveRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_LeaveRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_LeaveRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_LeaveRoomReq* New() const final {
    return CreateMaybeMessage<Msg_LeaveRoomReq>(nullptr);
  }

  Msg_LeaveRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_LeaveRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_LeaveRoomReq& from);
  void MergeFrom(const Msg_LeaveRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_LeaveRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_LeaveRoomReq";
  }
  protected:
  explicit Msg_LeaveRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kRoomIDFieldNumber = 2,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 RoomID = 2;
  void clear_roomid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid() const;
  void set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roomid() const;
  void _internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_LeaveRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class Msg_LeaveRoomAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_LeaveRoomAck) */ {
 public:
  inline Msg_LeaveRoomAck() : Msg_LeaveRoomAck(nullptr) {};
  virtual ~Msg_LeaveRoomAck();

  Msg_LeaveRoomAck(const Msg_LeaveRoomAck& from);
  Msg_LeaveRoomAck(Msg_LeaveRoomAck&& from) noexcept
    : Msg_LeaveRoomAck() {
    *this = ::std::move(from);
  }

  inline Msg_LeaveRoomAck& operator=(const Msg_LeaveRoomAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_LeaveRoomAck& operator=(Msg_LeaveRoomAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_LeaveRoomAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_LeaveRoomAck* internal_default_instance() {
    return reinterpret_cast<const Msg_LeaveRoomAck*>(
               &_Msg_LeaveRoomAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(Msg_LeaveRoomAck& a, Msg_LeaveRoomAck& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_LeaveRoomAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_LeaveRoomAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_LeaveRoomAck* New() const final {
    return CreateMaybeMessage<Msg_LeaveRoomAck>(nullptr);
  }

  Msg_LeaveRoomAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_LeaveRoomAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_LeaveRoomAck& from);
  void MergeFrom(const Msg_LeaveRoomAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_LeaveRoomAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_LeaveRoomAck";
  }
  protected:
  explicit Msg_LeaveRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_LeaveRoomAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class Msg_StartRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_StartRoomReq) */ {
 public:
  inline Msg_StartRoomReq() : Msg_StartRoomReq(nullptr) {};
  virtual ~Msg_StartRoomReq();

  Msg_StartRoomReq(const Msg_StartRoomReq& from);
  Msg_StartRoomReq(Msg_StartRoomReq&& from) noexcept
    : Msg_StartRoomReq() {
    *this = ::std::move(from);
  }

  inline Msg_StartRoomReq& operator=(const Msg_StartRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_StartRoomReq& operator=(Msg_StartRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_StartRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_StartRoomReq* internal_default_instance() {
    return reinterpret_cast<const Msg_StartRoomReq*>(
               &_Msg_StartRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(Msg_StartRoomReq& a, Msg_StartRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_StartRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_StartRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_StartRoomReq* New() const final {
    return CreateMaybeMessage<Msg_StartRoomReq>(nullptr);
  }

  Msg_StartRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_StartRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_StartRoomReq& from);
  void MergeFrom(const Msg_StartRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_StartRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_StartRoomReq";
  }
  protected:
  explicit Msg_StartRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kRoomIDFieldNumber = 2,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 RoomID = 2;
  void clear_roomid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid() const;
  void set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roomid() const;
  void _internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_StartRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class Msg_StartRoomAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_StartRoomAck) */ {
 public:
  inline Msg_StartRoomAck() : Msg_StartRoomAck(nullptr) {};
  virtual ~Msg_StartRoomAck();

  Msg_StartRoomAck(const Msg_StartRoomAck& from);
  Msg_StartRoomAck(Msg_StartRoomAck&& from) noexcept
    : Msg_StartRoomAck() {
    *this = ::std::move(from);
  }

  inline Msg_StartRoomAck& operator=(const Msg_StartRoomAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_StartRoomAck& operator=(Msg_StartRoomAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_StartRoomAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_StartRoomAck* internal_default_instance() {
    return reinterpret_cast<const Msg_StartRoomAck*>(
               &_Msg_StartRoomAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(Msg_StartRoomAck& a, Msg_StartRoomAck& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_StartRoomAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_StartRoomAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_StartRoomAck* New() const final {
    return CreateMaybeMessage<Msg_StartRoomAck>(nullptr);
  }

  Msg_StartRoomAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_StartRoomAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_StartRoomAck& from);
  void MergeFrom(const Msg_StartRoomAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_StartRoomAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_StartRoomAck";
  }
  protected:
  explicit Msg_StartRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_StartRoomAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class Msg_RoomPlayerInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_RoomPlayerInfo) */ {
 public:
  inline Msg_RoomPlayerInfo() : Msg_RoomPlayerInfo(nullptr) {};
  virtual ~Msg_RoomPlayerInfo();

  Msg_RoomPlayerInfo(const Msg_RoomPlayerInfo& from);
  Msg_RoomPlayerInfo(Msg_RoomPlayerInfo&& from) noexcept
    : Msg_RoomPlayerInfo() {
    *this = ::std::move(from);
  }

  inline Msg_RoomPlayerInfo& operator=(const Msg_RoomPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_RoomPlayerInfo& operator=(Msg_RoomPlayerInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_RoomPlayerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_RoomPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const Msg_RoomPlayerInfo*>(
               &_Msg_RoomPlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(Msg_RoomPlayerInfo& a, Msg_RoomPlayerInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_RoomPlayerInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_RoomPlayerInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_RoomPlayerInfo* New() const final {
    return CreateMaybeMessage<Msg_RoomPlayerInfo>(nullptr);
  }

  Msg_RoomPlayerInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_RoomPlayerInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_RoomPlayerInfo& from);
  void MergeFrom(const Msg_RoomPlayerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_RoomPlayerInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_RoomPlayerInfo";
  }
  protected:
  explicit Msg_RoomPlayerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEquipsFieldNumber = 6,
    kNameFieldNumber = 3,
    kRoleIDFieldNumber = 1,
    kLevelFieldNumber = 2,
    kActorIDFieldNumber = 4,
    kMountIDFieldNumber = 5,
  };
  // repeated int32 Equips = 6;
  int equips_size() const;
  private:
  int _internal_equips_size() const;
  public:
  void clear_equips();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_equips(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_equips() const;
  void _internal_add_equips(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_equips();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 equips(int index) const;
  void set_equips(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_equips(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      equips() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_equips();

  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 Level = 2;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ActorID = 4;
  void clear_actorid();
  ::PROTOBUF_NAMESPACE_ID::int32 actorid() const;
  void set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actorid() const;
  void _internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 MountID = 5;
  void clear_mountid();
  ::PROTOBUF_NAMESPACE_ID::int32 mountid() const;
  void set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mountid() const;
  void _internal_set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_RoomPlayerInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > equips_;
  mutable std::atomic<int> _equips_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::int32 actorid_;
  ::PROTOBUF_NAMESPACE_ID::int32 mountid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// -------------------------------------------------------------------

class Msg_BroadRoomNotify PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_BroadRoomNotify) */ {
 public:
  inline Msg_BroadRoomNotify() : Msg_BroadRoomNotify(nullptr) {};
  virtual ~Msg_BroadRoomNotify();

  Msg_BroadRoomNotify(const Msg_BroadRoomNotify& from);
  Msg_BroadRoomNotify(Msg_BroadRoomNotify&& from) noexcept
    : Msg_BroadRoomNotify() {
    *this = ::std::move(from);
  }

  inline Msg_BroadRoomNotify& operator=(const Msg_BroadRoomNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_BroadRoomNotify& operator=(Msg_BroadRoomNotify&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_BroadRoomNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_BroadRoomNotify* internal_default_instance() {
    return reinterpret_cast<const Msg_BroadRoomNotify*>(
               &_Msg_BroadRoomNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(Msg_BroadRoomNotify& a, Msg_BroadRoomNotify& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_BroadRoomNotify* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_BroadRoomNotify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_BroadRoomNotify* New() const final {
    return CreateMaybeMessage<Msg_BroadRoomNotify>(nullptr);
  }

  Msg_BroadRoomNotify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_BroadRoomNotify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_BroadRoomNotify& from);
  void MergeFrom(const Msg_BroadRoomNotify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_BroadRoomNotify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_BroadRoomNotify";
  }
  protected:
  explicit Msg_BroadRoomNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fCopy_2eproto);
    return ::descriptor_table_Msg_5fCopy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerListFieldNumber = 1,
  };
  // repeated .Msg_RoomPlayerInfo PlayerList = 1;
  int playerlist_size() const;
  private:
  int _internal_playerlist_size() const;
  public:
  void clear_playerlist();
  ::Msg_RoomPlayerInfo* mutable_playerlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Msg_RoomPlayerInfo >*
      mutable_playerlist();
  private:
  const ::Msg_RoomPlayerInfo& _internal_playerlist(int index) const;
  ::Msg_RoomPlayerInfo* _internal_add_playerlist();
  public:
  const ::Msg_RoomPlayerInfo& playerlist(int index) const;
  ::Msg_RoomPlayerInfo* add_playerlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Msg_RoomPlayerInfo >&
      playerlist() const;

  // @@protoc_insertion_point(class_scope:Msg_BroadRoomNotify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Msg_RoomPlayerInfo > playerlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fCopy_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ResultObject

// uint64 ObjectID = 1;
inline void ResultObject::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ResultObject::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ResultObject::objectid() const {
  // @@protoc_insertion_point(field_get:ResultObject.ObjectID)
  return _internal_objectid();
}
inline void ResultObject::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void ResultObject::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:ResultObject.ObjectID)
}

// int32 ActorID = 2;
inline void ResultObject::clear_actorid() {
  actorid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::_internal_actorid() const {
  return actorid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::actorid() const {
  // @@protoc_insertion_point(field_get:ResultObject.ActorID)
  return _internal_actorid();
}
inline void ResultObject::_internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actorid_ = value;
}
inline void ResultObject::set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actorid(value);
  // @@protoc_insertion_point(field_set:ResultObject.ActorID)
}

// int32 ObjectType = 3;
inline void ResultObject::clear_objecttype() {
  objecttype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::_internal_objecttype() const {
  return objecttype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::objecttype() const {
  // @@protoc_insertion_point(field_get:ResultObject.ObjectType)
  return _internal_objecttype();
}
inline void ResultObject::_internal_set_objecttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  objecttype_ = value;
}
inline void ResultObject::set_objecttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_objecttype(value);
  // @@protoc_insertion_point(field_set:ResultObject.ObjectType)
}

// int32 Result = 4;
inline void ResultObject::clear_result() {
  result_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::result() const {
  // @@protoc_insertion_point(field_get:ResultObject.Result)
  return _internal_result();
}
inline void ResultObject::_internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  result_ = value;
}
inline void ResultObject::set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:ResultObject.Result)
}

// int32 Kill = 5;
inline void ResultObject::clear_kill() {
  kill_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::_internal_kill() const {
  return kill_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::kill() const {
  // @@protoc_insertion_point(field_get:ResultObject.Kill)
  return _internal_kill();
}
inline void ResultObject::_internal_set_kill(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  kill_ = value;
}
inline void ResultObject::set_kill(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kill(value);
  // @@protoc_insertion_point(field_set:ResultObject.Kill)
}

// int32 Death = 6;
inline void ResultObject::clear_death() {
  death_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::_internal_death() const {
  return death_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::death() const {
  // @@protoc_insertion_point(field_get:ResultObject.Death)
  return _internal_death();
}
inline void ResultObject::_internal_set_death(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  death_ = value;
}
inline void ResultObject::set_death(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_death(value);
  // @@protoc_insertion_point(field_set:ResultObject.Death)
}

// int32 Heal = 7;
inline void ResultObject::clear_heal() {
  heal_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::_internal_heal() const {
  return heal_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::heal() const {
  // @@protoc_insertion_point(field_get:ResultObject.Heal)
  return _internal_heal();
}
inline void ResultObject::_internal_set_heal(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  heal_ = value;
}
inline void ResultObject::set_heal(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_heal(value);
  // @@protoc_insertion_point(field_set:ResultObject.Heal)
}

// int32 Damage = 8;
inline void ResultObject::clear_damage() {
  damage_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::_internal_damage() const {
  return damage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultObject::damage() const {
  // @@protoc_insertion_point(field_get:ResultObject.Damage)
  return _internal_damage();
}
inline void ResultObject::_internal_set_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  damage_ = value;
}
inline void ResultObject::set_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_damage(value);
  // @@protoc_insertion_point(field_set:ResultObject.Damage)
}

// -------------------------------------------------------------------

// ResultPlayer

// uint64 ObjectID = 1;
inline void ResultPlayer::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ResultPlayer::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ResultPlayer::objectid() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.ObjectID)
  return _internal_objectid();
}
inline void ResultPlayer::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void ResultPlayer::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:ResultPlayer.ObjectID)
}

// int32 ActorID = 2;
inline void ResultPlayer::clear_actorid() {
  actorid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::_internal_actorid() const {
  return actorid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::actorid() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.ActorID)
  return _internal_actorid();
}
inline void ResultPlayer::_internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actorid_ = value;
}
inline void ResultPlayer::set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actorid(value);
  // @@protoc_insertion_point(field_set:ResultPlayer.ActorID)
}

// int32 ObjectType = 3;
inline void ResultPlayer::clear_objecttype() {
  objecttype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::_internal_objecttype() const {
  return objecttype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::objecttype() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.ObjectType)
  return _internal_objecttype();
}
inline void ResultPlayer::_internal_set_objecttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  objecttype_ = value;
}
inline void ResultPlayer::set_objecttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_objecttype(value);
  // @@protoc_insertion_point(field_set:ResultPlayer.ObjectType)
}

// int32 Result = 4;
inline void ResultPlayer::clear_result() {
  result_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::result() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Result)
  return _internal_result();
}
inline void ResultPlayer::_internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  result_ = value;
}
inline void ResultPlayer::set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:ResultPlayer.Result)
}

// int32 Kill = 5;
inline void ResultPlayer::clear_kill() {
  kill_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::_internal_kill() const {
  return kill_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::kill() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Kill)
  return _internal_kill();
}
inline void ResultPlayer::_internal_set_kill(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  kill_ = value;
}
inline void ResultPlayer::set_kill(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kill(value);
  // @@protoc_insertion_point(field_set:ResultPlayer.Kill)
}

// int32 Death = 6;
inline void ResultPlayer::clear_death() {
  death_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::_internal_death() const {
  return death_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::death() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Death)
  return _internal_death();
}
inline void ResultPlayer::_internal_set_death(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  death_ = value;
}
inline void ResultPlayer::set_death(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_death(value);
  // @@protoc_insertion_point(field_set:ResultPlayer.Death)
}

// int32 Heal = 7;
inline void ResultPlayer::clear_heal() {
  heal_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::_internal_heal() const {
  return heal_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::heal() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Heal)
  return _internal_heal();
}
inline void ResultPlayer::_internal_set_heal(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  heal_ = value;
}
inline void ResultPlayer::set_heal(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_heal(value);
  // @@protoc_insertion_point(field_set:ResultPlayer.Heal)
}

// int32 Damage = 8;
inline void ResultPlayer::clear_damage() {
  damage_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::_internal_damage() const {
  return damage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResultPlayer::damage() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Damage)
  return _internal_damage();
}
inline void ResultPlayer::_internal_set_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  damage_ = value;
}
inline void ResultPlayer::set_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_damage(value);
  // @@protoc_insertion_point(field_set:ResultPlayer.Damage)
}

// -------------------------------------------------------------------

// BattleResultNty

// int32 ServerID = 1;
inline void BattleResultNty::clear_serverid() {
  serverid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BattleResultNty::_internal_serverid() const {
  return serverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BattleResultNty::serverid() const {
  // @@protoc_insertion_point(field_get:BattleResultNty.ServerID)
  return _internal_serverid();
}
inline void BattleResultNty::_internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverid_ = value;
}
inline void BattleResultNty::set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:BattleResultNty.ServerID)
}

// uint32 CopyGuid = 2;
inline void BattleResultNty::clear_copyguid() {
  copyguid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BattleResultNty::_internal_copyguid() const {
  return copyguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BattleResultNty::copyguid() const {
  // @@protoc_insertion_point(field_get:BattleResultNty.CopyGuid)
  return _internal_copyguid();
}
inline void BattleResultNty::_internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  copyguid_ = value;
}
inline void BattleResultNty::set_copyguid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_copyguid(value);
  // @@protoc_insertion_point(field_set:BattleResultNty.CopyGuid)
}

// int32 CopyID = 3;
inline void BattleResultNty::clear_copyid() {
  copyid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BattleResultNty::_internal_copyid() const {
  return copyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BattleResultNty::copyid() const {
  // @@protoc_insertion_point(field_get:BattleResultNty.CopyID)
  return _internal_copyid();
}
inline void BattleResultNty::_internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyid_ = value;
}
inline void BattleResultNty::set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:BattleResultNty.CopyID)
}

// int32 CopyType = 4;
inline void BattleResultNty::clear_copytype() {
  copytype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BattleResultNty::_internal_copytype() const {
  return copytype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BattleResultNty::copytype() const {
  // @@protoc_insertion_point(field_get:BattleResultNty.CopyType)
  return _internal_copytype();
}
inline void BattleResultNty::_internal_set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copytype_ = value;
}
inline void BattleResultNty::set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copytype(value);
  // @@protoc_insertion_point(field_set:BattleResultNty.CopyType)
}

// uint64 LastTime = 5;
inline void BattleResultNty::clear_lasttime() {
  lasttime_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BattleResultNty::_internal_lasttime() const {
  return lasttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BattleResultNty::lasttime() const {
  // @@protoc_insertion_point(field_get:BattleResultNty.LastTime)
  return _internal_lasttime();
}
inline void BattleResultNty::_internal_set_lasttime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  lasttime_ = value;
}
inline void BattleResultNty::set_lasttime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lasttime(value);
  // @@protoc_insertion_point(field_set:BattleResultNty.LastTime)
}

// repeated .ResultPlayer PlayerList = 6;
inline int BattleResultNty::_internal_playerlist_size() const {
  return playerlist_.size();
}
inline int BattleResultNty::playerlist_size() const {
  return _internal_playerlist_size();
}
inline void BattleResultNty::clear_playerlist() {
  playerlist_.Clear();
}
inline ::ResultPlayer* BattleResultNty::mutable_playerlist(int index) {
  // @@protoc_insertion_point(field_mutable:BattleResultNty.PlayerList)
  return playerlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ResultPlayer >*
BattleResultNty::mutable_playerlist() {
  // @@protoc_insertion_point(field_mutable_list:BattleResultNty.PlayerList)
  return &playerlist_;
}
inline const ::ResultPlayer& BattleResultNty::_internal_playerlist(int index) const {
  return playerlist_.Get(index);
}
inline const ::ResultPlayer& BattleResultNty::playerlist(int index) const {
  // @@protoc_insertion_point(field_get:BattleResultNty.PlayerList)
  return _internal_playerlist(index);
}
inline ::ResultPlayer* BattleResultNty::_internal_add_playerlist() {
  return playerlist_.Add();
}
inline ::ResultPlayer* BattleResultNty::add_playerlist() {
  // @@protoc_insertion_point(field_add:BattleResultNty.PlayerList)
  return _internal_add_playerlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ResultPlayer >&
BattleResultNty::playerlist() const {
  // @@protoc_insertion_point(field_list:BattleResultNty.PlayerList)
  return playerlist_;
}

// repeated .ResultObject ObjectList = 7;
inline int BattleResultNty::_internal_objectlist_size() const {
  return objectlist_.size();
}
inline int BattleResultNty::objectlist_size() const {
  return _internal_objectlist_size();
}
inline void BattleResultNty::clear_objectlist() {
  objectlist_.Clear();
}
inline ::ResultObject* BattleResultNty::mutable_objectlist(int index) {
  // @@protoc_insertion_point(field_mutable:BattleResultNty.ObjectList)
  return objectlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ResultObject >*
BattleResultNty::mutable_objectlist() {
  // @@protoc_insertion_point(field_mutable_list:BattleResultNty.ObjectList)
  return &objectlist_;
}
inline const ::ResultObject& BattleResultNty::_internal_objectlist(int index) const {
  return objectlist_.Get(index);
}
inline const ::ResultObject& BattleResultNty::objectlist(int index) const {
  // @@protoc_insertion_point(field_get:BattleResultNty.ObjectList)
  return _internal_objectlist(index);
}
inline ::ResultObject* BattleResultNty::_internal_add_objectlist() {
  return objectlist_.Add();
}
inline ::ResultObject* BattleResultNty::add_objectlist() {
  // @@protoc_insertion_point(field_add:BattleResultNty.ObjectList)
  return _internal_add_objectlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ResultObject >&
BattleResultNty::objectlist() const {
  // @@protoc_insertion_point(field_list:BattleResultNty.ObjectList)
  return objectlist_;
}

// -------------------------------------------------------------------

// MainCopyReq

// int32 CopyID = 1;
inline void MainCopyReq::clear_copyid() {
  copyid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MainCopyReq::_internal_copyid() const {
  return copyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MainCopyReq::copyid() const {
  // @@protoc_insertion_point(field_get:MainCopyReq.CopyID)
  return _internal_copyid();
}
inline void MainCopyReq::_internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyid_ = value;
}
inline void MainCopyReq::set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:MainCopyReq.CopyID)
}

// -------------------------------------------------------------------

// MainCopyAck

// uint32 RetCode = 1;
inline void MainCopyAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MainCopyAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MainCopyAck::retcode() const {
  // @@protoc_insertion_point(field_get:MainCopyAck.RetCode)
  return _internal_retcode();
}
inline void MainCopyAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void MainCopyAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:MainCopyAck.RetCode)
}

// -------------------------------------------------------------------

// MainCopyResultNty

// uint64 RoleID = 1;
inline void MainCopyResultNty::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MainCopyResultNty::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MainCopyResultNty::roleid() const {
  // @@protoc_insertion_point(field_get:MainCopyResultNty.RoleID)
  return _internal_roleid();
}
inline void MainCopyResultNty::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void MainCopyResultNty::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:MainCopyResultNty.RoleID)
}

// int32 CopyID = 2;
inline void MainCopyResultNty::clear_copyid() {
  copyid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MainCopyResultNty::_internal_copyid() const {
  return copyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MainCopyResultNty::copyid() const {
  // @@protoc_insertion_point(field_get:MainCopyResultNty.CopyID)
  return _internal_copyid();
}
inline void MainCopyResultNty::_internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyid_ = value;
}
inline void MainCopyResultNty::set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:MainCopyResultNty.CopyID)
}

// int32 CopyResult = 3;
inline void MainCopyResultNty::clear_copyresult() {
  copyresult_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MainCopyResultNty::_internal_copyresult() const {
  return copyresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MainCopyResultNty::copyresult() const {
  // @@protoc_insertion_point(field_get:MainCopyResultNty.CopyResult)
  return _internal_copyresult();
}
inline void MainCopyResultNty::_internal_set_copyresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyresult_ = value;
}
inline void MainCopyResultNty::set_copyresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyresult(value);
  // @@protoc_insertion_point(field_set:MainCopyResultNty.CopyResult)
}

// int32 StarNum = 4;
inline void MainCopyResultNty::clear_starnum() {
  starnum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MainCopyResultNty::_internal_starnum() const {
  return starnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MainCopyResultNty::starnum() const {
  // @@protoc_insertion_point(field_get:MainCopyResultNty.StarNum)
  return _internal_starnum();
}
inline void MainCopyResultNty::_internal_set_starnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  starnum_ = value;
}
inline void MainCopyResultNty::set_starnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_starnum(value);
  // @@protoc_insertion_point(field_set:MainCopyResultNty.StarNum)
}

// uint64 LastTime = 5;
inline void MainCopyResultNty::clear_lasttime() {
  lasttime_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MainCopyResultNty::_internal_lasttime() const {
  return lasttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MainCopyResultNty::lasttime() const {
  // @@protoc_insertion_point(field_get:MainCopyResultNty.LastTime)
  return _internal_lasttime();
}
inline void MainCopyResultNty::_internal_set_lasttime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  lasttime_ = value;
}
inline void MainCopyResultNty::set_lasttime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lasttime(value);
  // @@protoc_insertion_point(field_set:MainCopyResultNty.LastTime)
}

// repeated .ItemData ItemList = 6;
inline int MainCopyResultNty::_internal_itemlist_size() const {
  return itemlist_.size();
}
inline int MainCopyResultNty::itemlist_size() const {
  return _internal_itemlist_size();
}
inline ::ItemData* MainCopyResultNty::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:MainCopyResultNty.ItemList)
  return itemlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ItemData >*
MainCopyResultNty::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:MainCopyResultNty.ItemList)
  return &itemlist_;
}
inline const ::ItemData& MainCopyResultNty::_internal_itemlist(int index) const {
  return itemlist_.Get(index);
}
inline const ::ItemData& MainCopyResultNty::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:MainCopyResultNty.ItemList)
  return _internal_itemlist(index);
}
inline ::ItemData* MainCopyResultNty::_internal_add_itemlist() {
  return itemlist_.Add();
}
inline ::ItemData* MainCopyResultNty::add_itemlist() {
  // @@protoc_insertion_point(field_add:MainCopyResultNty.ItemList)
  return _internal_add_itemlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ItemData >&
MainCopyResultNty::itemlist() const {
  // @@protoc_insertion_point(field_list:MainCopyResultNty.ItemList)
  return itemlist_;
}

// -------------------------------------------------------------------

// Msg_CreateRoomReq

// uint64 RoleID = 1;
inline void Msg_CreateRoomReq::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_CreateRoomReq::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_CreateRoomReq::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_CreateRoomReq.RoleID)
  return _internal_roleid();
}
inline void Msg_CreateRoomReq::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void Msg_CreateRoomReq::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:Msg_CreateRoomReq.RoleID)
}

// uint32 CopyID = 2;
inline void Msg_CreateRoomReq::clear_copyid() {
  copyid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_CreateRoomReq::_internal_copyid() const {
  return copyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_CreateRoomReq::copyid() const {
  // @@protoc_insertion_point(field_get:Msg_CreateRoomReq.CopyID)
  return _internal_copyid();
}
inline void Msg_CreateRoomReq::_internal_set_copyid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  copyid_ = value;
}
inline void Msg_CreateRoomReq::set_copyid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:Msg_CreateRoomReq.CopyID)
}

// -------------------------------------------------------------------

// Msg_CreateRoomAck

// uint32 RetCode = 1;
inline void Msg_CreateRoomAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_CreateRoomAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_CreateRoomAck::retcode() const {
  // @@protoc_insertion_point(field_get:Msg_CreateRoomAck.RetCode)
  return _internal_retcode();
}
inline void Msg_CreateRoomAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void Msg_CreateRoomAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:Msg_CreateRoomAck.RetCode)
}

// uint64 RoomID = 2;
inline void Msg_CreateRoomAck::clear_roomid() {
  roomid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_CreateRoomAck::_internal_roomid() const {
  return roomid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_CreateRoomAck::roomid() const {
  // @@protoc_insertion_point(field_get:Msg_CreateRoomAck.RoomID)
  return _internal_roomid();
}
inline void Msg_CreateRoomAck::_internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roomid_ = value;
}
inline void Msg_CreateRoomAck::set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:Msg_CreateRoomAck.RoomID)
}

// -------------------------------------------------------------------

// Msg_JoinRoomReq

// uint64 RoleID = 1;
inline void Msg_JoinRoomReq::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_JoinRoomReq::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_JoinRoomReq::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_JoinRoomReq.RoleID)
  return _internal_roleid();
}
inline void Msg_JoinRoomReq::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void Msg_JoinRoomReq::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:Msg_JoinRoomReq.RoleID)
}

// uint64 RoomID = 2;
inline void Msg_JoinRoomReq::clear_roomid() {
  roomid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_JoinRoomReq::_internal_roomid() const {
  return roomid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_JoinRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:Msg_JoinRoomReq.RoomID)
  return _internal_roomid();
}
inline void Msg_JoinRoomReq::_internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roomid_ = value;
}
inline void Msg_JoinRoomReq::set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:Msg_JoinRoomReq.RoomID)
}

// -------------------------------------------------------------------

// Msg_JoinRoomAck

// uint32 RetCode = 1;
inline void Msg_JoinRoomAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_JoinRoomAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_JoinRoomAck::retcode() const {
  // @@protoc_insertion_point(field_get:Msg_JoinRoomAck.RetCode)
  return _internal_retcode();
}
inline void Msg_JoinRoomAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void Msg_JoinRoomAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:Msg_JoinRoomAck.RetCode)
}

// uint64 RoomID = 2;
inline void Msg_JoinRoomAck::clear_roomid() {
  roomid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_JoinRoomAck::_internal_roomid() const {
  return roomid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_JoinRoomAck::roomid() const {
  // @@protoc_insertion_point(field_get:Msg_JoinRoomAck.RoomID)
  return _internal_roomid();
}
inline void Msg_JoinRoomAck::_internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roomid_ = value;
}
inline void Msg_JoinRoomAck::set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:Msg_JoinRoomAck.RoomID)
}

// -------------------------------------------------------------------

// Msg_KickRoomReq

// uint64 RoleID = 1;
inline void Msg_KickRoomReq::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_KickRoomReq::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_KickRoomReq::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_KickRoomReq.RoleID)
  return _internal_roleid();
}
inline void Msg_KickRoomReq::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void Msg_KickRoomReq::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:Msg_KickRoomReq.RoleID)
}

// uint64 RoomID = 2;
inline void Msg_KickRoomReq::clear_roomid() {
  roomid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_KickRoomReq::_internal_roomid() const {
  return roomid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_KickRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:Msg_KickRoomReq.RoomID)
  return _internal_roomid();
}
inline void Msg_KickRoomReq::_internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roomid_ = value;
}
inline void Msg_KickRoomReq::set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:Msg_KickRoomReq.RoomID)
}

// -------------------------------------------------------------------

// Msg_KickRoomAck

// uint32 RetCode = 1;
inline void Msg_KickRoomAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_KickRoomAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_KickRoomAck::retcode() const {
  // @@protoc_insertion_point(field_get:Msg_KickRoomAck.RetCode)
  return _internal_retcode();
}
inline void Msg_KickRoomAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void Msg_KickRoomAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:Msg_KickRoomAck.RetCode)
}

// -------------------------------------------------------------------

// Msg_LeaveRoomReq

// uint64 RoleID = 1;
inline void Msg_LeaveRoomReq::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_LeaveRoomReq::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_LeaveRoomReq::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_LeaveRoomReq.RoleID)
  return _internal_roleid();
}
inline void Msg_LeaveRoomReq::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void Msg_LeaveRoomReq::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:Msg_LeaveRoomReq.RoleID)
}

// uint64 RoomID = 2;
inline void Msg_LeaveRoomReq::clear_roomid() {
  roomid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_LeaveRoomReq::_internal_roomid() const {
  return roomid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_LeaveRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:Msg_LeaveRoomReq.RoomID)
  return _internal_roomid();
}
inline void Msg_LeaveRoomReq::_internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roomid_ = value;
}
inline void Msg_LeaveRoomReq::set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:Msg_LeaveRoomReq.RoomID)
}

// -------------------------------------------------------------------

// Msg_LeaveRoomAck

// uint32 RetCode = 1;
inline void Msg_LeaveRoomAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_LeaveRoomAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_LeaveRoomAck::retcode() const {
  // @@protoc_insertion_point(field_get:Msg_LeaveRoomAck.RetCode)
  return _internal_retcode();
}
inline void Msg_LeaveRoomAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void Msg_LeaveRoomAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:Msg_LeaveRoomAck.RetCode)
}

// -------------------------------------------------------------------

// Msg_StartRoomReq

// uint64 RoleID = 1;
inline void Msg_StartRoomReq::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_StartRoomReq::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_StartRoomReq::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_StartRoomReq.RoleID)
  return _internal_roleid();
}
inline void Msg_StartRoomReq::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void Msg_StartRoomReq::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:Msg_StartRoomReq.RoleID)
}

// uint64 RoomID = 2;
inline void Msg_StartRoomReq::clear_roomid() {
  roomid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_StartRoomReq::_internal_roomid() const {
  return roomid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_StartRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:Msg_StartRoomReq.RoomID)
  return _internal_roomid();
}
inline void Msg_StartRoomReq::_internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roomid_ = value;
}
inline void Msg_StartRoomReq::set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:Msg_StartRoomReq.RoomID)
}

// -------------------------------------------------------------------

// Msg_StartRoomAck

// uint32 RetCode = 1;
inline void Msg_StartRoomAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_StartRoomAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_StartRoomAck::retcode() const {
  // @@protoc_insertion_point(field_get:Msg_StartRoomAck.RetCode)
  return _internal_retcode();
}
inline void Msg_StartRoomAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void Msg_StartRoomAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:Msg_StartRoomAck.RetCode)
}

// -------------------------------------------------------------------

// Msg_RoomPlayerInfo

// uint64 RoleID = 1;
inline void Msg_RoomPlayerInfo::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_RoomPlayerInfo::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_RoomPlayerInfo::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_RoomPlayerInfo.RoleID)
  return _internal_roleid();
}
inline void Msg_RoomPlayerInfo::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void Msg_RoomPlayerInfo::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:Msg_RoomPlayerInfo.RoleID)
}

// int32 Level = 2;
inline void Msg_RoomPlayerInfo::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg_RoomPlayerInfo::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg_RoomPlayerInfo::level() const {
  // @@protoc_insertion_point(field_get:Msg_RoomPlayerInfo.Level)
  return _internal_level();
}
inline void Msg_RoomPlayerInfo::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void Msg_RoomPlayerInfo::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:Msg_RoomPlayerInfo.Level)
}

// string Name = 3;
inline void Msg_RoomPlayerInfo::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& Msg_RoomPlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:Msg_RoomPlayerInfo.Name)
  return _internal_name();
}
inline void Msg_RoomPlayerInfo::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:Msg_RoomPlayerInfo.Name)
}
inline std::string* Msg_RoomPlayerInfo::mutable_name() {
  // @@protoc_insertion_point(field_mutable:Msg_RoomPlayerInfo.Name)
  return _internal_mutable_name();
}
inline const std::string& Msg_RoomPlayerInfo::_internal_name() const {
  return name_.Get();
}
inline void Msg_RoomPlayerInfo::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void Msg_RoomPlayerInfo::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Msg_RoomPlayerInfo.Name)
}
inline void Msg_RoomPlayerInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:Msg_RoomPlayerInfo.Name)
}
inline void Msg_RoomPlayerInfo::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Msg_RoomPlayerInfo.Name)
}
inline std::string* Msg_RoomPlayerInfo::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* Msg_RoomPlayerInfo::release_name() {
  // @@protoc_insertion_point(field_release:Msg_RoomPlayerInfo.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Msg_RoomPlayerInfo::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Msg_RoomPlayerInfo.Name)
}
inline std::string* Msg_RoomPlayerInfo::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Msg_RoomPlayerInfo.Name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void Msg_RoomPlayerInfo::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Msg_RoomPlayerInfo.Name)
}

// int32 ActorID = 4;
inline void Msg_RoomPlayerInfo::clear_actorid() {
  actorid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg_RoomPlayerInfo::_internal_actorid() const {
  return actorid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg_RoomPlayerInfo::actorid() const {
  // @@protoc_insertion_point(field_get:Msg_RoomPlayerInfo.ActorID)
  return _internal_actorid();
}
inline void Msg_RoomPlayerInfo::_internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actorid_ = value;
}
inline void Msg_RoomPlayerInfo::set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actorid(value);
  // @@protoc_insertion_point(field_set:Msg_RoomPlayerInfo.ActorID)
}

// int32 MountID = 5;
inline void Msg_RoomPlayerInfo::clear_mountid() {
  mountid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg_RoomPlayerInfo::_internal_mountid() const {
  return mountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg_RoomPlayerInfo::mountid() const {
  // @@protoc_insertion_point(field_get:Msg_RoomPlayerInfo.MountID)
  return _internal_mountid();
}
inline void Msg_RoomPlayerInfo::_internal_set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mountid_ = value;
}
inline void Msg_RoomPlayerInfo::set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mountid(value);
  // @@protoc_insertion_point(field_set:Msg_RoomPlayerInfo.MountID)
}

// repeated int32 Equips = 6;
inline int Msg_RoomPlayerInfo::_internal_equips_size() const {
  return equips_.size();
}
inline int Msg_RoomPlayerInfo::equips_size() const {
  return _internal_equips_size();
}
inline void Msg_RoomPlayerInfo::clear_equips() {
  equips_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg_RoomPlayerInfo::_internal_equips(int index) const {
  return equips_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg_RoomPlayerInfo::equips(int index) const {
  // @@protoc_insertion_point(field_get:Msg_RoomPlayerInfo.Equips)
  return _internal_equips(index);
}
inline void Msg_RoomPlayerInfo::set_equips(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  equips_.Set(index, value);
  // @@protoc_insertion_point(field_set:Msg_RoomPlayerInfo.Equips)
}
inline void Msg_RoomPlayerInfo::_internal_add_equips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  equips_.Add(value);
}
inline void Msg_RoomPlayerInfo::add_equips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_equips(value);
  // @@protoc_insertion_point(field_add:Msg_RoomPlayerInfo.Equips)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Msg_RoomPlayerInfo::_internal_equips() const {
  return equips_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Msg_RoomPlayerInfo::equips() const {
  // @@protoc_insertion_point(field_list:Msg_RoomPlayerInfo.Equips)
  return _internal_equips();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Msg_RoomPlayerInfo::_internal_mutable_equips() {
  return &equips_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Msg_RoomPlayerInfo::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:Msg_RoomPlayerInfo.Equips)
  return _internal_mutable_equips();
}

// -------------------------------------------------------------------

// Msg_BroadRoomNotify

// repeated .Msg_RoomPlayerInfo PlayerList = 1;
inline int Msg_BroadRoomNotify::_internal_playerlist_size() const {
  return playerlist_.size();
}
inline int Msg_BroadRoomNotify::playerlist_size() const {
  return _internal_playerlist_size();
}
inline void Msg_BroadRoomNotify::clear_playerlist() {
  playerlist_.Clear();
}
inline ::Msg_RoomPlayerInfo* Msg_BroadRoomNotify::mutable_playerlist(int index) {
  // @@protoc_insertion_point(field_mutable:Msg_BroadRoomNotify.PlayerList)
  return playerlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Msg_RoomPlayerInfo >*
Msg_BroadRoomNotify::mutable_playerlist() {
  // @@protoc_insertion_point(field_mutable_list:Msg_BroadRoomNotify.PlayerList)
  return &playerlist_;
}
inline const ::Msg_RoomPlayerInfo& Msg_BroadRoomNotify::_internal_playerlist(int index) const {
  return playerlist_.Get(index);
}
inline const ::Msg_RoomPlayerInfo& Msg_BroadRoomNotify::playerlist(int index) const {
  // @@protoc_insertion_point(field_get:Msg_BroadRoomNotify.PlayerList)
  return _internal_playerlist(index);
}
inline ::Msg_RoomPlayerInfo* Msg_BroadRoomNotify::_internal_add_playerlist() {
  return playerlist_.Add();
}
inline ::Msg_RoomPlayerInfo* Msg_BroadRoomNotify::add_playerlist() {
  // @@protoc_insertion_point(field_add:Msg_BroadRoomNotify.PlayerList)
  return _internal_add_playerlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Msg_RoomPlayerInfo >&
Msg_BroadRoomNotify::playerlist() const {
  // @@protoc_insertion_point(field_list:Msg_BroadRoomNotify.PlayerList)
  return playerlist_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Msg_5fCopy_2eproto
