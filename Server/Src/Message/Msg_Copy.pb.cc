// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_Copy.proto

#include "Msg_Copy.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Msg_5fBase_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ItemData_Msg_5fBase_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Msg_5fCopy_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_RoomPlayerInfo_Msg_5fCopy_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Msg_5fCopy_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResultObject_Msg_5fCopy_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Msg_5fCopy_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResultPlayer_Msg_5fCopy_2eproto;
class ResultObjectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResultObject> _instance;
} _ResultObject_default_instance_;
class ResultPlayerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResultPlayer> _instance;
} _ResultPlayer_default_instance_;
class BattleResultNtyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BattleResultNty> _instance;
} _BattleResultNty_default_instance_;
class MainCopyReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MainCopyReq> _instance;
} _MainCopyReq_default_instance_;
class MainCopyAckDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MainCopyAck> _instance;
} _MainCopyAck_default_instance_;
class MainCopyResultNtyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MainCopyResultNty> _instance;
} _MainCopyResultNty_default_instance_;
class Msg_CreateRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_CreateRoomReq> _instance;
} _Msg_CreateRoomReq_default_instance_;
class Msg_CreateRoomAckDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_CreateRoomAck> _instance;
} _Msg_CreateRoomAck_default_instance_;
class Msg_JoinRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_JoinRoomReq> _instance;
} _Msg_JoinRoomReq_default_instance_;
class Msg_JoinRoomAckDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_JoinRoomAck> _instance;
} _Msg_JoinRoomAck_default_instance_;
class Msg_KickRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_KickRoomReq> _instance;
} _Msg_KickRoomReq_default_instance_;
class Msg_KickRoomAckDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_KickRoomAck> _instance;
} _Msg_KickRoomAck_default_instance_;
class Msg_LeaveRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_LeaveRoomReq> _instance;
} _Msg_LeaveRoomReq_default_instance_;
class Msg_LeaveRoomAckDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_LeaveRoomAck> _instance;
} _Msg_LeaveRoomAck_default_instance_;
class Msg_StartRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_StartRoomReq> _instance;
} _Msg_StartRoomReq_default_instance_;
class Msg_StartRoomAckDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_StartRoomAck> _instance;
} _Msg_StartRoomAck_default_instance_;
class Msg_RoomPlayerInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_RoomPlayerInfo> _instance;
} _Msg_RoomPlayerInfo_default_instance_;
class Msg_BroadRoomNotifyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg_BroadRoomNotify> _instance;
} _Msg_BroadRoomNotify_default_instance_;
static void InitDefaultsscc_info_BattleResultNty_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_BattleResultNty_default_instance_;
    new (ptr) ::BattleResultNty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BattleResultNty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BattleResultNty_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_BattleResultNty_Msg_5fCopy_2eproto}, {
      &scc_info_ResultPlayer_Msg_5fCopy_2eproto.base,
      &scc_info_ResultObject_Msg_5fCopy_2eproto.base,}};

static void InitDefaultsscc_info_MainCopyAck_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MainCopyAck_default_instance_;
    new (ptr) ::MainCopyAck();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MainCopyAck::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MainCopyAck_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MainCopyAck_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_MainCopyReq_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MainCopyReq_default_instance_;
    new (ptr) ::MainCopyReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MainCopyReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MainCopyReq_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MainCopyReq_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_MainCopyResultNty_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MainCopyResultNty_default_instance_;
    new (ptr) ::MainCopyResultNty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MainCopyResultNty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MainCopyResultNty_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MainCopyResultNty_Msg_5fCopy_2eproto}, {
      &scc_info_ItemData_Msg_5fBase_2eproto.base,}};

static void InitDefaultsscc_info_Msg_BroadRoomNotify_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_BroadRoomNotify_default_instance_;
    new (ptr) ::Msg_BroadRoomNotify();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_BroadRoomNotify::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Msg_BroadRoomNotify_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Msg_BroadRoomNotify_Msg_5fCopy_2eproto}, {
      &scc_info_Msg_RoomPlayerInfo_Msg_5fCopy_2eproto.base,}};

static void InitDefaultsscc_info_Msg_CreateRoomAck_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_CreateRoomAck_default_instance_;
    new (ptr) ::Msg_CreateRoomAck();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_CreateRoomAck::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_CreateRoomAck_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_CreateRoomAck_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_Msg_CreateRoomReq_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_CreateRoomReq_default_instance_;
    new (ptr) ::Msg_CreateRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_CreateRoomReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_CreateRoomReq_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_CreateRoomReq_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_Msg_JoinRoomAck_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_JoinRoomAck_default_instance_;
    new (ptr) ::Msg_JoinRoomAck();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_JoinRoomAck::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_JoinRoomAck_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_JoinRoomAck_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_Msg_JoinRoomReq_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_JoinRoomReq_default_instance_;
    new (ptr) ::Msg_JoinRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_JoinRoomReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_JoinRoomReq_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_JoinRoomReq_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_Msg_KickRoomAck_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_KickRoomAck_default_instance_;
    new (ptr) ::Msg_KickRoomAck();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_KickRoomAck::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_KickRoomAck_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_KickRoomAck_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_Msg_KickRoomReq_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_KickRoomReq_default_instance_;
    new (ptr) ::Msg_KickRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_KickRoomReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_KickRoomReq_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_KickRoomReq_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_Msg_LeaveRoomAck_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_LeaveRoomAck_default_instance_;
    new (ptr) ::Msg_LeaveRoomAck();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_LeaveRoomAck::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_LeaveRoomAck_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_LeaveRoomAck_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_Msg_LeaveRoomReq_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_LeaveRoomReq_default_instance_;
    new (ptr) ::Msg_LeaveRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_LeaveRoomReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_LeaveRoomReq_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_LeaveRoomReq_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_Msg_RoomPlayerInfo_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_RoomPlayerInfo_default_instance_;
    new (ptr) ::Msg_RoomPlayerInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_RoomPlayerInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_RoomPlayerInfo_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_RoomPlayerInfo_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_Msg_StartRoomAck_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_StartRoomAck_default_instance_;
    new (ptr) ::Msg_StartRoomAck();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_StartRoomAck::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_StartRoomAck_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_StartRoomAck_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_Msg_StartRoomReq_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Msg_StartRoomReq_default_instance_;
    new (ptr) ::Msg_StartRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Msg_StartRoomReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Msg_StartRoomReq_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Msg_StartRoomReq_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_ResultObject_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ResultObject_default_instance_;
    new (ptr) ::ResultObject();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResultObject::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResultObject_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResultObject_Msg_5fCopy_2eproto}, {}};

static void InitDefaultsscc_info_ResultPlayer_Msg_5fCopy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ResultPlayer_default_instance_;
    new (ptr) ::ResultPlayer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResultPlayer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResultPlayer_Msg_5fCopy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResultPlayer_Msg_5fCopy_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Msg_5fCopy_2eproto[18];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Msg_5fCopy_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Msg_5fCopy_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Msg_5fCopy_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResultObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ResultObject, objectid_),
  PROTOBUF_FIELD_OFFSET(::ResultObject, actorid_),
  PROTOBUF_FIELD_OFFSET(::ResultObject, objecttype_),
  PROTOBUF_FIELD_OFFSET(::ResultObject, result_),
  PROTOBUF_FIELD_OFFSET(::ResultObject, kill_),
  PROTOBUF_FIELD_OFFSET(::ResultObject, death_),
  PROTOBUF_FIELD_OFFSET(::ResultObject, heal_),
  PROTOBUF_FIELD_OFFSET(::ResultObject, damage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResultPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ResultPlayer, objectid_),
  PROTOBUF_FIELD_OFFSET(::ResultPlayer, actorid_),
  PROTOBUF_FIELD_OFFSET(::ResultPlayer, objecttype_),
  PROTOBUF_FIELD_OFFSET(::ResultPlayer, result_),
  PROTOBUF_FIELD_OFFSET(::ResultPlayer, kill_),
  PROTOBUF_FIELD_OFFSET(::ResultPlayer, death_),
  PROTOBUF_FIELD_OFFSET(::ResultPlayer, heal_),
  PROTOBUF_FIELD_OFFSET(::ResultPlayer, damage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BattleResultNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BattleResultNty, serverid_),
  PROTOBUF_FIELD_OFFSET(::BattleResultNty, copyguid_),
  PROTOBUF_FIELD_OFFSET(::BattleResultNty, copyid_),
  PROTOBUF_FIELD_OFFSET(::BattleResultNty, copytype_),
  PROTOBUF_FIELD_OFFSET(::BattleResultNty, lasttime_),
  PROTOBUF_FIELD_OFFSET(::BattleResultNty, playerlist_),
  PROTOBUF_FIELD_OFFSET(::BattleResultNty, objectlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MainCopyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MainCopyReq, copyid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MainCopyAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MainCopyAck, retcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MainCopyResultNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MainCopyResultNty, roleid_),
  PROTOBUF_FIELD_OFFSET(::MainCopyResultNty, copyid_),
  PROTOBUF_FIELD_OFFSET(::MainCopyResultNty, copyresult_),
  PROTOBUF_FIELD_OFFSET(::MainCopyResultNty, starnum_),
  PROTOBUF_FIELD_OFFSET(::MainCopyResultNty, lasttime_),
  PROTOBUF_FIELD_OFFSET(::MainCopyResultNty, itemlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_CreateRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_CreateRoomReq, roleid_),
  PROTOBUF_FIELD_OFFSET(::Msg_CreateRoomReq, copyid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_CreateRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_CreateRoomAck, retcode_),
  PROTOBUF_FIELD_OFFSET(::Msg_CreateRoomAck, roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_JoinRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_JoinRoomReq, roleid_),
  PROTOBUF_FIELD_OFFSET(::Msg_JoinRoomReq, roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_JoinRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_JoinRoomAck, retcode_),
  PROTOBUF_FIELD_OFFSET(::Msg_JoinRoomAck, roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_KickRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_KickRoomReq, roleid_),
  PROTOBUF_FIELD_OFFSET(::Msg_KickRoomReq, roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_KickRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_KickRoomAck, retcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_LeaveRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_LeaveRoomReq, roleid_),
  PROTOBUF_FIELD_OFFSET(::Msg_LeaveRoomReq, roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_LeaveRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_LeaveRoomAck, retcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_StartRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_StartRoomReq, roleid_),
  PROTOBUF_FIELD_OFFSET(::Msg_StartRoomReq, roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_StartRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_StartRoomAck, retcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_RoomPlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_RoomPlayerInfo, roleid_),
  PROTOBUF_FIELD_OFFSET(::Msg_RoomPlayerInfo, level_),
  PROTOBUF_FIELD_OFFSET(::Msg_RoomPlayerInfo, name_),
  PROTOBUF_FIELD_OFFSET(::Msg_RoomPlayerInfo, actorid_),
  PROTOBUF_FIELD_OFFSET(::Msg_RoomPlayerInfo, mountid_),
  PROTOBUF_FIELD_OFFSET(::Msg_RoomPlayerInfo, equips_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg_BroadRoomNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Msg_BroadRoomNotify, playerlist_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ResultObject)},
  { 13, -1, sizeof(::ResultPlayer)},
  { 26, -1, sizeof(::BattleResultNty)},
  { 38, -1, sizeof(::MainCopyReq)},
  { 44, -1, sizeof(::MainCopyAck)},
  { 50, -1, sizeof(::MainCopyResultNty)},
  { 61, -1, sizeof(::Msg_CreateRoomReq)},
  { 68, -1, sizeof(::Msg_CreateRoomAck)},
  { 75, -1, sizeof(::Msg_JoinRoomReq)},
  { 82, -1, sizeof(::Msg_JoinRoomAck)},
  { 89, -1, sizeof(::Msg_KickRoomReq)},
  { 96, -1, sizeof(::Msg_KickRoomAck)},
  { 102, -1, sizeof(::Msg_LeaveRoomReq)},
  { 109, -1, sizeof(::Msg_LeaveRoomAck)},
  { 115, -1, sizeof(::Msg_StartRoomReq)},
  { 122, -1, sizeof(::Msg_StartRoomAck)},
  { 128, -1, sizeof(::Msg_RoomPlayerInfo)},
  { 139, -1, sizeof(::Msg_BroadRoomNotify)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ResultObject_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ResultPlayer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_BattleResultNty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MainCopyReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MainCopyAck_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_MainCopyResultNty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_CreateRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_CreateRoomAck_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_JoinRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_JoinRoomAck_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_KickRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_KickRoomAck_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_LeaveRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_LeaveRoomAck_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_StartRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_StartRoomAck_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_RoomPlayerInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Msg_BroadRoomNotify_default_instance_),
};

const char descriptor_table_protodef_Msg_5fCopy_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016Msg_Copy.proto\032\016Msg_Base.proto\"\220\001\n\014Res"
  "ultObject\022\020\n\010ObjectID\030\001 \001(\004\022\017\n\007ActorID\030\002"
  " \001(\005\022\022\n\nObjectType\030\003 \001(\005\022\016\n\006Result\030\004 \001(\005"
  "\022\014\n\004Kill\030\005 \001(\005\022\r\n\005Death\030\006 \001(\005\022\014\n\004Heal\030\007 "
  "\001(\005\022\016\n\006Damage\030\010 \001(\005\"\220\001\n\014ResultPlayer\022\020\n\010"
  "ObjectID\030\001 \001(\004\022\017\n\007ActorID\030\002 \001(\005\022\022\n\nObjec"
  "tType\030\003 \001(\005\022\016\n\006Result\030\004 \001(\005\022\014\n\004Kill\030\005 \001("
  "\005\022\r\n\005Death\030\006 \001(\005\022\014\n\004Heal\030\007 \001(\005\022\016\n\006Damage"
  "\030\010 \001(\005\"\257\001\n\017BattleResultNty\022\020\n\010ServerID\030\001"
  " \001(\005\022\020\n\010CopyGuid\030\002 \001(\r\022\016\n\006CopyID\030\003 \001(\005\022\020"
  "\n\010CopyType\030\004 \001(\005\022\020\n\010LastTime\030\005 \001(\004\022!\n\nPl"
  "ayerList\030\006 \003(\0132\r.ResultPlayer\022!\n\nObjectL"
  "ist\030\007 \003(\0132\r.ResultObject\"\035\n\013MainCopyReq\022"
  "\016\n\006CopyID\030\001 \001(\005\"\036\n\013MainCopyAck\022\017\n\007RetCod"
  "e\030\001 \001(\r\"\207\001\n\021MainCopyResultNty\022\016\n\006RoleID\030"
  "\001 \001(\004\022\016\n\006CopyID\030\002 \001(\005\022\022\n\nCopyResult\030\003 \001("
  "\005\022\017\n\007StarNum\030\004 \001(\005\022\020\n\010LastTime\030\005 \001(\004\022\033\n\010"
  "ItemList\030\006 \003(\0132\t.ItemData\"3\n\021Msg_CreateR"
  "oomReq\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006CopyID\030\002 \001(\r\"4"
  "\n\021Msg_CreateRoomAck\022\017\n\007RetCode\030\001 \001(\r\022\016\n\006"
  "RoomID\030\002 \001(\004\"1\n\017Msg_JoinRoomReq\022\016\n\006RoleI"
  "D\030\001 \001(\004\022\016\n\006RoomID\030\002 \001(\004\"2\n\017Msg_JoinRoomA"
  "ck\022\017\n\007RetCode\030\001 \001(\r\022\016\n\006RoomID\030\002 \001(\004\"1\n\017M"
  "sg_KickRoomReq\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006RoomID"
  "\030\002 \001(\004\"\"\n\017Msg_KickRoomAck\022\017\n\007RetCode\030\001 \001"
  "(\r\"2\n\020Msg_LeaveRoomReq\022\016\n\006RoleID\030\001 \001(\004\022\016"
  "\n\006RoomID\030\002 \001(\004\"#\n\020Msg_LeaveRoomAck\022\017\n\007Re"
  "tCode\030\001 \001(\r\"2\n\020Msg_StartRoomReq\022\016\n\006RoleI"
  "D\030\001 \001(\004\022\016\n\006RoomID\030\002 \001(\004\"#\n\020Msg_StartRoom"
  "Ack\022\017\n\007RetCode\030\001 \001(\r\"s\n\022Msg_RoomPlayerIn"
  "fo\022\016\n\006RoleID\030\001 \001(\004\022\r\n\005Level\030\002 \001(\005\022\014\n\004Nam"
  "e\030\003 \001(\t\022\017\n\007ActorID\030\004 \001(\005\022\017\n\007MountID\030\005 \001("
  "\005\022\016\n\006Equips\030\006 \003(\005\">\n\023Msg_BroadRoomNotify"
  "\022\'\n\nPlayerList\030\001 \003(\0132\023.Msg_RoomPlayerInf"
  "ob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Msg_5fCopy_2eproto_deps[1] = {
  &::descriptor_table_Msg_5fBase_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Msg_5fCopy_2eproto_sccs[18] = {
  &scc_info_BattleResultNty_Msg_5fCopy_2eproto.base,
  &scc_info_MainCopyAck_Msg_5fCopy_2eproto.base,
  &scc_info_MainCopyReq_Msg_5fCopy_2eproto.base,
  &scc_info_MainCopyResultNty_Msg_5fCopy_2eproto.base,
  &scc_info_Msg_BroadRoomNotify_Msg_5fCopy_2eproto.base,
  &scc_info_Msg_CreateRoomAck_Msg_5fCopy_2eproto.base,
  &scc_info_Msg_CreateRoomReq_Msg_5fCopy_2eproto.base,
  &scc_info_Msg_JoinRoomAck_Msg_5fCopy_2eproto.base,
  &scc_info_Msg_JoinRoomReq_Msg_5fCopy_2eproto.base,
  &scc_info_Msg_KickRoomAck_Msg_5fCopy_2eproto.base,
  &scc_info_Msg_KickRoomReq_Msg_5fCopy_2eproto.base,
  &scc_info_Msg_LeaveRoomAck_Msg_5fCopy_2eproto.base,
  &scc_info_Msg_LeaveRoomReq_Msg_5fCopy_2eproto.base,
  &scc_info_Msg_RoomPlayerInfo_Msg_5fCopy_2eproto.base,
  &scc_info_Msg_StartRoomAck_Msg_5fCopy_2eproto.base,
  &scc_info_Msg_StartRoomReq_Msg_5fCopy_2eproto.base,
  &scc_info_ResultObject_Msg_5fCopy_2eproto.base,
  &scc_info_ResultPlayer_Msg_5fCopy_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Msg_5fCopy_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Msg_5fCopy_2eproto = {
  false, false, descriptor_table_protodef_Msg_5fCopy_2eproto, "Msg_Copy.proto", 1369,
  &descriptor_table_Msg_5fCopy_2eproto_once, descriptor_table_Msg_5fCopy_2eproto_sccs, descriptor_table_Msg_5fCopy_2eproto_deps, 18, 1,
  schemas, file_default_instances, TableStruct_Msg_5fCopy_2eproto::offsets,
  file_level_metadata_Msg_5fCopy_2eproto, 18, file_level_enum_descriptors_Msg_5fCopy_2eproto, file_level_service_descriptors_Msg_5fCopy_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Msg_5fCopy_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Msg_5fCopy_2eproto)), true);

// ===================================================================

void ResultObject::InitAsDefaultInstance() {
}
class ResultObject::_Internal {
 public:
};

ResultObject::ResultObject(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ResultObject)
}
ResultObject::ResultObject(const ResultObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&damage_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(damage_));
  // @@protoc_insertion_point(copy_constructor:ResultObject)
}

void ResultObject::SharedCtor() {
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&damage_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(damage_));
}

ResultObject::~ResultObject() {
  // @@protoc_insertion_point(destructor:ResultObject)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResultObject::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResultObject::ArenaDtor(void* object) {
  ResultObject* _this = reinterpret_cast< ResultObject* >(object);
  (void)_this;
}
void ResultObject::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResultObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResultObject& ResultObject::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResultObject_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void ResultObject::Clear() {
// @@protoc_insertion_point(message_clear_start:ResultObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&damage_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(damage_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultObject::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 ObjectID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ActorID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          actorid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ObjectType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          objecttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Result = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Kill = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          kill_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Death = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          death_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Heal = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          heal_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Damage = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          damage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResultObject::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResultObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // int32 ActorID = 2;
  if (this->actorid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_actorid(), target);
  }

  // int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_objecttype(), target);
  }

  // int32 Result = 4;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_result(), target);
  }

  // int32 Kill = 5;
  if (this->kill() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_kill(), target);
  }

  // int32 Death = 6;
  if (this->death() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_death(), target);
  }

  // int32 Heal = 7;
  if (this->heal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_heal(), target);
  }

  // int32 Damage = 8;
  if (this->damage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_damage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResultObject)
  return target;
}

size_t ResultObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResultObject)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  // int32 ActorID = 2;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actorid());
  }

  // int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_objecttype());
  }

  // int32 Result = 4;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  // int32 Kill = 5;
  if (this->kill() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kill());
  }

  // int32 Death = 6;
  if (this->death() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_death());
  }

  // int32 Heal = 7;
  if (this->heal() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_heal());
  }

  // int32 Damage = 8;
  if (this->damage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_damage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultObject::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResultObject)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultObject* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResultObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResultObject)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResultObject)
    MergeFrom(*source);
  }
}

void ResultObject::MergeFrom(const ResultObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResultObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (from.actorid() != 0) {
    _internal_set_actorid(from._internal_actorid());
  }
  if (from.objecttype() != 0) {
    _internal_set_objecttype(from._internal_objecttype());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
  if (from.kill() != 0) {
    _internal_set_kill(from._internal_kill());
  }
  if (from.death() != 0) {
    _internal_set_death(from._internal_death());
  }
  if (from.heal() != 0) {
    _internal_set_heal(from._internal_heal());
  }
  if (from.damage() != 0) {
    _internal_set_damage(from._internal_damage());
  }
}

void ResultObject::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResultObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultObject::CopyFrom(const ResultObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResultObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultObject::IsInitialized() const {
  return true;
}

void ResultObject::InternalSwap(ResultObject* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResultObject, damage_)
      + sizeof(ResultObject::damage_)
      - PROTOBUF_FIELD_OFFSET(ResultObject, objectid_)>(
          reinterpret_cast<char*>(&objectid_),
          reinterpret_cast<char*>(&other->objectid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultObject::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResultPlayer::InitAsDefaultInstance() {
}
class ResultPlayer::_Internal {
 public:
};

ResultPlayer::ResultPlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ResultPlayer)
}
ResultPlayer::ResultPlayer(const ResultPlayer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&damage_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(damage_));
  // @@protoc_insertion_point(copy_constructor:ResultPlayer)
}

void ResultPlayer::SharedCtor() {
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&damage_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(damage_));
}

ResultPlayer::~ResultPlayer() {
  // @@protoc_insertion_point(destructor:ResultPlayer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResultPlayer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResultPlayer::ArenaDtor(void* object) {
  ResultPlayer* _this = reinterpret_cast< ResultPlayer* >(object);
  (void)_this;
}
void ResultPlayer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResultPlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResultPlayer& ResultPlayer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResultPlayer_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void ResultPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:ResultPlayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&damage_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(damage_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultPlayer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 ObjectID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ActorID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          actorid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ObjectType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          objecttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Result = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Kill = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          kill_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Death = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          death_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Heal = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          heal_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Damage = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          damage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResultPlayer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResultPlayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // int32 ActorID = 2;
  if (this->actorid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_actorid(), target);
  }

  // int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_objecttype(), target);
  }

  // int32 Result = 4;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_result(), target);
  }

  // int32 Kill = 5;
  if (this->kill() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_kill(), target);
  }

  // int32 Death = 6;
  if (this->death() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_death(), target);
  }

  // int32 Heal = 7;
  if (this->heal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_heal(), target);
  }

  // int32 Damage = 8;
  if (this->damage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_damage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResultPlayer)
  return target;
}

size_t ResultPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResultPlayer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  // int32 ActorID = 2;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actorid());
  }

  // int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_objecttype());
  }

  // int32 Result = 4;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  // int32 Kill = 5;
  if (this->kill() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kill());
  }

  // int32 Death = 6;
  if (this->death() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_death());
  }

  // int32 Heal = 7;
  if (this->heal() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_heal());
  }

  // int32 Damage = 8;
  if (this->damage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_damage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultPlayer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResultPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultPlayer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResultPlayer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResultPlayer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResultPlayer)
    MergeFrom(*source);
  }
}

void ResultPlayer::MergeFrom(const ResultPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResultPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (from.actorid() != 0) {
    _internal_set_actorid(from._internal_actorid());
  }
  if (from.objecttype() != 0) {
    _internal_set_objecttype(from._internal_objecttype());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
  if (from.kill() != 0) {
    _internal_set_kill(from._internal_kill());
  }
  if (from.death() != 0) {
    _internal_set_death(from._internal_death());
  }
  if (from.heal() != 0) {
    _internal_set_heal(from._internal_heal());
  }
  if (from.damage() != 0) {
    _internal_set_damage(from._internal_damage());
  }
}

void ResultPlayer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResultPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultPlayer::CopyFrom(const ResultPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResultPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultPlayer::IsInitialized() const {
  return true;
}

void ResultPlayer::InternalSwap(ResultPlayer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResultPlayer, damage_)
      + sizeof(ResultPlayer::damage_)
      - PROTOBUF_FIELD_OFFSET(ResultPlayer, objectid_)>(
          reinterpret_cast<char*>(&objectid_),
          reinterpret_cast<char*>(&other->objectid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultPlayer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BattleResultNty::InitAsDefaultInstance() {
}
class BattleResultNty::_Internal {
 public:
};

BattleResultNty::BattleResultNty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  playerlist_(arena),
  objectlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:BattleResultNty)
}
BattleResultNty::BattleResultNty(const BattleResultNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      playerlist_(from.playerlist_),
      objectlist_(from.objectlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&lasttime_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(lasttime_));
  // @@protoc_insertion_point(copy_constructor:BattleResultNty)
}

void BattleResultNty::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BattleResultNty_Msg_5fCopy_2eproto.base);
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lasttime_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(lasttime_));
}

BattleResultNty::~BattleResultNty() {
  // @@protoc_insertion_point(destructor:BattleResultNty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BattleResultNty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BattleResultNty::ArenaDtor(void* object) {
  BattleResultNty* _this = reinterpret_cast< BattleResultNty* >(object);
  (void)_this;
}
void BattleResultNty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BattleResultNty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BattleResultNty& BattleResultNty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BattleResultNty_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void BattleResultNty::Clear() {
// @@protoc_insertion_point(message_clear_start:BattleResultNty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerlist_.Clear();
  objectlist_.Clear();
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lasttime_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(lasttime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BattleResultNty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 ServerID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          serverid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 CopyGuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          copyguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 CopyID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          copyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 CopyType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          copytype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 LastTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          lasttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ResultPlayer PlayerList = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_playerlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ResultObject ObjectList = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objectlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BattleResultNty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BattleResultNty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_serverid(), target);
  }

  // uint32 CopyGuid = 2;
  if (this->copyguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_copyguid(), target);
  }

  // int32 CopyID = 3;
  if (this->copyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_copyid(), target);
  }

  // int32 CopyType = 4;
  if (this->copytype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_copytype(), target);
  }

  // uint64 LastTime = 5;
  if (this->lasttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_lasttime(), target);
  }

  // repeated .ResultPlayer PlayerList = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_playerlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_playerlist(i), target, stream);
  }

  // repeated .ResultObject ObjectList = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_objectlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_objectlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BattleResultNty)
  return target;
}

size_t BattleResultNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BattleResultNty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ResultPlayer PlayerList = 6;
  total_size += 1UL * this->_internal_playerlist_size();
  for (const auto& msg : this->playerlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ResultObject ObjectList = 7;
  total_size += 1UL * this->_internal_objectlist_size();
  for (const auto& msg : this->objectlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_serverid());
  }

  // uint32 CopyGuid = 2;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_copyguid());
  }

  // int32 CopyID = 3;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_copyid());
  }

  // int32 CopyType = 4;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_copytype());
  }

  // uint64 LastTime = 5;
  if (this->lasttime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_lasttime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BattleResultNty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BattleResultNty)
  GOOGLE_DCHECK_NE(&from, this);
  const BattleResultNty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BattleResultNty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BattleResultNty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BattleResultNty)
    MergeFrom(*source);
  }
}

void BattleResultNty::MergeFrom(const BattleResultNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BattleResultNty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerlist_.MergeFrom(from.playerlist_);
  objectlist_.MergeFrom(from.objectlist_);
  if (from.serverid() != 0) {
    _internal_set_serverid(from._internal_serverid());
  }
  if (from.copyguid() != 0) {
    _internal_set_copyguid(from._internal_copyguid());
  }
  if (from.copyid() != 0) {
    _internal_set_copyid(from._internal_copyid());
  }
  if (from.copytype() != 0) {
    _internal_set_copytype(from._internal_copytype());
  }
  if (from.lasttime() != 0) {
    _internal_set_lasttime(from._internal_lasttime());
  }
}

void BattleResultNty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BattleResultNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleResultNty::CopyFrom(const BattleResultNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BattleResultNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleResultNty::IsInitialized() const {
  return true;
}

void BattleResultNty::InternalSwap(BattleResultNty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  playerlist_.InternalSwap(&other->playerlist_);
  objectlist_.InternalSwap(&other->objectlist_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BattleResultNty, lasttime_)
      + sizeof(BattleResultNty::lasttime_)
      - PROTOBUF_FIELD_OFFSET(BattleResultNty, serverid_)>(
          reinterpret_cast<char*>(&serverid_),
          reinterpret_cast<char*>(&other->serverid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BattleResultNty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MainCopyReq::InitAsDefaultInstance() {
}
class MainCopyReq::_Internal {
 public:
};

MainCopyReq::MainCopyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MainCopyReq)
}
MainCopyReq::MainCopyReq(const MainCopyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  copyid_ = from.copyid_;
  // @@protoc_insertion_point(copy_constructor:MainCopyReq)
}

void MainCopyReq::SharedCtor() {
  copyid_ = 0;
}

MainCopyReq::~MainCopyReq() {
  // @@protoc_insertion_point(destructor:MainCopyReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MainCopyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MainCopyReq::ArenaDtor(void* object) {
  MainCopyReq* _this = reinterpret_cast< MainCopyReq* >(object);
  (void)_this;
}
void MainCopyReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MainCopyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MainCopyReq& MainCopyReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MainCopyReq_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void MainCopyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MainCopyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  copyid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MainCopyReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 CopyID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          copyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MainCopyReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MainCopyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 CopyID = 1;
  if (this->copyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_copyid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MainCopyReq)
  return target;
}

size_t MainCopyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MainCopyReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 CopyID = 1;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_copyid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainCopyReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MainCopyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MainCopyReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MainCopyReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MainCopyReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MainCopyReq)
    MergeFrom(*source);
  }
}

void MainCopyReq::MergeFrom(const MainCopyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MainCopyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.copyid() != 0) {
    _internal_set_copyid(from._internal_copyid());
  }
}

void MainCopyReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MainCopyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainCopyReq::CopyFrom(const MainCopyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MainCopyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainCopyReq::IsInitialized() const {
  return true;
}

void MainCopyReq::InternalSwap(MainCopyReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(copyid_, other->copyid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MainCopyReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MainCopyAck::InitAsDefaultInstance() {
}
class MainCopyAck::_Internal {
 public:
};

MainCopyAck::MainCopyAck(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MainCopyAck)
}
MainCopyAck::MainCopyAck(const MainCopyAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:MainCopyAck)
}

void MainCopyAck::SharedCtor() {
  retcode_ = 0u;
}

MainCopyAck::~MainCopyAck() {
  // @@protoc_insertion_point(destructor:MainCopyAck)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MainCopyAck::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MainCopyAck::ArenaDtor(void* object) {
  MainCopyAck* _this = reinterpret_cast< MainCopyAck* >(object);
  (void)_this;
}
void MainCopyAck::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MainCopyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MainCopyAck& MainCopyAck::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MainCopyAck_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void MainCopyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:MainCopyAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MainCopyAck::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MainCopyAck::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MainCopyAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MainCopyAck)
  return target;
}

size_t MainCopyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MainCopyAck)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainCopyAck::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MainCopyAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MainCopyAck* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MainCopyAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MainCopyAck)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MainCopyAck)
    MergeFrom(*source);
  }
}

void MainCopyAck::MergeFrom(const MainCopyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MainCopyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void MainCopyAck::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MainCopyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainCopyAck::CopyFrom(const MainCopyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MainCopyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainCopyAck::IsInitialized() const {
  return true;
}

void MainCopyAck::InternalSwap(MainCopyAck* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MainCopyAck::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MainCopyResultNty::InitAsDefaultInstance() {
}
class MainCopyResultNty::_Internal {
 public:
};

void MainCopyResultNty::clear_itemlist() {
  itemlist_.Clear();
}
MainCopyResultNty::MainCopyResultNty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  itemlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MainCopyResultNty)
}
MainCopyResultNty::MainCopyResultNty(const MainCopyResultNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      itemlist_(from.itemlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&starnum_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(starnum_));
  // @@protoc_insertion_point(copy_constructor:MainCopyResultNty)
}

void MainCopyResultNty::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MainCopyResultNty_Msg_5fCopy_2eproto.base);
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&starnum_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(starnum_));
}

MainCopyResultNty::~MainCopyResultNty() {
  // @@protoc_insertion_point(destructor:MainCopyResultNty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MainCopyResultNty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MainCopyResultNty::ArenaDtor(void* object) {
  MainCopyResultNty* _this = reinterpret_cast< MainCopyResultNty* >(object);
  (void)_this;
}
void MainCopyResultNty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MainCopyResultNty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MainCopyResultNty& MainCopyResultNty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MainCopyResultNty_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void MainCopyResultNty::Clear() {
// @@protoc_insertion_point(message_clear_start:MainCopyResultNty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemlist_.Clear();
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&starnum_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(starnum_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MainCopyResultNty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 CopyID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          copyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 CopyResult = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          copyresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 StarNum = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          starnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 LastTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          lasttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ItemData ItemList = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_itemlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MainCopyResultNty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MainCopyResultNty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_copyid(), target);
  }

  // int32 CopyResult = 3;
  if (this->copyresult() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_copyresult(), target);
  }

  // int32 StarNum = 4;
  if (this->starnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_starnum(), target);
  }

  // uint64 LastTime = 5;
  if (this->lasttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_lasttime(), target);
  }

  // repeated .ItemData ItemList = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_itemlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_itemlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MainCopyResultNty)
  return target;
}

size_t MainCopyResultNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MainCopyResultNty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ItemData ItemList = 6;
  total_size += 1UL * this->_internal_itemlist_size();
  for (const auto& msg : this->itemlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roleid());
  }

  // int32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_copyid());
  }

  // int32 CopyResult = 3;
  if (this->copyresult() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_copyresult());
  }

  // uint64 LastTime = 5;
  if (this->lasttime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_lasttime());
  }

  // int32 StarNum = 4;
  if (this->starnum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_starnum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainCopyResultNty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MainCopyResultNty)
  GOOGLE_DCHECK_NE(&from, this);
  const MainCopyResultNty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MainCopyResultNty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MainCopyResultNty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MainCopyResultNty)
    MergeFrom(*source);
  }
}

void MainCopyResultNty::MergeFrom(const MainCopyResultNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MainCopyResultNty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  itemlist_.MergeFrom(from.itemlist_);
  if (from.roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.copyid() != 0) {
    _internal_set_copyid(from._internal_copyid());
  }
  if (from.copyresult() != 0) {
    _internal_set_copyresult(from._internal_copyresult());
  }
  if (from.lasttime() != 0) {
    _internal_set_lasttime(from._internal_lasttime());
  }
  if (from.starnum() != 0) {
    _internal_set_starnum(from._internal_starnum());
  }
}

void MainCopyResultNty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MainCopyResultNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainCopyResultNty::CopyFrom(const MainCopyResultNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MainCopyResultNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainCopyResultNty::IsInitialized() const {
  return true;
}

void MainCopyResultNty::InternalSwap(MainCopyResultNty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  itemlist_.InternalSwap(&other->itemlist_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MainCopyResultNty, starnum_)
      + sizeof(MainCopyResultNty::starnum_)
      - PROTOBUF_FIELD_OFFSET(MainCopyResultNty, roleid_)>(
          reinterpret_cast<char*>(&roleid_),
          reinterpret_cast<char*>(&other->roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MainCopyResultNty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_CreateRoomReq::InitAsDefaultInstance() {
}
class Msg_CreateRoomReq::_Internal {
 public:
};

Msg_CreateRoomReq::Msg_CreateRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_CreateRoomReq)
}
Msg_CreateRoomReq::Msg_CreateRoomReq(const Msg_CreateRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&copyid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(copyid_));
  // @@protoc_insertion_point(copy_constructor:Msg_CreateRoomReq)
}

void Msg_CreateRoomReq::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&copyid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(copyid_));
}

Msg_CreateRoomReq::~Msg_CreateRoomReq() {
  // @@protoc_insertion_point(destructor:Msg_CreateRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_CreateRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_CreateRoomReq::ArenaDtor(void* object) {
  Msg_CreateRoomReq* _this = reinterpret_cast< Msg_CreateRoomReq* >(object);
  (void)_this;
}
void Msg_CreateRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_CreateRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_CreateRoomReq& Msg_CreateRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_CreateRoomReq_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void Msg_CreateRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_CreateRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&copyid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(copyid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_CreateRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 CopyID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          copyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_CreateRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_CreateRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint32 CopyID = 2;
  if (this->copyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_copyid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_CreateRoomReq)
  return target;
}

size_t Msg_CreateRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_CreateRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roleid());
  }

  // uint32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_copyid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_CreateRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_CreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_CreateRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_CreateRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_CreateRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_CreateRoomReq)
    MergeFrom(*source);
  }
}

void Msg_CreateRoomReq::MergeFrom(const Msg_CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_CreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.copyid() != 0) {
    _internal_set_copyid(from._internal_copyid());
  }
}

void Msg_CreateRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_CreateRoomReq::CopyFrom(const Msg_CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_CreateRoomReq::IsInitialized() const {
  return true;
}

void Msg_CreateRoomReq::InternalSwap(Msg_CreateRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_CreateRoomReq, copyid_)
      + sizeof(Msg_CreateRoomReq::copyid_)
      - PROTOBUF_FIELD_OFFSET(Msg_CreateRoomReq, roleid_)>(
          reinterpret_cast<char*>(&roleid_),
          reinterpret_cast<char*>(&other->roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_CreateRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_CreateRoomAck::InitAsDefaultInstance() {
}
class Msg_CreateRoomAck::_Internal {
 public:
};

Msg_CreateRoomAck::Msg_CreateRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_CreateRoomAck)
}
Msg_CreateRoomAck::Msg_CreateRoomAck(const Msg_CreateRoomAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:Msg_CreateRoomAck)
}

void Msg_CreateRoomAck::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
}

Msg_CreateRoomAck::~Msg_CreateRoomAck() {
  // @@protoc_insertion_point(destructor:Msg_CreateRoomAck)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_CreateRoomAck::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_CreateRoomAck::ArenaDtor(void* object) {
  Msg_CreateRoomAck* _this = reinterpret_cast< Msg_CreateRoomAck* >(object);
  (void)_this;
}
void Msg_CreateRoomAck::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_CreateRoomAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_CreateRoomAck& Msg_CreateRoomAck::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_CreateRoomAck_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void Msg_CreateRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_CreateRoomAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_CreateRoomAck::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_CreateRoomAck::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_CreateRoomAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_CreateRoomAck)
  return target;
}

size_t Msg_CreateRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_CreateRoomAck)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_CreateRoomAck::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_CreateRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_CreateRoomAck* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_CreateRoomAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_CreateRoomAck)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_CreateRoomAck)
    MergeFrom(*source);
  }
}

void Msg_CreateRoomAck::MergeFrom(const Msg_CreateRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_CreateRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void Msg_CreateRoomAck::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_CreateRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_CreateRoomAck::CopyFrom(const Msg_CreateRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_CreateRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_CreateRoomAck::IsInitialized() const {
  return true;
}

void Msg_CreateRoomAck::InternalSwap(Msg_CreateRoomAck* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_CreateRoomAck, retcode_)
      + sizeof(Msg_CreateRoomAck::retcode_)
      - PROTOBUF_FIELD_OFFSET(Msg_CreateRoomAck, roomid_)>(
          reinterpret_cast<char*>(&roomid_),
          reinterpret_cast<char*>(&other->roomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_CreateRoomAck::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_JoinRoomReq::InitAsDefaultInstance() {
}
class Msg_JoinRoomReq::_Internal {
 public:
};

Msg_JoinRoomReq::Msg_JoinRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_JoinRoomReq)
}
Msg_JoinRoomReq::Msg_JoinRoomReq(const Msg_JoinRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:Msg_JoinRoomReq)
}

void Msg_JoinRoomReq::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(roomid_));
}

Msg_JoinRoomReq::~Msg_JoinRoomReq() {
  // @@protoc_insertion_point(destructor:Msg_JoinRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_JoinRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_JoinRoomReq::ArenaDtor(void* object) {
  Msg_JoinRoomReq* _this = reinterpret_cast< Msg_JoinRoomReq* >(object);
  (void)_this;
}
void Msg_JoinRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_JoinRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_JoinRoomReq& Msg_JoinRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_JoinRoomReq_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void Msg_JoinRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_JoinRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_JoinRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_JoinRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_JoinRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_JoinRoomReq)
  return target;
}

size_t Msg_JoinRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_JoinRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roleid());
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_JoinRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_JoinRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_JoinRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_JoinRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_JoinRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_JoinRoomReq)
    MergeFrom(*source);
  }
}

void Msg_JoinRoomReq::MergeFrom(const Msg_JoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_JoinRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
}

void Msg_JoinRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_JoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_JoinRoomReq::CopyFrom(const Msg_JoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_JoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_JoinRoomReq::IsInitialized() const {
  return true;
}

void Msg_JoinRoomReq::InternalSwap(Msg_JoinRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_JoinRoomReq, roomid_)
      + sizeof(Msg_JoinRoomReq::roomid_)
      - PROTOBUF_FIELD_OFFSET(Msg_JoinRoomReq, roleid_)>(
          reinterpret_cast<char*>(&roleid_),
          reinterpret_cast<char*>(&other->roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_JoinRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_JoinRoomAck::InitAsDefaultInstance() {
}
class Msg_JoinRoomAck::_Internal {
 public:
};

Msg_JoinRoomAck::Msg_JoinRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_JoinRoomAck)
}
Msg_JoinRoomAck::Msg_JoinRoomAck(const Msg_JoinRoomAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:Msg_JoinRoomAck)
}

void Msg_JoinRoomAck::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
}

Msg_JoinRoomAck::~Msg_JoinRoomAck() {
  // @@protoc_insertion_point(destructor:Msg_JoinRoomAck)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_JoinRoomAck::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_JoinRoomAck::ArenaDtor(void* object) {
  Msg_JoinRoomAck* _this = reinterpret_cast< Msg_JoinRoomAck* >(object);
  (void)_this;
}
void Msg_JoinRoomAck::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_JoinRoomAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_JoinRoomAck& Msg_JoinRoomAck::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_JoinRoomAck_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void Msg_JoinRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_JoinRoomAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_JoinRoomAck::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_JoinRoomAck::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_JoinRoomAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_JoinRoomAck)
  return target;
}

size_t Msg_JoinRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_JoinRoomAck)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_JoinRoomAck::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_JoinRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_JoinRoomAck* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_JoinRoomAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_JoinRoomAck)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_JoinRoomAck)
    MergeFrom(*source);
  }
}

void Msg_JoinRoomAck::MergeFrom(const Msg_JoinRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_JoinRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void Msg_JoinRoomAck::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_JoinRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_JoinRoomAck::CopyFrom(const Msg_JoinRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_JoinRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_JoinRoomAck::IsInitialized() const {
  return true;
}

void Msg_JoinRoomAck::InternalSwap(Msg_JoinRoomAck* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_JoinRoomAck, retcode_)
      + sizeof(Msg_JoinRoomAck::retcode_)
      - PROTOBUF_FIELD_OFFSET(Msg_JoinRoomAck, roomid_)>(
          reinterpret_cast<char*>(&roomid_),
          reinterpret_cast<char*>(&other->roomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_JoinRoomAck::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_KickRoomReq::InitAsDefaultInstance() {
}
class Msg_KickRoomReq::_Internal {
 public:
};

Msg_KickRoomReq::Msg_KickRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_KickRoomReq)
}
Msg_KickRoomReq::Msg_KickRoomReq(const Msg_KickRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:Msg_KickRoomReq)
}

void Msg_KickRoomReq::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(roomid_));
}

Msg_KickRoomReq::~Msg_KickRoomReq() {
  // @@protoc_insertion_point(destructor:Msg_KickRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_KickRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_KickRoomReq::ArenaDtor(void* object) {
  Msg_KickRoomReq* _this = reinterpret_cast< Msg_KickRoomReq* >(object);
  (void)_this;
}
void Msg_KickRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_KickRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_KickRoomReq& Msg_KickRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_KickRoomReq_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void Msg_KickRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_KickRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_KickRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_KickRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_KickRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_KickRoomReq)
  return target;
}

size_t Msg_KickRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_KickRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roleid());
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_KickRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_KickRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_KickRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_KickRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_KickRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_KickRoomReq)
    MergeFrom(*source);
  }
}

void Msg_KickRoomReq::MergeFrom(const Msg_KickRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_KickRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
}

void Msg_KickRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_KickRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_KickRoomReq::CopyFrom(const Msg_KickRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_KickRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_KickRoomReq::IsInitialized() const {
  return true;
}

void Msg_KickRoomReq::InternalSwap(Msg_KickRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_KickRoomReq, roomid_)
      + sizeof(Msg_KickRoomReq::roomid_)
      - PROTOBUF_FIELD_OFFSET(Msg_KickRoomReq, roleid_)>(
          reinterpret_cast<char*>(&roleid_),
          reinterpret_cast<char*>(&other->roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_KickRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_KickRoomAck::InitAsDefaultInstance() {
}
class Msg_KickRoomAck::_Internal {
 public:
};

Msg_KickRoomAck::Msg_KickRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_KickRoomAck)
}
Msg_KickRoomAck::Msg_KickRoomAck(const Msg_KickRoomAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:Msg_KickRoomAck)
}

void Msg_KickRoomAck::SharedCtor() {
  retcode_ = 0u;
}

Msg_KickRoomAck::~Msg_KickRoomAck() {
  // @@protoc_insertion_point(destructor:Msg_KickRoomAck)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_KickRoomAck::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_KickRoomAck::ArenaDtor(void* object) {
  Msg_KickRoomAck* _this = reinterpret_cast< Msg_KickRoomAck* >(object);
  (void)_this;
}
void Msg_KickRoomAck::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_KickRoomAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_KickRoomAck& Msg_KickRoomAck::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_KickRoomAck_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void Msg_KickRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_KickRoomAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_KickRoomAck::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_KickRoomAck::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_KickRoomAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_KickRoomAck)
  return target;
}

size_t Msg_KickRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_KickRoomAck)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_KickRoomAck::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_KickRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_KickRoomAck* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_KickRoomAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_KickRoomAck)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_KickRoomAck)
    MergeFrom(*source);
  }
}

void Msg_KickRoomAck::MergeFrom(const Msg_KickRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_KickRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void Msg_KickRoomAck::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_KickRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_KickRoomAck::CopyFrom(const Msg_KickRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_KickRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_KickRoomAck::IsInitialized() const {
  return true;
}

void Msg_KickRoomAck::InternalSwap(Msg_KickRoomAck* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_KickRoomAck::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_LeaveRoomReq::InitAsDefaultInstance() {
}
class Msg_LeaveRoomReq::_Internal {
 public:
};

Msg_LeaveRoomReq::Msg_LeaveRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_LeaveRoomReq)
}
Msg_LeaveRoomReq::Msg_LeaveRoomReq(const Msg_LeaveRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:Msg_LeaveRoomReq)
}

void Msg_LeaveRoomReq::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(roomid_));
}

Msg_LeaveRoomReq::~Msg_LeaveRoomReq() {
  // @@protoc_insertion_point(destructor:Msg_LeaveRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_LeaveRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_LeaveRoomReq::ArenaDtor(void* object) {
  Msg_LeaveRoomReq* _this = reinterpret_cast< Msg_LeaveRoomReq* >(object);
  (void)_this;
}
void Msg_LeaveRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_LeaveRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_LeaveRoomReq& Msg_LeaveRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_LeaveRoomReq_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void Msg_LeaveRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_LeaveRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_LeaveRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_LeaveRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_LeaveRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_LeaveRoomReq)
  return target;
}

size_t Msg_LeaveRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_LeaveRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roleid());
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_LeaveRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_LeaveRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_LeaveRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_LeaveRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_LeaveRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_LeaveRoomReq)
    MergeFrom(*source);
  }
}

void Msg_LeaveRoomReq::MergeFrom(const Msg_LeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_LeaveRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
}

void Msg_LeaveRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_LeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_LeaveRoomReq::CopyFrom(const Msg_LeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_LeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_LeaveRoomReq::IsInitialized() const {
  return true;
}

void Msg_LeaveRoomReq::InternalSwap(Msg_LeaveRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_LeaveRoomReq, roomid_)
      + sizeof(Msg_LeaveRoomReq::roomid_)
      - PROTOBUF_FIELD_OFFSET(Msg_LeaveRoomReq, roleid_)>(
          reinterpret_cast<char*>(&roleid_),
          reinterpret_cast<char*>(&other->roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_LeaveRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_LeaveRoomAck::InitAsDefaultInstance() {
}
class Msg_LeaveRoomAck::_Internal {
 public:
};

Msg_LeaveRoomAck::Msg_LeaveRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_LeaveRoomAck)
}
Msg_LeaveRoomAck::Msg_LeaveRoomAck(const Msg_LeaveRoomAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:Msg_LeaveRoomAck)
}

void Msg_LeaveRoomAck::SharedCtor() {
  retcode_ = 0u;
}

Msg_LeaveRoomAck::~Msg_LeaveRoomAck() {
  // @@protoc_insertion_point(destructor:Msg_LeaveRoomAck)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_LeaveRoomAck::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_LeaveRoomAck::ArenaDtor(void* object) {
  Msg_LeaveRoomAck* _this = reinterpret_cast< Msg_LeaveRoomAck* >(object);
  (void)_this;
}
void Msg_LeaveRoomAck::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_LeaveRoomAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_LeaveRoomAck& Msg_LeaveRoomAck::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_LeaveRoomAck_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void Msg_LeaveRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_LeaveRoomAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_LeaveRoomAck::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_LeaveRoomAck::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_LeaveRoomAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_LeaveRoomAck)
  return target;
}

size_t Msg_LeaveRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_LeaveRoomAck)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_LeaveRoomAck::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_LeaveRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_LeaveRoomAck* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_LeaveRoomAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_LeaveRoomAck)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_LeaveRoomAck)
    MergeFrom(*source);
  }
}

void Msg_LeaveRoomAck::MergeFrom(const Msg_LeaveRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_LeaveRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void Msg_LeaveRoomAck::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_LeaveRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_LeaveRoomAck::CopyFrom(const Msg_LeaveRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_LeaveRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_LeaveRoomAck::IsInitialized() const {
  return true;
}

void Msg_LeaveRoomAck::InternalSwap(Msg_LeaveRoomAck* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_LeaveRoomAck::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_StartRoomReq::InitAsDefaultInstance() {
}
class Msg_StartRoomReq::_Internal {
 public:
};

Msg_StartRoomReq::Msg_StartRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_StartRoomReq)
}
Msg_StartRoomReq::Msg_StartRoomReq(const Msg_StartRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:Msg_StartRoomReq)
}

void Msg_StartRoomReq::SharedCtor() {
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(roomid_));
}

Msg_StartRoomReq::~Msg_StartRoomReq() {
  // @@protoc_insertion_point(destructor:Msg_StartRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_StartRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_StartRoomReq::ArenaDtor(void* object) {
  Msg_StartRoomReq* _this = reinterpret_cast< Msg_StartRoomReq* >(object);
  (void)_this;
}
void Msg_StartRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_StartRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_StartRoomReq& Msg_StartRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_StartRoomReq_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void Msg_StartRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_StartRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_StartRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_StartRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_StartRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_StartRoomReq)
  return target;
}

size_t Msg_StartRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_StartRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roleid());
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_StartRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_StartRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_StartRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_StartRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_StartRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_StartRoomReq)
    MergeFrom(*source);
  }
}

void Msg_StartRoomReq::MergeFrom(const Msg_StartRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_StartRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
}

void Msg_StartRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_StartRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_StartRoomReq::CopyFrom(const Msg_StartRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_StartRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_StartRoomReq::IsInitialized() const {
  return true;
}

void Msg_StartRoomReq::InternalSwap(Msg_StartRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_StartRoomReq, roomid_)
      + sizeof(Msg_StartRoomReq::roomid_)
      - PROTOBUF_FIELD_OFFSET(Msg_StartRoomReq, roleid_)>(
          reinterpret_cast<char*>(&roleid_),
          reinterpret_cast<char*>(&other->roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_StartRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_StartRoomAck::InitAsDefaultInstance() {
}
class Msg_StartRoomAck::_Internal {
 public:
};

Msg_StartRoomAck::Msg_StartRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_StartRoomAck)
}
Msg_StartRoomAck::Msg_StartRoomAck(const Msg_StartRoomAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:Msg_StartRoomAck)
}

void Msg_StartRoomAck::SharedCtor() {
  retcode_ = 0u;
}

Msg_StartRoomAck::~Msg_StartRoomAck() {
  // @@protoc_insertion_point(destructor:Msg_StartRoomAck)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_StartRoomAck::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_StartRoomAck::ArenaDtor(void* object) {
  Msg_StartRoomAck* _this = reinterpret_cast< Msg_StartRoomAck* >(object);
  (void)_this;
}
void Msg_StartRoomAck::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_StartRoomAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_StartRoomAck& Msg_StartRoomAck::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_StartRoomAck_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void Msg_StartRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_StartRoomAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_StartRoomAck::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_StartRoomAck::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_StartRoomAck)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_StartRoomAck)
  return target;
}

size_t Msg_StartRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_StartRoomAck)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_StartRoomAck::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_StartRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_StartRoomAck* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_StartRoomAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_StartRoomAck)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_StartRoomAck)
    MergeFrom(*source);
  }
}

void Msg_StartRoomAck::MergeFrom(const Msg_StartRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_StartRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void Msg_StartRoomAck::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_StartRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_StartRoomAck::CopyFrom(const Msg_StartRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_StartRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_StartRoomAck::IsInitialized() const {
  return true;
}

void Msg_StartRoomAck::InternalSwap(Msg_StartRoomAck* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_StartRoomAck::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_RoomPlayerInfo::InitAsDefaultInstance() {
}
class Msg_RoomPlayerInfo::_Internal {
 public:
};

Msg_RoomPlayerInfo::Msg_RoomPlayerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  equips_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_RoomPlayerInfo)
}
Msg_RoomPlayerInfo::Msg_RoomPlayerInfo(const Msg_RoomPlayerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      equips_(from.equips_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mountid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(mountid_));
  // @@protoc_insertion_point(copy_constructor:Msg_RoomPlayerInfo)
}

void Msg_RoomPlayerInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Msg_RoomPlayerInfo_Msg_5fCopy_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mountid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(mountid_));
}

Msg_RoomPlayerInfo::~Msg_RoomPlayerInfo() {
  // @@protoc_insertion_point(destructor:Msg_RoomPlayerInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_RoomPlayerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Msg_RoomPlayerInfo::ArenaDtor(void* object) {
  Msg_RoomPlayerInfo* _this = reinterpret_cast< Msg_RoomPlayerInfo* >(object);
  (void)_this;
}
void Msg_RoomPlayerInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_RoomPlayerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_RoomPlayerInfo& Msg_RoomPlayerInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_RoomPlayerInfo_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void Msg_RoomPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_RoomPlayerInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  equips_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mountid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(mountid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_RoomPlayerInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Msg_RoomPlayerInfo.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ActorID = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          actorid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 MountID = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          mountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 Equips = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_equips(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48) {
          _internal_add_equips(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_RoomPlayerInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_RoomPlayerInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_level(), target);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Msg_RoomPlayerInfo.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // int32 ActorID = 4;
  if (this->actorid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_actorid(), target);
  }

  // int32 MountID = 5;
  if (this->mountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_mountid(), target);
  }

  // repeated int32 Equips = 6;
  {
    int byte_size = _equips_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          6, _internal_equips(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_RoomPlayerInfo)
  return target;
}

size_t Msg_RoomPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_RoomPlayerInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 Equips = 6;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->equips_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _equips_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roleid());
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  // int32 ActorID = 4;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_actorid());
  }

  // int32 MountID = 5;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_RoomPlayerInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_RoomPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_RoomPlayerInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_RoomPlayerInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_RoomPlayerInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_RoomPlayerInfo)
    MergeFrom(*source);
  }
}

void Msg_RoomPlayerInfo::MergeFrom(const Msg_RoomPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_RoomPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  equips_.MergeFrom(from.equips_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.actorid() != 0) {
    _internal_set_actorid(from._internal_actorid());
  }
  if (from.mountid() != 0) {
    _internal_set_mountid(from._internal_mountid());
  }
}

void Msg_RoomPlayerInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_RoomPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_RoomPlayerInfo::CopyFrom(const Msg_RoomPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_RoomPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_RoomPlayerInfo::IsInitialized() const {
  return true;
}

void Msg_RoomPlayerInfo::InternalSwap(Msg_RoomPlayerInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  equips_.InternalSwap(&other->equips_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_RoomPlayerInfo, mountid_)
      + sizeof(Msg_RoomPlayerInfo::mountid_)
      - PROTOBUF_FIELD_OFFSET(Msg_RoomPlayerInfo, roleid_)>(
          reinterpret_cast<char*>(&roleid_),
          reinterpret_cast<char*>(&other->roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_RoomPlayerInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Msg_BroadRoomNotify::InitAsDefaultInstance() {
}
class Msg_BroadRoomNotify::_Internal {
 public:
};

Msg_BroadRoomNotify::Msg_BroadRoomNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  playerlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Msg_BroadRoomNotify)
}
Msg_BroadRoomNotify::Msg_BroadRoomNotify(const Msg_BroadRoomNotify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      playerlist_(from.playerlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Msg_BroadRoomNotify)
}

void Msg_BroadRoomNotify::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Msg_BroadRoomNotify_Msg_5fCopy_2eproto.base);
}

Msg_BroadRoomNotify::~Msg_BroadRoomNotify() {
  // @@protoc_insertion_point(destructor:Msg_BroadRoomNotify)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg_BroadRoomNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Msg_BroadRoomNotify::ArenaDtor(void* object) {
  Msg_BroadRoomNotify* _this = reinterpret_cast< Msg_BroadRoomNotify* >(object);
  (void)_this;
}
void Msg_BroadRoomNotify::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_BroadRoomNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg_BroadRoomNotify& Msg_BroadRoomNotify::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_BroadRoomNotify_Msg_5fCopy_2eproto.base);
  return *internal_default_instance();
}


void Msg_BroadRoomNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_BroadRoomNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_BroadRoomNotify::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Msg_RoomPlayerInfo PlayerList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_playerlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg_BroadRoomNotify::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_BroadRoomNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Msg_RoomPlayerInfo PlayerList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_playerlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_playerlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_BroadRoomNotify)
  return target;
}

size_t Msg_BroadRoomNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_BroadRoomNotify)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Msg_RoomPlayerInfo PlayerList = 1;
  total_size += 1UL * this->_internal_playerlist_size();
  for (const auto& msg : this->playerlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg_BroadRoomNotify::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_BroadRoomNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_BroadRoomNotify* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg_BroadRoomNotify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_BroadRoomNotify)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_BroadRoomNotify)
    MergeFrom(*source);
  }
}

void Msg_BroadRoomNotify::MergeFrom(const Msg_BroadRoomNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_BroadRoomNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerlist_.MergeFrom(from.playerlist_);
}

void Msg_BroadRoomNotify::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_BroadRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_BroadRoomNotify::CopyFrom(const Msg_BroadRoomNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_BroadRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_BroadRoomNotify::IsInitialized() const {
  return true;
}

void Msg_BroadRoomNotify::InternalSwap(Msg_BroadRoomNotify* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  playerlist_.InternalSwap(&other->playerlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_BroadRoomNotify::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ResultObject* Arena::CreateMaybeMessage< ::ResultObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResultObject >(arena);
}
template<> PROTOBUF_NOINLINE ::ResultPlayer* Arena::CreateMaybeMessage< ::ResultPlayer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResultPlayer >(arena);
}
template<> PROTOBUF_NOINLINE ::BattleResultNty* Arena::CreateMaybeMessage< ::BattleResultNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::BattleResultNty >(arena);
}
template<> PROTOBUF_NOINLINE ::MainCopyReq* Arena::CreateMaybeMessage< ::MainCopyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MainCopyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::MainCopyAck* Arena::CreateMaybeMessage< ::MainCopyAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MainCopyAck >(arena);
}
template<> PROTOBUF_NOINLINE ::MainCopyResultNty* Arena::CreateMaybeMessage< ::MainCopyResultNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MainCopyResultNty >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_CreateRoomReq* Arena::CreateMaybeMessage< ::Msg_CreateRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_CreateRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_CreateRoomAck* Arena::CreateMaybeMessage< ::Msg_CreateRoomAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_CreateRoomAck >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_JoinRoomReq* Arena::CreateMaybeMessage< ::Msg_JoinRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_JoinRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_JoinRoomAck* Arena::CreateMaybeMessage< ::Msg_JoinRoomAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_JoinRoomAck >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_KickRoomReq* Arena::CreateMaybeMessage< ::Msg_KickRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_KickRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_KickRoomAck* Arena::CreateMaybeMessage< ::Msg_KickRoomAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_KickRoomAck >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_LeaveRoomReq* Arena::CreateMaybeMessage< ::Msg_LeaveRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_LeaveRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_LeaveRoomAck* Arena::CreateMaybeMessage< ::Msg_LeaveRoomAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_LeaveRoomAck >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_StartRoomReq* Arena::CreateMaybeMessage< ::Msg_StartRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_StartRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_StartRoomAck* Arena::CreateMaybeMessage< ::Msg_StartRoomAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_StartRoomAck >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_RoomPlayerInfo* Arena::CreateMaybeMessage< ::Msg_RoomPlayerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_RoomPlayerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Msg_BroadRoomNotify* Arena::CreateMaybeMessage< ::Msg_BroadRoomNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg_BroadRoomNotify >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
