// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_Game.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Msg_5fGame_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Msg_5fGame_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Msg_Base.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Msg_5fGame_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Msg_5fGame_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[80]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Msg_5fGame_2eproto;
class AbortSceneAck;
class AbortSceneAckDefaultTypeInternal;
extern AbortSceneAckDefaultTypeInternal _AbortSceneAck_default_instance_;
class AbortSceneNty;
class AbortSceneNtyDefaultTypeInternal;
extern AbortSceneNtyDefaultTypeInternal _AbortSceneNty_default_instance_;
class AbortSceneReq;
class AbortSceneReqDefaultTypeInternal;
extern AbortSceneReqDefaultTypeInternal _AbortSceneReq_default_instance_;
class BackToCityAck;
class BackToCityAckDefaultTypeInternal;
extern BackToCityAckDefaultTypeInternal _BackToCityAck_default_instance_;
class BackToCityReq;
class BackToCityReqDefaultTypeInternal;
extern BackToCityReqDefaultTypeInternal _BackToCityReq_default_instance_;
class BroadMessageNotify;
class BroadMessageNotifyDefaultTypeInternal;
extern BroadMessageNotifyDefaultTypeInternal _BroadMessageNotify_default_instance_;
class ChatMessageAck;
class ChatMessageAckDefaultTypeInternal;
extern ChatMessageAckDefaultTypeInternal _ChatMessageAck_default_instance_;
class ChatMessageNty;
class ChatMessageNtyDefaultTypeInternal;
extern ChatMessageNtyDefaultTypeInternal _ChatMessageNty_default_instance_;
class ChatMessageReq;
class ChatMessageReqDefaultTypeInternal;
extern ChatMessageReqDefaultTypeInternal _ChatMessageReq_default_instance_;
class CommonAck;
class CommonAckDefaultTypeInternal;
extern CommonAckDefaultTypeInternal _CommonAck_default_instance_;
class CommonReq;
class CommonReqDefaultTypeInternal;
extern CommonReqDefaultTypeInternal _CommonReq_default_instance_;
class CopyInsItem;
class CopyInsItemDefaultTypeInternal;
extern CopyInsItemDefaultTypeInternal _CopyInsItem_default_instance_;
class CopyReportReq;
class CopyReportReqDefaultTypeInternal;
extern CopyReportReqDefaultTypeInternal _CopyReportReq_default_instance_;
class CreateNewSceneAck;
class CreateNewSceneAckDefaultTypeInternal;
extern CreateNewSceneAckDefaultTypeInternal _CreateNewSceneAck_default_instance_;
class CreateNewSceneReq;
class CreateNewSceneReqDefaultTypeInternal;
extern CreateNewSceneReqDefaultTypeInternal _CreateNewSceneReq_default_instance_;
class EnterSceneAck;
class EnterSceneAckDefaultTypeInternal;
extern EnterSceneAckDefaultTypeInternal _EnterSceneAck_default_instance_;
class EnterSceneReq;
class EnterSceneReqDefaultTypeInternal;
extern EnterSceneReqDefaultTypeInternal _EnterSceneReq_default_instance_;
class GmStopServerAck;
class GmStopServerAckDefaultTypeInternal;
extern GmStopServerAckDefaultTypeInternal _GmStopServerAck_default_instance_;
class GmStopServerReq;
class GmStopServerReqDefaultTypeInternal;
extern GmStopServerReqDefaultTypeInternal _GmStopServerReq_default_instance_;
class HitEffectItem;
class HitEffectItemDefaultTypeInternal;
extern HitEffectItemDefaultTypeInternal _HitEffectItem_default_instance_;
class HitEffectNtf;
class HitEffectNtfDefaultTypeInternal;
extern HitEffectNtfDefaultTypeInternal _HitEffectNtf_default_instance_;
class LeaveSceneAck;
class LeaveSceneAckDefaultTypeInternal;
extern LeaveSceneAckDefaultTypeInternal _LeaveSceneAck_default_instance_;
class LeaveSceneReq;
class LeaveSceneReqDefaultTypeInternal;
extern LeaveSceneReqDefaultTypeInternal _LeaveSceneReq_default_instance_;
class LogicRegToDbSvrAck;
class LogicRegToDbSvrAckDefaultTypeInternal;
extern LogicRegToDbSvrAckDefaultTypeInternal _LogicRegToDbSvrAck_default_instance_;
class LogicRegToDbSvrReq;
class LogicRegToDbSvrReqDefaultTypeInternal;
extern LogicRegToDbSvrReqDefaultTypeInternal _LogicRegToDbSvrReq_default_instance_;
class LogicRegToLoginAck;
class LogicRegToLoginAckDefaultTypeInternal;
extern LogicRegToLoginAckDefaultTypeInternal _LogicRegToLoginAck_default_instance_;
class LogicRegToLoginReq;
class LogicRegToLoginReqDefaultTypeInternal;
extern LogicRegToLoginReqDefaultTypeInternal _LogicRegToLoginReq_default_instance_;
class LogicUpdateInfoAck;
class LogicUpdateInfoAckDefaultTypeInternal;
extern LogicUpdateInfoAckDefaultTypeInternal _LogicUpdateInfoAck_default_instance_;
class LogicUpdateInfoReq;
class LogicUpdateInfoReqDefaultTypeInternal;
extern LogicUpdateInfoReqDefaultTypeInternal _LogicUpdateInfoReq_default_instance_;
class MsgGetRandomNameAck;
class MsgGetRandomNameAckDefaultTypeInternal;
extern MsgGetRandomNameAckDefaultTypeInternal _MsgGetRandomNameAck_default_instance_;
class MsgGetRandomNameReq;
class MsgGetRandomNameReqDefaultTypeInternal;
extern MsgGetRandomNameReqDefaultTypeInternal _MsgGetRandomNameReq_default_instance_;
class Msg_DbErrorCountNty;
class Msg_DbErrorCountNtyDefaultTypeInternal;
extern Msg_DbErrorCountNtyDefaultTypeInternal _Msg_DbErrorCountNty_default_instance_;
class Msg_GameParamAck;
class Msg_GameParamAckDefaultTypeInternal;
extern Msg_GameParamAckDefaultTypeInternal _Msg_GameParamAck_default_instance_;
class Msg_GameParamReq;
class Msg_GameParamReqDefaultTypeInternal;
extern Msg_GameParamReqDefaultTypeInternal _Msg_GameParamReq_default_instance_;
class Msg_GiftCodeAck;
class Msg_GiftCodeAckDefaultTypeInternal;
extern Msg_GiftCodeAckDefaultTypeInternal _Msg_GiftCodeAck_default_instance_;
class Msg_GiftCodeReq;
class Msg_GiftCodeReqDefaultTypeInternal;
extern Msg_GiftCodeReqDefaultTypeInternal _Msg_GiftCodeReq_default_instance_;
class NearByRoleItem;
class NearByRoleItemDefaultTypeInternal;
extern NearByRoleItemDefaultTypeInternal _NearByRoleItem_default_instance_;
class NotifyIntoScene;
class NotifyIntoSceneDefaultTypeInternal;
extern NotifyIntoSceneDefaultTypeInternal _NotifyIntoScene_default_instance_;
class ObjectChangeNotify;
class ObjectChangeNotifyDefaultTypeInternal;
extern ObjectChangeNotifyDefaultTypeInternal _ObjectChangeNotify_default_instance_;
class RemoveConnectNty;
class RemoveConnectNtyDefaultTypeInternal;
extern RemoveConnectNtyDefaultTypeInternal _RemoveConnectNty_default_instance_;
class RoleDisconnectAck;
class RoleDisconnectAckDefaultTypeInternal;
extern RoleDisconnectAckDefaultTypeInternal _RoleDisconnectAck_default_instance_;
class RoleDisconnectReq;
class RoleDisconnectReqDefaultTypeInternal;
extern RoleDisconnectReqDefaultTypeInternal _RoleDisconnectReq_default_instance_;
class RoleReconnectAck;
class RoleReconnectAckDefaultTypeInternal;
extern RoleReconnectAckDefaultTypeInternal _RoleReconnectAck_default_instance_;
class RoleReconnectReq;
class RoleReconnectReqDefaultTypeInternal;
extern RoleReconnectReqDefaultTypeInternal _RoleReconnectReq_default_instance_;
class SetupEquipAck;
class SetupEquipAckDefaultTypeInternal;
extern SetupEquipAckDefaultTypeInternal _SetupEquipAck_default_instance_;
class SetupEquipReq;
class SetupEquipReqDefaultTypeInternal;
extern SetupEquipReqDefaultTypeInternal _SetupEquipReq_default_instance_;
class SetupGemAck;
class SetupGemAckDefaultTypeInternal;
extern SetupGemAckDefaultTypeInternal _SetupGemAck_default_instance_;
class SetupGemReq;
class SetupGemReqDefaultTypeInternal;
extern SetupGemReqDefaultTypeInternal _SetupGemReq_default_instance_;
class SetupMountAck;
class SetupMountAckDefaultTypeInternal;
extern SetupMountAckDefaultTypeInternal _SetupMountAck_default_instance_;
class SetupMountReq;
class SetupMountReqDefaultTypeInternal;
extern SetupMountReqDefaultTypeInternal _SetupMountReq_default_instance_;
class SetupPartnerAck;
class SetupPartnerAckDefaultTypeInternal;
extern SetupPartnerAckDefaultTypeInternal _SetupPartnerAck_default_instance_;
class SetupPartnerReq;
class SetupPartnerReqDefaultTypeInternal;
extern SetupPartnerReqDefaultTypeInternal _SetupPartnerReq_default_instance_;
class SetupPetAck;
class SetupPetAckDefaultTypeInternal;
extern SetupPetAckDefaultTypeInternal _SetupPetAck_default_instance_;
class SetupPetReq;
class SetupPetReqDefaultTypeInternal;
extern SetupPetReqDefaultTypeInternal _SetupPetReq_default_instance_;
class StoreBuyAck;
class StoreBuyAckDefaultTypeInternal;
extern StoreBuyAckDefaultTypeInternal _StoreBuyAck_default_instance_;
class StoreBuyReq;
class StoreBuyReqDefaultTypeInternal;
extern StoreBuyReqDefaultTypeInternal _StoreBuyReq_default_instance_;
class SvrRegToSvrAck;
class SvrRegToSvrAckDefaultTypeInternal;
extern SvrRegToSvrAckDefaultTypeInternal _SvrRegToSvrAck_default_instance_;
class SvrRegToSvrReq;
class SvrRegToSvrReqDefaultTypeInternal;
extern SvrRegToSvrReqDefaultTypeInternal _SvrRegToSvrReq_default_instance_;
class TransPartnerData;
class TransPartnerDataDefaultTypeInternal;
extern TransPartnerDataDefaultTypeInternal _TransPartnerData_default_instance_;
class TransPetData;
class TransPetDataDefaultTypeInternal;
extern TransPetDataDefaultTypeInternal _TransPetData_default_instance_;
class TransRoleData;
class TransRoleDataDefaultTypeInternal;
extern TransRoleDataDefaultTypeInternal _TransRoleData_default_instance_;
class TransferDataAck;
class TransferDataAckDefaultTypeInternal;
extern TransferDataAckDefaultTypeInternal _TransferDataAck_default_instance_;
class TransferDataItem;
class TransferDataItemDefaultTypeInternal;
extern TransferDataItemDefaultTypeInternal _TransferDataItem_default_instance_;
class TransferDataReq;
class TransferDataReqDefaultTypeInternal;
extern TransferDataReqDefaultTypeInternal _TransferDataReq_default_instance_;
class UnsetEquipAck;
class UnsetEquipAckDefaultTypeInternal;
extern UnsetEquipAckDefaultTypeInternal _UnsetEquipAck_default_instance_;
class UnsetEquipReq;
class UnsetEquipReqDefaultTypeInternal;
extern UnsetEquipReqDefaultTypeInternal _UnsetEquipReq_default_instance_;
class UnsetGemAck;
class UnsetGemAckDefaultTypeInternal;
extern UnsetGemAckDefaultTypeInternal _UnsetGemAck_default_instance_;
class UnsetGemReq;
class UnsetGemReqDefaultTypeInternal;
extern UnsetGemReqDefaultTypeInternal _UnsetGemReq_default_instance_;
class UnsetMountAck;
class UnsetMountAckDefaultTypeInternal;
extern UnsetMountAckDefaultTypeInternal _UnsetMountAck_default_instance_;
class UnsetMountReq;
class UnsetMountReqDefaultTypeInternal;
extern UnsetMountReqDefaultTypeInternal _UnsetMountReq_default_instance_;
class UnsetPartnerAck;
class UnsetPartnerAckDefaultTypeInternal;
extern UnsetPartnerAckDefaultTypeInternal _UnsetPartnerAck_default_instance_;
class UnsetPartnerReq;
class UnsetPartnerReqDefaultTypeInternal;
extern UnsetPartnerReqDefaultTypeInternal _UnsetPartnerReq_default_instance_;
class UnsetPetAck;
class UnsetPetAckDefaultTypeInternal;
extern UnsetPetAckDefaultTypeInternal _UnsetPetAck_default_instance_;
class UnsetPetReq;
class UnsetPetReqDefaultTypeInternal;
extern UnsetPetReqDefaultTypeInternal _UnsetPetReq_default_instance_;
class UseHpBottleAck;
class UseHpBottleAckDefaultTypeInternal;
extern UseHpBottleAckDefaultTypeInternal _UseHpBottleAck_default_instance_;
class UseHpBottleReq;
class UseHpBottleReqDefaultTypeInternal;
extern UseHpBottleReqDefaultTypeInternal _UseHpBottleReq_default_instance_;
class UseItemAck;
class UseItemAckDefaultTypeInternal;
extern UseItemAckDefaultTypeInternal _UseItemAck_default_instance_;
class UseItemReq;
class UseItemReqDefaultTypeInternal;
extern UseItemReqDefaultTypeInternal _UseItemReq_default_instance_;
class UseMpBottleAck;
class UseMpBottleAckDefaultTypeInternal;
extern UseMpBottleAckDefaultTypeInternal _UseMpBottleAck_default_instance_;
class UseMpBottleReq;
class UseMpBottleReqDefaultTypeInternal;
extern UseMpBottleReqDefaultTypeInternal _UseMpBottleReq_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::AbortSceneAck* Arena::CreateMaybeMessage<::AbortSceneAck>(Arena*);
template<> ::AbortSceneNty* Arena::CreateMaybeMessage<::AbortSceneNty>(Arena*);
template<> ::AbortSceneReq* Arena::CreateMaybeMessage<::AbortSceneReq>(Arena*);
template<> ::BackToCityAck* Arena::CreateMaybeMessage<::BackToCityAck>(Arena*);
template<> ::BackToCityReq* Arena::CreateMaybeMessage<::BackToCityReq>(Arena*);
template<> ::BroadMessageNotify* Arena::CreateMaybeMessage<::BroadMessageNotify>(Arena*);
template<> ::ChatMessageAck* Arena::CreateMaybeMessage<::ChatMessageAck>(Arena*);
template<> ::ChatMessageNty* Arena::CreateMaybeMessage<::ChatMessageNty>(Arena*);
template<> ::ChatMessageReq* Arena::CreateMaybeMessage<::ChatMessageReq>(Arena*);
template<> ::CommonAck* Arena::CreateMaybeMessage<::CommonAck>(Arena*);
template<> ::CommonReq* Arena::CreateMaybeMessage<::CommonReq>(Arena*);
template<> ::CopyInsItem* Arena::CreateMaybeMessage<::CopyInsItem>(Arena*);
template<> ::CopyReportReq* Arena::CreateMaybeMessage<::CopyReportReq>(Arena*);
template<> ::CreateNewSceneAck* Arena::CreateMaybeMessage<::CreateNewSceneAck>(Arena*);
template<> ::CreateNewSceneReq* Arena::CreateMaybeMessage<::CreateNewSceneReq>(Arena*);
template<> ::EnterSceneAck* Arena::CreateMaybeMessage<::EnterSceneAck>(Arena*);
template<> ::EnterSceneReq* Arena::CreateMaybeMessage<::EnterSceneReq>(Arena*);
template<> ::GmStopServerAck* Arena::CreateMaybeMessage<::GmStopServerAck>(Arena*);
template<> ::GmStopServerReq* Arena::CreateMaybeMessage<::GmStopServerReq>(Arena*);
template<> ::HitEffectItem* Arena::CreateMaybeMessage<::HitEffectItem>(Arena*);
template<> ::HitEffectNtf* Arena::CreateMaybeMessage<::HitEffectNtf>(Arena*);
template<> ::LeaveSceneAck* Arena::CreateMaybeMessage<::LeaveSceneAck>(Arena*);
template<> ::LeaveSceneReq* Arena::CreateMaybeMessage<::LeaveSceneReq>(Arena*);
template<> ::LogicRegToDbSvrAck* Arena::CreateMaybeMessage<::LogicRegToDbSvrAck>(Arena*);
template<> ::LogicRegToDbSvrReq* Arena::CreateMaybeMessage<::LogicRegToDbSvrReq>(Arena*);
template<> ::LogicRegToLoginAck* Arena::CreateMaybeMessage<::LogicRegToLoginAck>(Arena*);
template<> ::LogicRegToLoginReq* Arena::CreateMaybeMessage<::LogicRegToLoginReq>(Arena*);
template<> ::LogicUpdateInfoAck* Arena::CreateMaybeMessage<::LogicUpdateInfoAck>(Arena*);
template<> ::LogicUpdateInfoReq* Arena::CreateMaybeMessage<::LogicUpdateInfoReq>(Arena*);
template<> ::MsgGetRandomNameAck* Arena::CreateMaybeMessage<::MsgGetRandomNameAck>(Arena*);
template<> ::MsgGetRandomNameReq* Arena::CreateMaybeMessage<::MsgGetRandomNameReq>(Arena*);
template<> ::Msg_DbErrorCountNty* Arena::CreateMaybeMessage<::Msg_DbErrorCountNty>(Arena*);
template<> ::Msg_GameParamAck* Arena::CreateMaybeMessage<::Msg_GameParamAck>(Arena*);
template<> ::Msg_GameParamReq* Arena::CreateMaybeMessage<::Msg_GameParamReq>(Arena*);
template<> ::Msg_GiftCodeAck* Arena::CreateMaybeMessage<::Msg_GiftCodeAck>(Arena*);
template<> ::Msg_GiftCodeReq* Arena::CreateMaybeMessage<::Msg_GiftCodeReq>(Arena*);
template<> ::NearByRoleItem* Arena::CreateMaybeMessage<::NearByRoleItem>(Arena*);
template<> ::NotifyIntoScene* Arena::CreateMaybeMessage<::NotifyIntoScene>(Arena*);
template<> ::ObjectChangeNotify* Arena::CreateMaybeMessage<::ObjectChangeNotify>(Arena*);
template<> ::RemoveConnectNty* Arena::CreateMaybeMessage<::RemoveConnectNty>(Arena*);
template<> ::RoleDisconnectAck* Arena::CreateMaybeMessage<::RoleDisconnectAck>(Arena*);
template<> ::RoleDisconnectReq* Arena::CreateMaybeMessage<::RoleDisconnectReq>(Arena*);
template<> ::RoleReconnectAck* Arena::CreateMaybeMessage<::RoleReconnectAck>(Arena*);
template<> ::RoleReconnectReq* Arena::CreateMaybeMessage<::RoleReconnectReq>(Arena*);
template<> ::SetupEquipAck* Arena::CreateMaybeMessage<::SetupEquipAck>(Arena*);
template<> ::SetupEquipReq* Arena::CreateMaybeMessage<::SetupEquipReq>(Arena*);
template<> ::SetupGemAck* Arena::CreateMaybeMessage<::SetupGemAck>(Arena*);
template<> ::SetupGemReq* Arena::CreateMaybeMessage<::SetupGemReq>(Arena*);
template<> ::SetupMountAck* Arena::CreateMaybeMessage<::SetupMountAck>(Arena*);
template<> ::SetupMountReq* Arena::CreateMaybeMessage<::SetupMountReq>(Arena*);
template<> ::SetupPartnerAck* Arena::CreateMaybeMessage<::SetupPartnerAck>(Arena*);
template<> ::SetupPartnerReq* Arena::CreateMaybeMessage<::SetupPartnerReq>(Arena*);
template<> ::SetupPetAck* Arena::CreateMaybeMessage<::SetupPetAck>(Arena*);
template<> ::SetupPetReq* Arena::CreateMaybeMessage<::SetupPetReq>(Arena*);
template<> ::StoreBuyAck* Arena::CreateMaybeMessage<::StoreBuyAck>(Arena*);
template<> ::StoreBuyReq* Arena::CreateMaybeMessage<::StoreBuyReq>(Arena*);
template<> ::SvrRegToSvrAck* Arena::CreateMaybeMessage<::SvrRegToSvrAck>(Arena*);
template<> ::SvrRegToSvrReq* Arena::CreateMaybeMessage<::SvrRegToSvrReq>(Arena*);
template<> ::TransPartnerData* Arena::CreateMaybeMessage<::TransPartnerData>(Arena*);
template<> ::TransPetData* Arena::CreateMaybeMessage<::TransPetData>(Arena*);
template<> ::TransRoleData* Arena::CreateMaybeMessage<::TransRoleData>(Arena*);
template<> ::TransferDataAck* Arena::CreateMaybeMessage<::TransferDataAck>(Arena*);
template<> ::TransferDataItem* Arena::CreateMaybeMessage<::TransferDataItem>(Arena*);
template<> ::TransferDataReq* Arena::CreateMaybeMessage<::TransferDataReq>(Arena*);
template<> ::UnsetEquipAck* Arena::CreateMaybeMessage<::UnsetEquipAck>(Arena*);
template<> ::UnsetEquipReq* Arena::CreateMaybeMessage<::UnsetEquipReq>(Arena*);
template<> ::UnsetGemAck* Arena::CreateMaybeMessage<::UnsetGemAck>(Arena*);
template<> ::UnsetGemReq* Arena::CreateMaybeMessage<::UnsetGemReq>(Arena*);
template<> ::UnsetMountAck* Arena::CreateMaybeMessage<::UnsetMountAck>(Arena*);
template<> ::UnsetMountReq* Arena::CreateMaybeMessage<::UnsetMountReq>(Arena*);
template<> ::UnsetPartnerAck* Arena::CreateMaybeMessage<::UnsetPartnerAck>(Arena*);
template<> ::UnsetPartnerReq* Arena::CreateMaybeMessage<::UnsetPartnerReq>(Arena*);
template<> ::UnsetPetAck* Arena::CreateMaybeMessage<::UnsetPetAck>(Arena*);
template<> ::UnsetPetReq* Arena::CreateMaybeMessage<::UnsetPetReq>(Arena*);
template<> ::UseHpBottleAck* Arena::CreateMaybeMessage<::UseHpBottleAck>(Arena*);
template<> ::UseHpBottleReq* Arena::CreateMaybeMessage<::UseHpBottleReq>(Arena*);
template<> ::UseItemAck* Arena::CreateMaybeMessage<::UseItemAck>(Arena*);
template<> ::UseItemReq* Arena::CreateMaybeMessage<::UseItemReq>(Arena*);
template<> ::UseMpBottleAck* Arena::CreateMaybeMessage<::UseMpBottleAck>(Arena*);
template<> ::UseMpBottleReq* Arena::CreateMaybeMessage<::UseMpBottleReq>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class GmStopServerReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GmStopServerReq) */ {
 public:
  inline GmStopServerReq() : GmStopServerReq(nullptr) {};
  virtual ~GmStopServerReq();

  GmStopServerReq(const GmStopServerReq& from);
  GmStopServerReq(GmStopServerReq&& from) noexcept
    : GmStopServerReq() {
    *this = ::std::move(from);
  }

  inline GmStopServerReq& operator=(const GmStopServerReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GmStopServerReq& operator=(GmStopServerReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GmStopServerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GmStopServerReq* internal_default_instance() {
    return reinterpret_cast<const GmStopServerReq*>(
               &_GmStopServerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GmStopServerReq& a, GmStopServerReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GmStopServerReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GmStopServerReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GmStopServerReq* New() const final {
    return CreateMaybeMessage<GmStopServerReq>(nullptr);
  }

  GmStopServerReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GmStopServerReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GmStopServerReq& from);
  void MergeFrom(const GmStopServerReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GmStopServerReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GmStopServerReq";
  }
  protected:
  explicit GmStopServerReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // uint32 Data = 1;
  void clear_data();
  ::PROTOBUF_NAMESPACE_ID::uint32 data() const;
  void set_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data() const;
  void _internal_set_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:GmStopServerReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class GmStopServerAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GmStopServerAck) */ {
 public:
  inline GmStopServerAck() : GmStopServerAck(nullptr) {};
  virtual ~GmStopServerAck();

  GmStopServerAck(const GmStopServerAck& from);
  GmStopServerAck(GmStopServerAck&& from) noexcept
    : GmStopServerAck() {
    *this = ::std::move(from);
  }

  inline GmStopServerAck& operator=(const GmStopServerAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline GmStopServerAck& operator=(GmStopServerAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GmStopServerAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GmStopServerAck* internal_default_instance() {
    return reinterpret_cast<const GmStopServerAck*>(
               &_GmStopServerAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GmStopServerAck& a, GmStopServerAck& b) {
    a.Swap(&b);
  }
  inline void Swap(GmStopServerAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GmStopServerAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GmStopServerAck* New() const final {
    return CreateMaybeMessage<GmStopServerAck>(nullptr);
  }

  GmStopServerAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GmStopServerAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GmStopServerAck& from);
  void MergeFrom(const GmStopServerAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GmStopServerAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GmStopServerAck";
  }
  protected:
  explicit GmStopServerAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:GmStopServerAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class SvrRegToSvrReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SvrRegToSvrReq) */ {
 public:
  inline SvrRegToSvrReq() : SvrRegToSvrReq(nullptr) {};
  virtual ~SvrRegToSvrReq();

  SvrRegToSvrReq(const SvrRegToSvrReq& from);
  SvrRegToSvrReq(SvrRegToSvrReq&& from) noexcept
    : SvrRegToSvrReq() {
    *this = ::std::move(from);
  }

  inline SvrRegToSvrReq& operator=(const SvrRegToSvrReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SvrRegToSvrReq& operator=(SvrRegToSvrReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SvrRegToSvrReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SvrRegToSvrReq* internal_default_instance() {
    return reinterpret_cast<const SvrRegToSvrReq*>(
               &_SvrRegToSvrReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SvrRegToSvrReq& a, SvrRegToSvrReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SvrRegToSvrReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SvrRegToSvrReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SvrRegToSvrReq* New() const final {
    return CreateMaybeMessage<SvrRegToSvrReq>(nullptr);
  }

  SvrRegToSvrReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SvrRegToSvrReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SvrRegToSvrReq& from);
  void MergeFrom(const SvrRegToSvrReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SvrRegToSvrReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SvrRegToSvrReq";
  }
  protected:
  explicit SvrRegToSvrReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerNameFieldNumber = 2,
    kServerIpFieldNumber = 3,
    kServerIDFieldNumber = 1,
    kServerPortFieldNumber = 4,
    kHttpPortFieldNumber = 5,
  };
  // string ServerName = 2;
  void clear_servername();
  const std::string& servername() const;
  void set_servername(const std::string& value);
  void set_servername(std::string&& value);
  void set_servername(const char* value);
  void set_servername(const char* value, size_t size);
  std::string* mutable_servername();
  std::string* release_servername();
  void set_allocated_servername(std::string* servername);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_servername();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_servername(
      std::string* servername);
  private:
  const std::string& _internal_servername() const;
  void _internal_set_servername(const std::string& value);
  std::string* _internal_mutable_servername();
  public:

  // string ServerIp = 3;
  void clear_serverip();
  const std::string& serverip() const;
  void set_serverip(const std::string& value);
  void set_serverip(std::string&& value);
  void set_serverip(const char* value);
  void set_serverip(const char* value, size_t size);
  std::string* mutable_serverip();
  std::string* release_serverip();
  void set_allocated_serverip(std::string* serverip);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_serverip();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_serverip(
      std::string* serverip);
  private:
  const std::string& _internal_serverip() const;
  void _internal_set_serverip(const std::string& value);
  std::string* _internal_mutable_serverip();
  public:

  // int32 ServerID = 1;
  void clear_serverid();
  ::PROTOBUF_NAMESPACE_ID::int32 serverid() const;
  void set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverid() const;
  void _internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ServerPort = 4;
  void clear_serverport();
  ::PROTOBUF_NAMESPACE_ID::int32 serverport() const;
  void set_serverport(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverport() const;
  void _internal_set_serverport(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 HttpPort = 5;
  void clear_httpport();
  ::PROTOBUF_NAMESPACE_ID::int32 httpport() const;
  void set_httpport(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_httpport() const;
  void _internal_set_httpport(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:SvrRegToSvrReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr servername_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr serverip_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverid_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverport_;
  ::PROTOBUF_NAMESPACE_ID::int32 httpport_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class SvrRegToSvrAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SvrRegToSvrAck) */ {
 public:
  inline SvrRegToSvrAck() : SvrRegToSvrAck(nullptr) {};
  virtual ~SvrRegToSvrAck();

  SvrRegToSvrAck(const SvrRegToSvrAck& from);
  SvrRegToSvrAck(SvrRegToSvrAck&& from) noexcept
    : SvrRegToSvrAck() {
    *this = ::std::move(from);
  }

  inline SvrRegToSvrAck& operator=(const SvrRegToSvrAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline SvrRegToSvrAck& operator=(SvrRegToSvrAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SvrRegToSvrAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SvrRegToSvrAck* internal_default_instance() {
    return reinterpret_cast<const SvrRegToSvrAck*>(
               &_SvrRegToSvrAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SvrRegToSvrAck& a, SvrRegToSvrAck& b) {
    a.Swap(&b);
  }
  inline void Swap(SvrRegToSvrAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SvrRegToSvrAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SvrRegToSvrAck* New() const final {
    return CreateMaybeMessage<SvrRegToSvrAck>(nullptr);
  }

  SvrRegToSvrAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SvrRegToSvrAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SvrRegToSvrAck& from);
  void MergeFrom(const SvrRegToSvrAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SvrRegToSvrAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SvrRegToSvrAck";
  }
  protected:
  explicit SvrRegToSvrAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNewSvrNameFieldNumber = 2,
    kRetCodeFieldNumber = 1,
  };
  // string NewSvrName = 2;
  void clear_newsvrname();
  const std::string& newsvrname() const;
  void set_newsvrname(const std::string& value);
  void set_newsvrname(std::string&& value);
  void set_newsvrname(const char* value);
  void set_newsvrname(const char* value, size_t size);
  std::string* mutable_newsvrname();
  std::string* release_newsvrname();
  void set_allocated_newsvrname(std::string* newsvrname);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_newsvrname();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_newsvrname(
      std::string* newsvrname);
  private:
  const std::string& _internal_newsvrname() const;
  void _internal_set_newsvrname(const std::string& value);
  std::string* _internal_mutable_newsvrname();
  public:

  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SvrRegToSvrAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr newsvrname_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class RoleDisconnectReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RoleDisconnectReq) */ {
 public:
  inline RoleDisconnectReq() : RoleDisconnectReq(nullptr) {};
  virtual ~RoleDisconnectReq();

  RoleDisconnectReq(const RoleDisconnectReq& from);
  RoleDisconnectReq(RoleDisconnectReq&& from) noexcept
    : RoleDisconnectReq() {
    *this = ::std::move(from);
  }

  inline RoleDisconnectReq& operator=(const RoleDisconnectReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoleDisconnectReq& operator=(RoleDisconnectReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RoleDisconnectReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleDisconnectReq* internal_default_instance() {
    return reinterpret_cast<const RoleDisconnectReq*>(
               &_RoleDisconnectReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RoleDisconnectReq& a, RoleDisconnectReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RoleDisconnectReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoleDisconnectReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RoleDisconnectReq* New() const final {
    return CreateMaybeMessage<RoleDisconnectReq>(nullptr);
  }

  RoleDisconnectReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RoleDisconnectReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RoleDisconnectReq& from);
  void MergeFrom(const RoleDisconnectReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoleDisconnectReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RoleDisconnectReq";
  }
  protected:
  explicit RoleDisconnectReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIDFieldNumber = 1,
    kRoleIDFieldNumber = 2,
  };
  // uint64 AccountID = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 RoleID = 2;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:RoleDisconnectReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class RoleDisconnectAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RoleDisconnectAck) */ {
 public:
  inline RoleDisconnectAck() : RoleDisconnectAck(nullptr) {};
  virtual ~RoleDisconnectAck();

  RoleDisconnectAck(const RoleDisconnectAck& from);
  RoleDisconnectAck(RoleDisconnectAck&& from) noexcept
    : RoleDisconnectAck() {
    *this = ::std::move(from);
  }

  inline RoleDisconnectAck& operator=(const RoleDisconnectAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoleDisconnectAck& operator=(RoleDisconnectAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RoleDisconnectAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleDisconnectAck* internal_default_instance() {
    return reinterpret_cast<const RoleDisconnectAck*>(
               &_RoleDisconnectAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(RoleDisconnectAck& a, RoleDisconnectAck& b) {
    a.Swap(&b);
  }
  inline void Swap(RoleDisconnectAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoleDisconnectAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RoleDisconnectAck* New() const final {
    return CreateMaybeMessage<RoleDisconnectAck>(nullptr);
  }

  RoleDisconnectAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RoleDisconnectAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RoleDisconnectAck& from);
  void MergeFrom(const RoleDisconnectAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoleDisconnectAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RoleDisconnectAck";
  }
  protected:
  explicit RoleDisconnectAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:RoleDisconnectAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class RoleReconnectReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RoleReconnectReq) */ {
 public:
  inline RoleReconnectReq() : RoleReconnectReq(nullptr) {};
  virtual ~RoleReconnectReq();

  RoleReconnectReq(const RoleReconnectReq& from);
  RoleReconnectReq(RoleReconnectReq&& from) noexcept
    : RoleReconnectReq() {
    *this = ::std::move(from);
  }

  inline RoleReconnectReq& operator=(const RoleReconnectReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoleReconnectReq& operator=(RoleReconnectReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RoleReconnectReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleReconnectReq* internal_default_instance() {
    return reinterpret_cast<const RoleReconnectReq*>(
               &_RoleReconnectReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(RoleReconnectReq& a, RoleReconnectReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RoleReconnectReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoleReconnectReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RoleReconnectReq* New() const final {
    return CreateMaybeMessage<RoleReconnectReq>(nullptr);
  }

  RoleReconnectReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RoleReconnectReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RoleReconnectReq& from);
  void MergeFrom(const RoleReconnectReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoleReconnectReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RoleReconnectReq";
  }
  protected:
  explicit RoleReconnectReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kAccountIDFieldNumber = 2,
    kLoginCodeFieldNumber = 3,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 AccountID = 2;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 LoginCode = 3;
  void clear_logincode();
  ::PROTOBUF_NAMESPACE_ID::uint32 logincode() const;
  void set_logincode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_logincode() const;
  void _internal_set_logincode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:RoleReconnectReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 logincode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class RoleReconnectAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RoleReconnectAck) */ {
 public:
  inline RoleReconnectAck() : RoleReconnectAck(nullptr) {};
  virtual ~RoleReconnectAck();

  RoleReconnectAck(const RoleReconnectAck& from);
  RoleReconnectAck(RoleReconnectAck&& from) noexcept
    : RoleReconnectAck() {
    *this = ::std::move(from);
  }

  inline RoleReconnectAck& operator=(const RoleReconnectAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoleReconnectAck& operator=(RoleReconnectAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RoleReconnectAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleReconnectAck* internal_default_instance() {
    return reinterpret_cast<const RoleReconnectAck*>(
               &_RoleReconnectAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(RoleReconnectAck& a, RoleReconnectAck& b) {
    a.Swap(&b);
  }
  inline void Swap(RoleReconnectAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoleReconnectAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RoleReconnectAck* New() const final {
    return CreateMaybeMessage<RoleReconnectAck>(nullptr);
  }

  RoleReconnectAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RoleReconnectAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RoleReconnectAck& from);
  void MergeFrom(const RoleReconnectAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoleReconnectAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RoleReconnectAck";
  }
  protected:
  explicit RoleReconnectAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:RoleReconnectAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class RemoveConnectNty PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RemoveConnectNty) */ {
 public:
  inline RemoveConnectNty() : RemoveConnectNty(nullptr) {};
  virtual ~RemoveConnectNty();

  RemoveConnectNty(const RemoveConnectNty& from);
  RemoveConnectNty(RemoveConnectNty&& from) noexcept
    : RemoveConnectNty() {
    *this = ::std::move(from);
  }

  inline RemoveConnectNty& operator=(const RemoveConnectNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveConnectNty& operator=(RemoveConnectNty&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RemoveConnectNty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveConnectNty* internal_default_instance() {
    return reinterpret_cast<const RemoveConnectNty*>(
               &_RemoveConnectNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(RemoveConnectNty& a, RemoveConnectNty& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveConnectNty* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveConnectNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RemoveConnectNty* New() const final {
    return CreateMaybeMessage<RemoveConnectNty>(nullptr);
  }

  RemoveConnectNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RemoveConnectNty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RemoveConnectNty& from);
  void MergeFrom(const RemoveConnectNty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveConnectNty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RemoveConnectNty";
  }
  protected:
  explicit RemoveConnectNty(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:RemoveConnectNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class CreateNewSceneReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CreateNewSceneReq) */ {
 public:
  inline CreateNewSceneReq() : CreateNewSceneReq(nullptr) {};
  virtual ~CreateNewSceneReq();

  CreateNewSceneReq(const CreateNewSceneReq& from);
  CreateNewSceneReq(CreateNewSceneReq&& from) noexcept
    : CreateNewSceneReq() {
    *this = ::std::move(from);
  }

  inline CreateNewSceneReq& operator=(const CreateNewSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateNewSceneReq& operator=(CreateNewSceneReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateNewSceneReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateNewSceneReq* internal_default_instance() {
    return reinterpret_cast<const CreateNewSceneReq*>(
               &_CreateNewSceneReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CreateNewSceneReq& a, CreateNewSceneReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateNewSceneReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateNewSceneReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateNewSceneReq* New() const final {
    return CreateMaybeMessage<CreateNewSceneReq>(nullptr);
  }

  CreateNewSceneReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateNewSceneReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateNewSceneReq& from);
  void MergeFrom(const CreateNewSceneReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateNewSceneReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CreateNewSceneReq";
  }
  protected:
  explicit CreateNewSceneReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCopyIDFieldNumber = 1,
    kCopyTypeFieldNumber = 2,
    kCreateParamFieldNumber = 4,
    kPlayerNumFieldNumber = 3,
  };
  // int32 CopyID = 1;
  void clear_copyid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyid() const;
  void set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyid() const;
  void _internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CopyType = 2;
  void clear_copytype();
  ::PROTOBUF_NAMESPACE_ID::int32 copytype() const;
  void set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copytype() const;
  void _internal_set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 CreateParam = 4;
  void clear_createparam();
  ::PROTOBUF_NAMESPACE_ID::uint64 createparam() const;
  void set_createparam(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_createparam() const;
  void _internal_set_createparam(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 PlayerNum = 3;
  void clear_playernum();
  ::PROTOBUF_NAMESPACE_ID::int32 playernum() const;
  void set_playernum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_playernum() const;
  void _internal_set_playernum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CreateNewSceneReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copytype_;
  ::PROTOBUF_NAMESPACE_ID::uint64 createparam_;
  ::PROTOBUF_NAMESPACE_ID::int32 playernum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class CreateNewSceneAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CreateNewSceneAck) */ {
 public:
  inline CreateNewSceneAck() : CreateNewSceneAck(nullptr) {};
  virtual ~CreateNewSceneAck();

  CreateNewSceneAck(const CreateNewSceneAck& from);
  CreateNewSceneAck(CreateNewSceneAck&& from) noexcept
    : CreateNewSceneAck() {
    *this = ::std::move(from);
  }

  inline CreateNewSceneAck& operator=(const CreateNewSceneAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateNewSceneAck& operator=(CreateNewSceneAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateNewSceneAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateNewSceneAck* internal_default_instance() {
    return reinterpret_cast<const CreateNewSceneAck*>(
               &_CreateNewSceneAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CreateNewSceneAck& a, CreateNewSceneAck& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateNewSceneAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateNewSceneAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateNewSceneAck* New() const final {
    return CreateMaybeMessage<CreateNewSceneAck>(nullptr);
  }

  CreateNewSceneAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateNewSceneAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateNewSceneAck& from);
  void MergeFrom(const CreateNewSceneAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateNewSceneAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CreateNewSceneAck";
  }
  protected:
  explicit CreateNewSceneAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
    kCopyIDFieldNumber = 2,
    kCreateParamFieldNumber = 4,
    kCopyGuidFieldNumber = 3,
    kServerIDFieldNumber = 5,
    kCopyTypeFieldNumber = 6,
    kPlayerNumFieldNumber = 7,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 CopyID = 2;
  void clear_copyid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyid() const;
  void set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyid() const;
  void _internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 CreateParam = 4;
  void clear_createparam();
  ::PROTOBUF_NAMESPACE_ID::uint64 createparam() const;
  void set_createparam(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_createparam() const;
  void _internal_set_createparam(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 CopyGuid = 3;
  void clear_copyguid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyguid() const;
  void set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyguid() const;
  void _internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ServerID = 5;
  void clear_serverid();
  ::PROTOBUF_NAMESPACE_ID::int32 serverid() const;
  void set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverid() const;
  void _internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CopyType = 6;
  void clear_copytype();
  ::PROTOBUF_NAMESPACE_ID::int32 copytype() const;
  void set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copytype() const;
  void _internal_set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 PlayerNum = 7;
  void clear_playernum();
  ::PROTOBUF_NAMESPACE_ID::int32 playernum() const;
  void set_playernum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_playernum() const;
  void _internal_set_playernum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CreateNewSceneAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 createparam_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copytype_;
  ::PROTOBUF_NAMESPACE_ID::int32 playernum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class EnterSceneReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:EnterSceneReq) */ {
 public:
  inline EnterSceneReq() : EnterSceneReq(nullptr) {};
  virtual ~EnterSceneReq();

  EnterSceneReq(const EnterSceneReq& from);
  EnterSceneReq(EnterSceneReq&& from) noexcept
    : EnterSceneReq() {
    *this = ::std::move(from);
  }

  inline EnterSceneReq& operator=(const EnterSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnterSceneReq& operator=(EnterSceneReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EnterSceneReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnterSceneReq* internal_default_instance() {
    return reinterpret_cast<const EnterSceneReq*>(
               &_EnterSceneReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(EnterSceneReq& a, EnterSceneReq& b) {
    a.Swap(&b);
  }
  inline void Swap(EnterSceneReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnterSceneReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneReq* New() const final {
    return CreateMaybeMessage<EnterSceneReq>(nullptr);
  }

  EnterSceneReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EnterSceneReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EnterSceneReq& from);
  void MergeFrom(const EnterSceneReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnterSceneReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "EnterSceneReq";
  }
  protected:
  explicit EnterSceneReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kServerIDFieldNumber = 2,
    kCopyGuidFieldNumber = 3,
    kCopyIDFieldNumber = 4,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 ServerID = 2;
  void clear_serverid();
  ::PROTOBUF_NAMESPACE_ID::int32 serverid() const;
  void set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverid() const;
  void _internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CopyGuid = 3;
  void clear_copyguid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyguid() const;
  void set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyguid() const;
  void _internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CopyID = 4;
  void clear_copyid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyid() const;
  void set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyid() const;
  void _internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:EnterSceneReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class EnterSceneAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:EnterSceneAck) */ {
 public:
  inline EnterSceneAck() : EnterSceneAck(nullptr) {};
  virtual ~EnterSceneAck();

  EnterSceneAck(const EnterSceneAck& from);
  EnterSceneAck(EnterSceneAck&& from) noexcept
    : EnterSceneAck() {
    *this = ::std::move(from);
  }

  inline EnterSceneAck& operator=(const EnterSceneAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnterSceneAck& operator=(EnterSceneAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EnterSceneAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnterSceneAck* internal_default_instance() {
    return reinterpret_cast<const EnterSceneAck*>(
               &_EnterSceneAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(EnterSceneAck& a, EnterSceneAck& b) {
    a.Swap(&b);
  }
  inline void Swap(EnterSceneAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnterSceneAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneAck* New() const final {
    return CreateMaybeMessage<EnterSceneAck>(nullptr);
  }

  EnterSceneAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EnterSceneAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EnterSceneAck& from);
  void MergeFrom(const EnterSceneAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnterSceneAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "EnterSceneAck";
  }
  protected:
  explicit EnterSceneAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEquipsFieldNumber = 19,
    kSkillsFieldNumber = 20,
    kRoleNameFieldNumber = 7,
    kRetCodeFieldNumber = 1,
    kCopyIDFieldNumber = 2,
    kRoleIDFieldNumber = 4,
    kCopyGuidFieldNumber = 3,
    kCarrerFieldNumber = 5,
    kActorIDFieldNumber = 6,
    kCampFieldNumber = 8,
    kXFieldNumber = 9,
    kYFieldNumber = 10,
    kZFieldNumber = 11,
    kFtFieldNumber = 12,
    kHpFieldNumber = 13,
    kMpFieldNumber = 14,
    kHpMaxFieldNumber = 15,
    kMpMaxFieldNumber = 16,
    kSpeedFieldNumber = 17,
    kMountIDFieldNumber = 18,
  };
  // repeated int32 Equips = 19;
  int equips_size() const;
  private:
  int _internal_equips_size() const;
  public:
  void clear_equips();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_equips(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_equips() const;
  void _internal_add_equips(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_equips();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 equips(int index) const;
  void set_equips(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_equips(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      equips() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_equips();

  // repeated .SkillItem Skills = 20;
  int skills_size() const;
  private:
  int _internal_skills_size() const;
  public:
  void clear_skills();
  ::SkillItem* mutable_skills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >*
      mutable_skills();
  private:
  const ::SkillItem& _internal_skills(int index) const;
  ::SkillItem* _internal_add_skills();
  public:
  const ::SkillItem& skills(int index) const;
  ::SkillItem* add_skills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >&
      skills() const;

  // string RoleName = 7;
  void clear_rolename();
  const std::string& rolename() const;
  void set_rolename(const std::string& value);
  void set_rolename(std::string&& value);
  void set_rolename(const char* value);
  void set_rolename(const char* value, size_t size);
  std::string* mutable_rolename();
  std::string* release_rolename();
  void set_allocated_rolename(std::string* rolename);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_rolename();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_rolename(
      std::string* rolename);
  private:
  const std::string& _internal_rolename() const;
  void _internal_set_rolename(const std::string& value);
  std::string* _internal_mutable_rolename();
  public:

  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 CopyID = 2;
  void clear_copyid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyid() const;
  void set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyid() const;
  void _internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 RoleID = 4;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 CopyGuid = 3;
  void clear_copyguid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyguid() const;
  void set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyguid() const;
  void _internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Carrer = 5;
  void clear_carrer();
  ::PROTOBUF_NAMESPACE_ID::int32 carrer() const;
  void set_carrer(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_carrer() const;
  void _internal_set_carrer(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ActorID = 6;
  void clear_actorid();
  ::PROTOBUF_NAMESPACE_ID::int32 actorid() const;
  void set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actorid() const;
  void _internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Camp = 8;
  void clear_camp();
  ::PROTOBUF_NAMESPACE_ID::int32 camp() const;
  void set_camp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_camp() const;
  void _internal_set_camp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float X = 9;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float Y = 10;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float Z = 11;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // float Ft = 12;
  void clear_ft();
  float ft() const;
  void set_ft(float value);
  private:
  float _internal_ft() const;
  void _internal_set_ft(float value);
  public:

  // int32 Hp = 13;
  void clear_hp();
  ::PROTOBUF_NAMESPACE_ID::int32 hp() const;
  void set_hp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hp() const;
  void _internal_set_hp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Mp = 14;
  void clear_mp();
  ::PROTOBUF_NAMESPACE_ID::int32 mp() const;
  void set_mp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mp() const;
  void _internal_set_mp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 HpMax = 15;
  void clear_hpmax();
  ::PROTOBUF_NAMESPACE_ID::int32 hpmax() const;
  void set_hpmax(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hpmax() const;
  void _internal_set_hpmax(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 MpMax = 16;
  void clear_mpmax();
  ::PROTOBUF_NAMESPACE_ID::int32 mpmax() const;
  void set_mpmax(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mpmax() const;
  void _internal_set_mpmax(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Speed = 17;
  void clear_speed();
  ::PROTOBUF_NAMESPACE_ID::int32 speed() const;
  void set_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_speed() const;
  void _internal_set_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 MountID = 18;
  void clear_mountid();
  ::PROTOBUF_NAMESPACE_ID::int32 mountid() const;
  void set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mountid() const;
  void _internal_set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:EnterSceneAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > equips_;
  mutable std::atomic<int> _equips_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem > skills_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rolename_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 carrer_;
  ::PROTOBUF_NAMESPACE_ID::int32 actorid_;
  ::PROTOBUF_NAMESPACE_ID::int32 camp_;
  float x_;
  float y_;
  float z_;
  float ft_;
  ::PROTOBUF_NAMESPACE_ID::int32 hp_;
  ::PROTOBUF_NAMESPACE_ID::int32 mp_;
  ::PROTOBUF_NAMESPACE_ID::int32 hpmax_;
  ::PROTOBUF_NAMESPACE_ID::int32 mpmax_;
  ::PROTOBUF_NAMESPACE_ID::int32 speed_;
  ::PROTOBUF_NAMESPACE_ID::int32 mountid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class BackToCityReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:BackToCityReq) */ {
 public:
  inline BackToCityReq() : BackToCityReq(nullptr) {};
  virtual ~BackToCityReq();

  BackToCityReq(const BackToCityReq& from);
  BackToCityReq(BackToCityReq&& from) noexcept
    : BackToCityReq() {
    *this = ::std::move(from);
  }

  inline BackToCityReq& operator=(const BackToCityReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline BackToCityReq& operator=(BackToCityReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BackToCityReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BackToCityReq* internal_default_instance() {
    return reinterpret_cast<const BackToCityReq*>(
               &_BackToCityReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(BackToCityReq& a, BackToCityReq& b) {
    a.Swap(&b);
  }
  inline void Swap(BackToCityReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BackToCityReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BackToCityReq* New() const final {
    return CreateMaybeMessage<BackToCityReq>(nullptr);
  }

  BackToCityReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BackToCityReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BackToCityReq& from);
  void MergeFrom(const BackToCityReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BackToCityReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "BackToCityReq";
  }
  protected:
  explicit BackToCityReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamFieldNumber = 1,
  };
  // uint32 Param = 1;
  void clear_param();
  ::PROTOBUF_NAMESPACE_ID::uint32 param() const;
  void set_param(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_param() const;
  void _internal_set_param(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:BackToCityReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 param_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class BackToCityAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:BackToCityAck) */ {
 public:
  inline BackToCityAck() : BackToCityAck(nullptr) {};
  virtual ~BackToCityAck();

  BackToCityAck(const BackToCityAck& from);
  BackToCityAck(BackToCityAck&& from) noexcept
    : BackToCityAck() {
    *this = ::std::move(from);
  }

  inline BackToCityAck& operator=(const BackToCityAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline BackToCityAck& operator=(BackToCityAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BackToCityAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BackToCityAck* internal_default_instance() {
    return reinterpret_cast<const BackToCityAck*>(
               &_BackToCityAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(BackToCityAck& a, BackToCityAck& b) {
    a.Swap(&b);
  }
  inline void Swap(BackToCityAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BackToCityAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BackToCityAck* New() const final {
    return CreateMaybeMessage<BackToCityAck>(nullptr);
  }

  BackToCityAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BackToCityAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BackToCityAck& from);
  void MergeFrom(const BackToCityAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BackToCityAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "BackToCityAck";
  }
  protected:
  explicit BackToCityAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:BackToCityAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class LeaveSceneReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:LeaveSceneReq) */ {
 public:
  inline LeaveSceneReq() : LeaveSceneReq(nullptr) {};
  virtual ~LeaveSceneReq();

  LeaveSceneReq(const LeaveSceneReq& from);
  LeaveSceneReq(LeaveSceneReq&& from) noexcept
    : LeaveSceneReq() {
    *this = ::std::move(from);
  }

  inline LeaveSceneReq& operator=(const LeaveSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaveSceneReq& operator=(LeaveSceneReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LeaveSceneReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LeaveSceneReq* internal_default_instance() {
    return reinterpret_cast<const LeaveSceneReq*>(
               &_LeaveSceneReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(LeaveSceneReq& a, LeaveSceneReq& b) {
    a.Swap(&b);
  }
  inline void Swap(LeaveSceneReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaveSceneReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LeaveSceneReq* New() const final {
    return CreateMaybeMessage<LeaveSceneReq>(nullptr);
  }

  LeaveSceneReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LeaveSceneReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LeaveSceneReq& from);
  void MergeFrom(const LeaveSceneReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LeaveSceneReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "LeaveSceneReq";
  }
  protected:
  explicit LeaveSceneReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kReasonFieldNumber = 2,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 Reason = 2;
  void clear_reason();
  ::PROTOBUF_NAMESPACE_ID::int32 reason() const;
  void set_reason(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reason() const;
  void _internal_set_reason(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:LeaveSceneReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::int32 reason_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class LeaveSceneAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:LeaveSceneAck) */ {
 public:
  inline LeaveSceneAck() : LeaveSceneAck(nullptr) {};
  virtual ~LeaveSceneAck();

  LeaveSceneAck(const LeaveSceneAck& from);
  LeaveSceneAck(LeaveSceneAck&& from) noexcept
    : LeaveSceneAck() {
    *this = ::std::move(from);
  }

  inline LeaveSceneAck& operator=(const LeaveSceneAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaveSceneAck& operator=(LeaveSceneAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LeaveSceneAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LeaveSceneAck* internal_default_instance() {
    return reinterpret_cast<const LeaveSceneAck*>(
               &_LeaveSceneAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(LeaveSceneAck& a, LeaveSceneAck& b) {
    a.Swap(&b);
  }
  inline void Swap(LeaveSceneAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaveSceneAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LeaveSceneAck* New() const final {
    return CreateMaybeMessage<LeaveSceneAck>(nullptr);
  }

  LeaveSceneAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LeaveSceneAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LeaveSceneAck& from);
  void MergeFrom(const LeaveSceneAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LeaveSceneAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "LeaveSceneAck";
  }
  protected:
  explicit LeaveSceneAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:LeaveSceneAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class AbortSceneReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AbortSceneReq) */ {
 public:
  inline AbortSceneReq() : AbortSceneReq(nullptr) {};
  virtual ~AbortSceneReq();

  AbortSceneReq(const AbortSceneReq& from);
  AbortSceneReq(AbortSceneReq&& from) noexcept
    : AbortSceneReq() {
    *this = ::std::move(from);
  }

  inline AbortSceneReq& operator=(const AbortSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AbortSceneReq& operator=(AbortSceneReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AbortSceneReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbortSceneReq* internal_default_instance() {
    return reinterpret_cast<const AbortSceneReq*>(
               &_AbortSceneReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(AbortSceneReq& a, AbortSceneReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AbortSceneReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AbortSceneReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AbortSceneReq* New() const final {
    return CreateMaybeMessage<AbortSceneReq>(nullptr);
  }

  AbortSceneReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AbortSceneReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AbortSceneReq& from);
  void MergeFrom(const AbortSceneReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbortSceneReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AbortSceneReq";
  }
  protected:
  explicit AbortSceneReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kReasonFieldNumber = 2,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 Reason = 2;
  void clear_reason();
  ::PROTOBUF_NAMESPACE_ID::int32 reason() const;
  void set_reason(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reason() const;
  void _internal_set_reason(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:AbortSceneReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::int32 reason_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class AbortSceneAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AbortSceneAck) */ {
 public:
  inline AbortSceneAck() : AbortSceneAck(nullptr) {};
  virtual ~AbortSceneAck();

  AbortSceneAck(const AbortSceneAck& from);
  AbortSceneAck(AbortSceneAck&& from) noexcept
    : AbortSceneAck() {
    *this = ::std::move(from);
  }

  inline AbortSceneAck& operator=(const AbortSceneAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline AbortSceneAck& operator=(AbortSceneAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AbortSceneAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbortSceneAck* internal_default_instance() {
    return reinterpret_cast<const AbortSceneAck*>(
               &_AbortSceneAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(AbortSceneAck& a, AbortSceneAck& b) {
    a.Swap(&b);
  }
  inline void Swap(AbortSceneAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AbortSceneAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AbortSceneAck* New() const final {
    return CreateMaybeMessage<AbortSceneAck>(nullptr);
  }

  AbortSceneAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AbortSceneAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AbortSceneAck& from);
  void MergeFrom(const AbortSceneAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbortSceneAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AbortSceneAck";
  }
  protected:
  explicit AbortSceneAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:AbortSceneAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class AbortSceneNty PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AbortSceneNty) */ {
 public:
  inline AbortSceneNty() : AbortSceneNty(nullptr) {};
  virtual ~AbortSceneNty();

  AbortSceneNty(const AbortSceneNty& from);
  AbortSceneNty(AbortSceneNty&& from) noexcept
    : AbortSceneNty() {
    *this = ::std::move(from);
  }

  inline AbortSceneNty& operator=(const AbortSceneNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline AbortSceneNty& operator=(AbortSceneNty&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AbortSceneNty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbortSceneNty* internal_default_instance() {
    return reinterpret_cast<const AbortSceneNty*>(
               &_AbortSceneNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(AbortSceneNty& a, AbortSceneNty& b) {
    a.Swap(&b);
  }
  inline void Swap(AbortSceneNty* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AbortSceneNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AbortSceneNty* New() const final {
    return CreateMaybeMessage<AbortSceneNty>(nullptr);
  }

  AbortSceneNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AbortSceneNty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AbortSceneNty& from);
  void MergeFrom(const AbortSceneNty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbortSceneNty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AbortSceneNty";
  }
  protected:
  explicit AbortSceneNty(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kCopyIDFieldNumber = 2,
    kCopyGuidFieldNumber = 3,
    kCopyTypeFieldNumber = 4,
    kServerIDFieldNumber = 5,
    kParamFieldNumber = 6,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 CopyID = 2;
  void clear_copyid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyid() const;
  void set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyid() const;
  void _internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CopyGuid = 3;
  void clear_copyguid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyguid() const;
  void set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyguid() const;
  void _internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CopyType = 4;
  void clear_copytype();
  ::PROTOBUF_NAMESPACE_ID::int32 copytype() const;
  void set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copytype() const;
  void _internal_set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ServerID = 5;
  void clear_serverid();
  ::PROTOBUF_NAMESPACE_ID::int32 serverid() const;
  void set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverid() const;
  void _internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Param = 6;
  void clear_param();
  ::PROTOBUF_NAMESPACE_ID::int32 param() const;
  void set_param(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param() const;
  void _internal_set_param(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:AbortSceneNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copytype_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverid_;
  ::PROTOBUF_NAMESPACE_ID::int32 param_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class TransRoleData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TransRoleData) */ {
 public:
  inline TransRoleData() : TransRoleData(nullptr) {};
  virtual ~TransRoleData();

  TransRoleData(const TransRoleData& from);
  TransRoleData(TransRoleData&& from) noexcept
    : TransRoleData() {
    *this = ::std::move(from);
  }

  inline TransRoleData& operator=(const TransRoleData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransRoleData& operator=(TransRoleData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TransRoleData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransRoleData* internal_default_instance() {
    return reinterpret_cast<const TransRoleData*>(
               &_TransRoleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(TransRoleData& a, TransRoleData& b) {
    a.Swap(&b);
  }
  inline void Swap(TransRoleData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransRoleData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TransRoleData* New() const final {
    return CreateMaybeMessage<TransRoleData>(nullptr);
  }

  TransRoleData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TransRoleData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TransRoleData& from);
  void MergeFrom(const TransRoleData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransRoleData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TransRoleData";
  }
  protected:
  explicit TransRoleData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEquipsFieldNumber = 8,
    kPropertysFieldNumber = 9,
    kSkillsFieldNumber = 10,
    kNameFieldNumber = 2,
    kRoleIDFieldNumber = 1,
    kCarrerIDFieldNumber = 3,
    kActorIDFieldNumber = 4,
    kLevelFieldNumber = 5,
    kMountIDFieldNumber = 6,
    kRobotFieldNumber = 7,
  };
  // repeated int32 Equips = 8;
  int equips_size() const;
  private:
  int _internal_equips_size() const;
  public:
  void clear_equips();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_equips(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_equips() const;
  void _internal_add_equips(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_equips();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 equips(int index) const;
  void set_equips(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_equips(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      equips() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_equips();

  // repeated int32 Propertys = 9;
  int propertys_size() const;
  private:
  int _internal_propertys_size() const;
  public:
  void clear_propertys();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_propertys(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_propertys() const;
  void _internal_add_propertys(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_propertys();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 propertys(int index) const;
  void set_propertys(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_propertys(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      propertys() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_propertys();

  // repeated .SkillItem Skills = 10;
  int skills_size() const;
  private:
  int _internal_skills_size() const;
  public:
  void clear_skills();
  ::SkillItem* mutable_skills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >*
      mutable_skills();
  private:
  const ::SkillItem& _internal_skills(int index) const;
  ::SkillItem* _internal_add_skills();
  public:
  const ::SkillItem& skills(int index) const;
  ::SkillItem* add_skills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >&
      skills() const;

  // string Name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 CarrerID = 3;
  void clear_carrerid();
  ::PROTOBUF_NAMESPACE_ID::int32 carrerid() const;
  void set_carrerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_carrerid() const;
  void _internal_set_carrerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ActorID = 4;
  void clear_actorid();
  ::PROTOBUF_NAMESPACE_ID::int32 actorid() const;
  void set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actorid() const;
  void _internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Level = 5;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 MountID = 6;
  void clear_mountid();
  ::PROTOBUF_NAMESPACE_ID::int32 mountid() const;
  void set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mountid() const;
  void _internal_set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Robot = 7;
  void clear_robot();
  ::PROTOBUF_NAMESPACE_ID::int32 robot() const;
  void set_robot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_robot() const;
  void _internal_set_robot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TransRoleData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > equips_;
  mutable std::atomic<int> _equips_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > propertys_;
  mutable std::atomic<int> _propertys_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem > skills_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::int32 carrerid_;
  ::PROTOBUF_NAMESPACE_ID::int32 actorid_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::int32 mountid_;
  ::PROTOBUF_NAMESPACE_ID::int32 robot_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class TransPetData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TransPetData) */ {
 public:
  inline TransPetData() : TransPetData(nullptr) {};
  virtual ~TransPetData();

  TransPetData(const TransPetData& from);
  TransPetData(TransPetData&& from) noexcept
    : TransPetData() {
    *this = ::std::move(from);
  }

  inline TransPetData& operator=(const TransPetData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransPetData& operator=(TransPetData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TransPetData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransPetData* internal_default_instance() {
    return reinterpret_cast<const TransPetData*>(
               &_TransPetData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(TransPetData& a, TransPetData& b) {
    a.Swap(&b);
  }
  inline void Swap(TransPetData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransPetData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TransPetData* New() const final {
    return CreateMaybeMessage<TransPetData>(nullptr);
  }

  TransPetData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TransPetData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TransPetData& from);
  void MergeFrom(const TransPetData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransPetData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TransPetData";
  }
  protected:
  explicit TransPetData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPropertysFieldNumber = 6,
    kSkillsFieldNumber = 7,
    kNameFieldNumber = 4,
    kPetGuidFieldNumber = 1,
    kPetIDFieldNumber = 2,
    kActorIDFieldNumber = 3,
    kLevelFieldNumber = 5,
  };
  // repeated int32 Propertys = 6;
  int propertys_size() const;
  private:
  int _internal_propertys_size() const;
  public:
  void clear_propertys();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_propertys(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_propertys() const;
  void _internal_add_propertys(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_propertys();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 propertys(int index) const;
  void set_propertys(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_propertys(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      propertys() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_propertys();

  // repeated .SkillItem Skills = 7;
  int skills_size() const;
  private:
  int _internal_skills_size() const;
  public:
  void clear_skills();
  ::SkillItem* mutable_skills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >*
      mutable_skills();
  private:
  const ::SkillItem& _internal_skills(int index) const;
  ::SkillItem* _internal_add_skills();
  public:
  const ::SkillItem& skills(int index) const;
  ::SkillItem* add_skills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >&
      skills() const;

  // string Name = 4;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint64 PetGuid = 1;
  void clear_petguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 petguid() const;
  void set_petguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_petguid() const;
  void _internal_set_petguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 PetID = 2;
  void clear_petid();
  ::PROTOBUF_NAMESPACE_ID::int32 petid() const;
  void set_petid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_petid() const;
  void _internal_set_petid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ActorID = 3;
  void clear_actorid();
  ::PROTOBUF_NAMESPACE_ID::int32 actorid() const;
  void set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actorid() const;
  void _internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Level = 5;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TransPetData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > propertys_;
  mutable std::atomic<int> _propertys_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem > skills_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 petguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 petid_;
  ::PROTOBUF_NAMESPACE_ID::int32 actorid_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class TransPartnerData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TransPartnerData) */ {
 public:
  inline TransPartnerData() : TransPartnerData(nullptr) {};
  virtual ~TransPartnerData();

  TransPartnerData(const TransPartnerData& from);
  TransPartnerData(TransPartnerData&& from) noexcept
    : TransPartnerData() {
    *this = ::std::move(from);
  }

  inline TransPartnerData& operator=(const TransPartnerData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransPartnerData& operator=(TransPartnerData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TransPartnerData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransPartnerData* internal_default_instance() {
    return reinterpret_cast<const TransPartnerData*>(
               &_TransPartnerData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(TransPartnerData& a, TransPartnerData& b) {
    a.Swap(&b);
  }
  inline void Swap(TransPartnerData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransPartnerData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TransPartnerData* New() const final {
    return CreateMaybeMessage<TransPartnerData>(nullptr);
  }

  TransPartnerData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TransPartnerData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TransPartnerData& from);
  void MergeFrom(const TransPartnerData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransPartnerData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TransPartnerData";
  }
  protected:
  explicit TransPartnerData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPropertysFieldNumber = 6,
    kSkillsFieldNumber = 7,
    kNameFieldNumber = 4,
    kPartnerGuidFieldNumber = 1,
    kPartnerIDFieldNumber = 2,
    kActorIDFieldNumber = 3,
    kLevelFieldNumber = 5,
  };
  // repeated int32 Propertys = 6;
  int propertys_size() const;
  private:
  int _internal_propertys_size() const;
  public:
  void clear_propertys();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_propertys(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_propertys() const;
  void _internal_add_propertys(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_propertys();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 propertys(int index) const;
  void set_propertys(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_propertys(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      propertys() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_propertys();

  // repeated .SkillItem Skills = 7;
  int skills_size() const;
  private:
  int _internal_skills_size() const;
  public:
  void clear_skills();
  ::SkillItem* mutable_skills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >*
      mutable_skills();
  private:
  const ::SkillItem& _internal_skills(int index) const;
  ::SkillItem* _internal_add_skills();
  public:
  const ::SkillItem& skills(int index) const;
  ::SkillItem* add_skills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >&
      skills() const;

  // string Name = 4;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint64 PartnerGuid = 1;
  void clear_partnerguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 partnerguid() const;
  void set_partnerguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_partnerguid() const;
  void _internal_set_partnerguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 PartnerID = 2;
  void clear_partnerid();
  ::PROTOBUF_NAMESPACE_ID::int32 partnerid() const;
  void set_partnerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_partnerid() const;
  void _internal_set_partnerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ActorID = 3;
  void clear_actorid();
  ::PROTOBUF_NAMESPACE_ID::int32 actorid() const;
  void set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actorid() const;
  void _internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Level = 5;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TransPartnerData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > propertys_;
  mutable std::atomic<int> _propertys_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem > skills_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 partnerguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 partnerid_;
  ::PROTOBUF_NAMESPACE_ID::int32 actorid_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class TransferDataItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TransferDataItem) */ {
 public:
  inline TransferDataItem() : TransferDataItem(nullptr) {};
  virtual ~TransferDataItem();

  TransferDataItem(const TransferDataItem& from);
  TransferDataItem(TransferDataItem&& from) noexcept
    : TransferDataItem() {
    *this = ::std::move(from);
  }

  inline TransferDataItem& operator=(const TransferDataItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransferDataItem& operator=(TransferDataItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TransferDataItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferDataItem* internal_default_instance() {
    return reinterpret_cast<const TransferDataItem*>(
               &_TransferDataItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(TransferDataItem& a, TransferDataItem& b) {
    a.Swap(&b);
  }
  inline void Swap(TransferDataItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransferDataItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TransferDataItem* New() const final {
    return CreateMaybeMessage<TransferDataItem>(nullptr);
  }

  TransferDataItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TransferDataItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TransferDataItem& from);
  void MergeFrom(const TransferDataItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransferDataItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TransferDataItem";
  }
  protected:
  explicit TransferDataItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleDataFieldNumber = 2,
    kPetDataFieldNumber = 3,
    kPartnerDataFieldNumber = 4,
    kCampFieldNumber = 1,
  };
  // .TransRoleData RoleData = 2;
  bool has_roledata() const;
  private:
  bool _internal_has_roledata() const;
  public:
  void clear_roledata();
  const ::TransRoleData& roledata() const;
  ::TransRoleData* release_roledata();
  ::TransRoleData* mutable_roledata();
  void set_allocated_roledata(::TransRoleData* roledata);
  private:
  const ::TransRoleData& _internal_roledata() const;
  ::TransRoleData* _internal_mutable_roledata();
  public:
  void unsafe_arena_set_allocated_roledata(
      ::TransRoleData* roledata);
  ::TransRoleData* unsafe_arena_release_roledata();

  // .TransPetData PetData = 3;
  bool has_petdata() const;
  private:
  bool _internal_has_petdata() const;
  public:
  void clear_petdata();
  const ::TransPetData& petdata() const;
  ::TransPetData* release_petdata();
  ::TransPetData* mutable_petdata();
  void set_allocated_petdata(::TransPetData* petdata);
  private:
  const ::TransPetData& _internal_petdata() const;
  ::TransPetData* _internal_mutable_petdata();
  public:
  void unsafe_arena_set_allocated_petdata(
      ::TransPetData* petdata);
  ::TransPetData* unsafe_arena_release_petdata();

  // .TransPartnerData PartnerData = 4;
  bool has_partnerdata() const;
  private:
  bool _internal_has_partnerdata() const;
  public:
  void clear_partnerdata();
  const ::TransPartnerData& partnerdata() const;
  ::TransPartnerData* release_partnerdata();
  ::TransPartnerData* mutable_partnerdata();
  void set_allocated_partnerdata(::TransPartnerData* partnerdata);
  private:
  const ::TransPartnerData& _internal_partnerdata() const;
  ::TransPartnerData* _internal_mutable_partnerdata();
  public:
  void unsafe_arena_set_allocated_partnerdata(
      ::TransPartnerData* partnerdata);
  ::TransPartnerData* unsafe_arena_release_partnerdata();

  // int32 Camp = 1;
  void clear_camp();
  ::PROTOBUF_NAMESPACE_ID::int32 camp() const;
  void set_camp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_camp() const;
  void _internal_set_camp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TransferDataItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::TransRoleData* roledata_;
  ::TransPetData* petdata_;
  ::TransPartnerData* partnerdata_;
  ::PROTOBUF_NAMESPACE_ID::int32 camp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class TransferDataReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TransferDataReq) */ {
 public:
  inline TransferDataReq() : TransferDataReq(nullptr) {};
  virtual ~TransferDataReq();

  TransferDataReq(const TransferDataReq& from);
  TransferDataReq(TransferDataReq&& from) noexcept
    : TransferDataReq() {
    *this = ::std::move(from);
  }

  inline TransferDataReq& operator=(const TransferDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransferDataReq& operator=(TransferDataReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TransferDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferDataReq* internal_default_instance() {
    return reinterpret_cast<const TransferDataReq*>(
               &_TransferDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(TransferDataReq& a, TransferDataReq& b) {
    a.Swap(&b);
  }
  inline void Swap(TransferDataReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransferDataReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TransferDataReq* New() const final {
    return CreateMaybeMessage<TransferDataReq>(nullptr);
  }

  TransferDataReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TransferDataReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TransferDataReq& from);
  void MergeFrom(const TransferDataReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransferDataReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TransferDataReq";
  }
  protected:
  explicit TransferDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransDatasFieldNumber = 1,
  };
  // repeated .TransferDataItem TransDatas = 1;
  int transdatas_size() const;
  private:
  int _internal_transdatas_size() const;
  public:
  void clear_transdatas();
  ::TransferDataItem* mutable_transdatas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TransferDataItem >*
      mutable_transdatas();
  private:
  const ::TransferDataItem& _internal_transdatas(int index) const;
  ::TransferDataItem* _internal_add_transdatas();
  public:
  const ::TransferDataItem& transdatas(int index) const;
  ::TransferDataItem* add_transdatas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TransferDataItem >&
      transdatas() const;

  // @@protoc_insertion_point(class_scope:TransferDataReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TransferDataItem > transdatas_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class TransferDataAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TransferDataAck) */ {
 public:
  inline TransferDataAck() : TransferDataAck(nullptr) {};
  virtual ~TransferDataAck();

  TransferDataAck(const TransferDataAck& from);
  TransferDataAck(TransferDataAck&& from) noexcept
    : TransferDataAck() {
    *this = ::std::move(from);
  }

  inline TransferDataAck& operator=(const TransferDataAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransferDataAck& operator=(TransferDataAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TransferDataAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferDataAck* internal_default_instance() {
    return reinterpret_cast<const TransferDataAck*>(
               &_TransferDataAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(TransferDataAck& a, TransferDataAck& b) {
    a.Swap(&b);
  }
  inline void Swap(TransferDataAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransferDataAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TransferDataAck* New() const final {
    return CreateMaybeMessage<TransferDataAck>(nullptr);
  }

  TransferDataAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TransferDataAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TransferDataAck& from);
  void MergeFrom(const TransferDataAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransferDataAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TransferDataAck";
  }
  protected:
  explicit TransferDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 2,
    kRetCodeFieldNumber = 1,
    kCopyIDFieldNumber = 3,
    kCopyGuidFieldNumber = 4,
    kServerIDFieldNumber = 5,
  };
  // uint64 RoleID = 2;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 CopyID = 3;
  void clear_copyid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyid() const;
  void set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyid() const;
  void _internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CopyGuid = 4;
  void clear_copyguid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyguid() const;
  void set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyguid() const;
  void _internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ServerID = 5;
  void clear_serverid();
  ::PROTOBUF_NAMESPACE_ID::int32 serverid() const;
  void set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverid() const;
  void _internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TransferDataAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class NotifyIntoScene PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:NotifyIntoScene) */ {
 public:
  inline NotifyIntoScene() : NotifyIntoScene(nullptr) {};
  virtual ~NotifyIntoScene();

  NotifyIntoScene(const NotifyIntoScene& from);
  NotifyIntoScene(NotifyIntoScene&& from) noexcept
    : NotifyIntoScene() {
    *this = ::std::move(from);
  }

  inline NotifyIntoScene& operator=(const NotifyIntoScene& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyIntoScene& operator=(NotifyIntoScene&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NotifyIntoScene& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NotifyIntoScene* internal_default_instance() {
    return reinterpret_cast<const NotifyIntoScene*>(
               &_NotifyIntoScene_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(NotifyIntoScene& a, NotifyIntoScene& b) {
    a.Swap(&b);
  }
  inline void Swap(NotifyIntoScene* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyIntoScene* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NotifyIntoScene* New() const final {
    return CreateMaybeMessage<NotifyIntoScene>(nullptr);
  }

  NotifyIntoScene* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NotifyIntoScene>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NotifyIntoScene& from);
  void MergeFrom(const NotifyIntoScene& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NotifyIntoScene* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "NotifyIntoScene";
  }
  protected:
  explicit NotifyIntoScene(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleIDFieldNumber = 1,
    kCopyIDFieldNumber = 2,
    kCopyGuidFieldNumber = 3,
    kServerIDFieldNumber = 4,
  };
  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 CopyID = 2;
  void clear_copyid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyid() const;
  void set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyid() const;
  void _internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CopyGuid = 3;
  void clear_copyguid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyguid() const;
  void set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyguid() const;
  void _internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ServerID = 4;
  void clear_serverid();
  ::PROTOBUF_NAMESPACE_ID::int32 serverid() const;
  void set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverid() const;
  void _internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:NotifyIntoScene)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class NearByRoleItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:NearByRoleItem) */ {
 public:
  inline NearByRoleItem() : NearByRoleItem(nullptr) {};
  virtual ~NearByRoleItem();

  NearByRoleItem(const NearByRoleItem& from);
  NearByRoleItem(NearByRoleItem&& from) noexcept
    : NearByRoleItem() {
    *this = ::std::move(from);
  }

  inline NearByRoleItem& operator=(const NearByRoleItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline NearByRoleItem& operator=(NearByRoleItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NearByRoleItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NearByRoleItem* internal_default_instance() {
    return reinterpret_cast<const NearByRoleItem*>(
               &_NearByRoleItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(NearByRoleItem& a, NearByRoleItem& b) {
    a.Swap(&b);
  }
  inline void Swap(NearByRoleItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NearByRoleItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NearByRoleItem* New() const final {
    return CreateMaybeMessage<NearByRoleItem>(nullptr);
  }

  NearByRoleItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NearByRoleItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NearByRoleItem& from);
  void MergeFrom(const NearByRoleItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NearByRoleItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "NearByRoleItem";
  }
  protected:
  explicit NearByRoleItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 4,
    kRoleIDFieldNumber = 1,
    kActorIDFieldNumber = 2,
    kLevelFieldNumber = 3,
  };
  // string Name = 4;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 ActorID = 2;
  void clear_actorid();
  ::PROTOBUF_NAMESPACE_ID::int32 actorid() const;
  void set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actorid() const;
  void _internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Level = 3;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:NearByRoleItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::int32 actorid_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class CopyInsItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CopyInsItem) */ {
 public:
  inline CopyInsItem() : CopyInsItem(nullptr) {};
  virtual ~CopyInsItem();

  CopyInsItem(const CopyInsItem& from);
  CopyInsItem(CopyInsItem&& from) noexcept
    : CopyInsItem() {
    *this = ::std::move(from);
  }

  inline CopyInsItem& operator=(const CopyInsItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CopyInsItem& operator=(CopyInsItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CopyInsItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CopyInsItem* internal_default_instance() {
    return reinterpret_cast<const CopyInsItem*>(
               &_CopyInsItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CopyInsItem& a, CopyInsItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CopyInsItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CopyInsItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CopyInsItem* New() const final {
    return CreateMaybeMessage<CopyInsItem>(nullptr);
  }

  CopyInsItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CopyInsItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CopyInsItem& from);
  void MergeFrom(const CopyInsItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CopyInsItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CopyInsItem";
  }
  protected:
  explicit CopyInsItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCopyGuidFieldNumber = 1,
    kCopyIDFieldNumber = 2,
    kCopyTypeFieldNumber = 3,
    kServerIDFieldNumber = 4,
  };
  // uint32 CopyGuid = 1;
  void clear_copyguid();
  ::PROTOBUF_NAMESPACE_ID::uint32 copyguid() const;
  void set_copyguid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_copyguid() const;
  void _internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 CopyID = 2;
  void clear_copyid();
  ::PROTOBUF_NAMESPACE_ID::int32 copyid() const;
  void set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copyid() const;
  void _internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CopyType = 3;
  void clear_copytype();
  ::PROTOBUF_NAMESPACE_ID::int32 copytype() const;
  void set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_copytype() const;
  void _internal_set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ServerID = 4;
  void clear_serverid();
  ::PROTOBUF_NAMESPACE_ID::int32 serverid() const;
  void set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverid() const;
  void _internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CopyInsItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 copyguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copyid_;
  ::PROTOBUF_NAMESPACE_ID::int32 copytype_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class CopyReportReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CopyReportReq) */ {
 public:
  inline CopyReportReq() : CopyReportReq(nullptr) {};
  virtual ~CopyReportReq();

  CopyReportReq(const CopyReportReq& from);
  CopyReportReq(CopyReportReq&& from) noexcept
    : CopyReportReq() {
    *this = ::std::move(from);
  }

  inline CopyReportReq& operator=(const CopyReportReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CopyReportReq& operator=(CopyReportReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CopyReportReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CopyReportReq* internal_default_instance() {
    return reinterpret_cast<const CopyReportReq*>(
               &_CopyReportReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CopyReportReq& a, CopyReportReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CopyReportReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CopyReportReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CopyReportReq* New() const final {
    return CreateMaybeMessage<CopyReportReq>(nullptr);
  }

  CopyReportReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CopyReportReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CopyReportReq& from);
  void MergeFrom(const CopyReportReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CopyReportReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CopyReportReq";
  }
  protected:
  explicit CopyReportReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCopyListFieldNumber = 2,
    kServerIDFieldNumber = 1,
  };
  // repeated .CopyInsItem CopyList = 2;
  int copylist_size() const;
  private:
  int _internal_copylist_size() const;
  public:
  void clear_copylist();
  ::CopyInsItem* mutable_copylist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CopyInsItem >*
      mutable_copylist();
  private:
  const ::CopyInsItem& _internal_copylist(int index) const;
  ::CopyInsItem* _internal_add_copylist();
  public:
  const ::CopyInsItem& copylist(int index) const;
  ::CopyInsItem* add_copylist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CopyInsItem >&
      copylist() const;

  // int32 ServerID = 1;
  void clear_serverid();
  ::PROTOBUF_NAMESPACE_ID::int32 serverid() const;
  void set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverid() const;
  void _internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CopyReportReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CopyInsItem > copylist_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UseHpBottleReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UseHpBottleReq) */ {
 public:
  inline UseHpBottleReq() : UseHpBottleReq(nullptr) {};
  virtual ~UseHpBottleReq();

  UseHpBottleReq(const UseHpBottleReq& from);
  UseHpBottleReq(UseHpBottleReq&& from) noexcept
    : UseHpBottleReq() {
    *this = ::std::move(from);
  }

  inline UseHpBottleReq& operator=(const UseHpBottleReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UseHpBottleReq& operator=(UseHpBottleReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UseHpBottleReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UseHpBottleReq* internal_default_instance() {
    return reinterpret_cast<const UseHpBottleReq*>(
               &_UseHpBottleReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(UseHpBottleReq& a, UseHpBottleReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UseHpBottleReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UseHpBottleReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UseHpBottleReq* New() const final {
    return CreateMaybeMessage<UseHpBottleReq>(nullptr);
  }

  UseHpBottleReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UseHpBottleReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UseHpBottleReq& from);
  void MergeFrom(const UseHpBottleReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UseHpBottleReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UseHpBottleReq";
  }
  protected:
  explicit UseHpBottleReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UseHpBottleReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UseHpBottleAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UseHpBottleAck) */ {
 public:
  inline UseHpBottleAck() : UseHpBottleAck(nullptr) {};
  virtual ~UseHpBottleAck();

  UseHpBottleAck(const UseHpBottleAck& from);
  UseHpBottleAck(UseHpBottleAck&& from) noexcept
    : UseHpBottleAck() {
    *this = ::std::move(from);
  }

  inline UseHpBottleAck& operator=(const UseHpBottleAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline UseHpBottleAck& operator=(UseHpBottleAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UseHpBottleAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UseHpBottleAck* internal_default_instance() {
    return reinterpret_cast<const UseHpBottleAck*>(
               &_UseHpBottleAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(UseHpBottleAck& a, UseHpBottleAck& b) {
    a.Swap(&b);
  }
  inline void Swap(UseHpBottleAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UseHpBottleAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UseHpBottleAck* New() const final {
    return CreateMaybeMessage<UseHpBottleAck>(nullptr);
  }

  UseHpBottleAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UseHpBottleAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UseHpBottleAck& from);
  void MergeFrom(const UseHpBottleAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UseHpBottleAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UseHpBottleAck";
  }
  protected:
  explicit UseHpBottleAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 Count = 2;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:UseHpBottleAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UseMpBottleReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UseMpBottleReq) */ {
 public:
  inline UseMpBottleReq() : UseMpBottleReq(nullptr) {};
  virtual ~UseMpBottleReq();

  UseMpBottleReq(const UseMpBottleReq& from);
  UseMpBottleReq(UseMpBottleReq&& from) noexcept
    : UseMpBottleReq() {
    *this = ::std::move(from);
  }

  inline UseMpBottleReq& operator=(const UseMpBottleReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UseMpBottleReq& operator=(UseMpBottleReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UseMpBottleReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UseMpBottleReq* internal_default_instance() {
    return reinterpret_cast<const UseMpBottleReq*>(
               &_UseMpBottleReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(UseMpBottleReq& a, UseMpBottleReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UseMpBottleReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UseMpBottleReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UseMpBottleReq* New() const final {
    return CreateMaybeMessage<UseMpBottleReq>(nullptr);
  }

  UseMpBottleReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UseMpBottleReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UseMpBottleReq& from);
  void MergeFrom(const UseMpBottleReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UseMpBottleReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UseMpBottleReq";
  }
  protected:
  explicit UseMpBottleReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UseMpBottleReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UseMpBottleAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UseMpBottleAck) */ {
 public:
  inline UseMpBottleAck() : UseMpBottleAck(nullptr) {};
  virtual ~UseMpBottleAck();

  UseMpBottleAck(const UseMpBottleAck& from);
  UseMpBottleAck(UseMpBottleAck&& from) noexcept
    : UseMpBottleAck() {
    *this = ::std::move(from);
  }

  inline UseMpBottleAck& operator=(const UseMpBottleAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline UseMpBottleAck& operator=(UseMpBottleAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UseMpBottleAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UseMpBottleAck* internal_default_instance() {
    return reinterpret_cast<const UseMpBottleAck*>(
               &_UseMpBottleAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(UseMpBottleAck& a, UseMpBottleAck& b) {
    a.Swap(&b);
  }
  inline void Swap(UseMpBottleAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UseMpBottleAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UseMpBottleAck* New() const final {
    return CreateMaybeMessage<UseMpBottleAck>(nullptr);
  }

  UseMpBottleAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UseMpBottleAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UseMpBottleAck& from);
  void MergeFrom(const UseMpBottleAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UseMpBottleAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UseMpBottleAck";
  }
  protected:
  explicit UseMpBottleAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 Count = 2;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:UseMpBottleAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class ChatMessageReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ChatMessageReq) */ {
 public:
  inline ChatMessageReq() : ChatMessageReq(nullptr) {};
  virtual ~ChatMessageReq();

  ChatMessageReq(const ChatMessageReq& from);
  ChatMessageReq(ChatMessageReq&& from) noexcept
    : ChatMessageReq() {
    *this = ::std::move(from);
  }

  inline ChatMessageReq& operator=(const ChatMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChatMessageReq& operator=(ChatMessageReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ChatMessageReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatMessageReq* internal_default_instance() {
    return reinterpret_cast<const ChatMessageReq*>(
               &_ChatMessageReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(ChatMessageReq& a, ChatMessageReq& b) {
    a.Swap(&b);
  }
  inline void Swap(ChatMessageReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChatMessageReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ChatMessageReq* New() const final {
    return CreateMaybeMessage<ChatMessageReq>(nullptr);
  }

  ChatMessageReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ChatMessageReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ChatMessageReq& from);
  void MergeFrom(const ChatMessageReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChatMessageReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ChatMessageReq";
  }
  protected:
  explicit ChatMessageReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSrcNameFieldNumber = 1,
    kContentFieldNumber = 6,
    kSrcIDFieldNumber = 2,
    kTargetIDFieldNumber = 3,
    kGuildIDFieldNumber = 5,
    kChatChlFieldNumber = 4,
  };
  // string SrcName = 1;
  void clear_srcname();
  const std::string& srcname() const;
  void set_srcname(const std::string& value);
  void set_srcname(std::string&& value);
  void set_srcname(const char* value);
  void set_srcname(const char* value, size_t size);
  std::string* mutable_srcname();
  std::string* release_srcname();
  void set_allocated_srcname(std::string* srcname);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_srcname();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_srcname(
      std::string* srcname);
  private:
  const std::string& _internal_srcname() const;
  void _internal_set_srcname(const std::string& value);
  std::string* _internal_mutable_srcname();
  public:

  // string Content = 6;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_content();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_content(
      std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // uint64 SrcID = 2;
  void clear_srcid();
  ::PROTOBUF_NAMESPACE_ID::uint64 srcid() const;
  void set_srcid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_srcid() const;
  void _internal_set_srcid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 TargetID = 3;
  void clear_targetid();
  ::PROTOBUF_NAMESPACE_ID::uint64 targetid() const;
  void set_targetid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_targetid() const;
  void _internal_set_targetid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 GuildID = 5;
  void clear_guildid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid() const;
  void set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guildid() const;
  void _internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 ChatChl = 4;
  void clear_chatchl();
  ::PROTOBUF_NAMESPACE_ID::int32 chatchl() const;
  void set_chatchl(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chatchl() const;
  void _internal_set_chatchl(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ChatMessageReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr srcname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::uint64 srcid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 targetid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid_;
  ::PROTOBUF_NAMESPACE_ID::int32 chatchl_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class ChatMessageAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ChatMessageAck) */ {
 public:
  inline ChatMessageAck() : ChatMessageAck(nullptr) {};
  virtual ~ChatMessageAck();

  ChatMessageAck(const ChatMessageAck& from);
  ChatMessageAck(ChatMessageAck&& from) noexcept
    : ChatMessageAck() {
    *this = ::std::move(from);
  }

  inline ChatMessageAck& operator=(const ChatMessageAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChatMessageAck& operator=(ChatMessageAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ChatMessageAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatMessageAck* internal_default_instance() {
    return reinterpret_cast<const ChatMessageAck*>(
               &_ChatMessageAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(ChatMessageAck& a, ChatMessageAck& b) {
    a.Swap(&b);
  }
  inline void Swap(ChatMessageAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChatMessageAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ChatMessageAck* New() const final {
    return CreateMaybeMessage<ChatMessageAck>(nullptr);
  }

  ChatMessageAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ChatMessageAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ChatMessageAck& from);
  void MergeFrom(const ChatMessageAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChatMessageAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ChatMessageAck";
  }
  protected:
  explicit ChatMessageAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ChatMessageAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class ChatMessageNty PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ChatMessageNty) */ {
 public:
  inline ChatMessageNty() : ChatMessageNty(nullptr) {};
  virtual ~ChatMessageNty();

  ChatMessageNty(const ChatMessageNty& from);
  ChatMessageNty(ChatMessageNty&& from) noexcept
    : ChatMessageNty() {
    *this = ::std::move(from);
  }

  inline ChatMessageNty& operator=(const ChatMessageNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChatMessageNty& operator=(ChatMessageNty&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ChatMessageNty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatMessageNty* internal_default_instance() {
    return reinterpret_cast<const ChatMessageNty*>(
               &_ChatMessageNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(ChatMessageNty& a, ChatMessageNty& b) {
    a.Swap(&b);
  }
  inline void Swap(ChatMessageNty* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChatMessageNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ChatMessageNty* New() const final {
    return CreateMaybeMessage<ChatMessageNty>(nullptr);
  }

  ChatMessageNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ChatMessageNty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ChatMessageNty& from);
  void MergeFrom(const ChatMessageNty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChatMessageNty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ChatMessageNty";
  }
  protected:
  explicit ChatMessageNty(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSrcNameFieldNumber = 1,
    kContentFieldNumber = 8,
    kSrcIDFieldNumber = 2,
    kTargetIDFieldNumber = 4,
    kSrcLevelFieldNumber = 3,
    kChatChlFieldNumber = 5,
    kGuildIDFieldNumber = 6,
    kTimeStampFieldNumber = 7,
  };
  // string SrcName = 1;
  void clear_srcname();
  const std::string& srcname() const;
  void set_srcname(const std::string& value);
  void set_srcname(std::string&& value);
  void set_srcname(const char* value);
  void set_srcname(const char* value, size_t size);
  std::string* mutable_srcname();
  std::string* release_srcname();
  void set_allocated_srcname(std::string* srcname);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_srcname();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_srcname(
      std::string* srcname);
  private:
  const std::string& _internal_srcname() const;
  void _internal_set_srcname(const std::string& value);
  std::string* _internal_mutable_srcname();
  public:

  // string Content = 8;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_content();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_content(
      std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // uint64 SrcID = 2;
  void clear_srcid();
  ::PROTOBUF_NAMESPACE_ID::uint64 srcid() const;
  void set_srcid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_srcid() const;
  void _internal_set_srcid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 TargetID = 4;
  void clear_targetid();
  ::PROTOBUF_NAMESPACE_ID::uint64 targetid() const;
  void set_targetid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_targetid() const;
  void _internal_set_targetid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 SrcLevel = 3;
  void clear_srclevel();
  ::PROTOBUF_NAMESPACE_ID::int32 srclevel() const;
  void set_srclevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_srclevel() const;
  void _internal_set_srclevel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ChatChl = 5;
  void clear_chatchl();
  ::PROTOBUF_NAMESPACE_ID::int32 chatchl() const;
  void set_chatchl(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chatchl() const;
  void _internal_set_chatchl(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 GuildID = 6;
  void clear_guildid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid() const;
  void set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guildid() const;
  void _internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 TimeStamp = 7;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ChatMessageNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr srcname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::uint64 srcid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 targetid_;
  ::PROTOBUF_NAMESPACE_ID::int32 srclevel_;
  ::PROTOBUF_NAMESPACE_ID::int32 chatchl_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class CommonReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CommonReq) */ {
 public:
  inline CommonReq() : CommonReq(nullptr) {};
  virtual ~CommonReq();

  CommonReq(const CommonReq& from);
  CommonReq(CommonReq&& from) noexcept
    : CommonReq() {
    *this = ::std::move(from);
  }

  inline CommonReq& operator=(const CommonReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommonReq& operator=(CommonReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommonReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommonReq* internal_default_instance() {
    return reinterpret_cast<const CommonReq*>(
               &_CommonReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CommonReq& a, CommonReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CommonReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommonReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommonReq* New() const final {
    return CreateMaybeMessage<CommonReq>(nullptr);
  }

  CommonReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommonReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommonReq& from);
  void MergeFrom(const CommonReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommonReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CommonReq";
  }
  protected:
  explicit CommonReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParam1FieldNumber = 1,
  };
  // uint32 Param1 = 1;
  void clear_param1();
  ::PROTOBUF_NAMESPACE_ID::uint32 param1() const;
  void set_param1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_param1() const;
  void _internal_set_param1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CommonReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 param1_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class CommonAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CommonAck) */ {
 public:
  inline CommonAck() : CommonAck(nullptr) {};
  virtual ~CommonAck();

  CommonAck(const CommonAck& from);
  CommonAck(CommonAck&& from) noexcept
    : CommonAck() {
    *this = ::std::move(from);
  }

  inline CommonAck& operator=(const CommonAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommonAck& operator=(CommonAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommonAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommonAck* internal_default_instance() {
    return reinterpret_cast<const CommonAck*>(
               &_CommonAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CommonAck& a, CommonAck& b) {
    a.Swap(&b);
  }
  inline void Swap(CommonAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommonAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommonAck* New() const final {
    return CreateMaybeMessage<CommonAck>(nullptr);
  }

  CommonAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommonAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommonAck& from);
  void MergeFrom(const CommonAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommonAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CommonAck";
  }
  protected:
  explicit CommonAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CommonAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class BroadMessageNotify PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:BroadMessageNotify) */ {
 public:
  inline BroadMessageNotify() : BroadMessageNotify(nullptr) {};
  virtual ~BroadMessageNotify();

  BroadMessageNotify(const BroadMessageNotify& from);
  BroadMessageNotify(BroadMessageNotify&& from) noexcept
    : BroadMessageNotify() {
    *this = ::std::move(from);
  }

  inline BroadMessageNotify& operator=(const BroadMessageNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline BroadMessageNotify& operator=(BroadMessageNotify&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BroadMessageNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BroadMessageNotify* internal_default_instance() {
    return reinterpret_cast<const BroadMessageNotify*>(
               &_BroadMessageNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(BroadMessageNotify& a, BroadMessageNotify& b) {
    a.Swap(&b);
  }
  inline void Swap(BroadMessageNotify* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BroadMessageNotify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BroadMessageNotify* New() const final {
    return CreateMaybeMessage<BroadMessageNotify>(nullptr);
  }

  BroadMessageNotify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BroadMessageNotify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BroadMessageNotify& from);
  void MergeFrom(const BroadMessageNotify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BroadMessageNotify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "BroadMessageNotify";
  }
  protected:
  explicit BroadMessageNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnIDFieldNumber = 2,
    kMsgDataFieldNumber = 3,
    kMsgIDFieldNumber = 1,
  };
  // repeated uint32 ConnID = 2;
  int connid_size() const;
  private:
  int _internal_connid_size() const;
  public:
  void clear_connid();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_connid(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_connid() const;
  void _internal_add_connid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_connid();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 connid(int index) const;
  void set_connid(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_connid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      connid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_connid();

  // bytes MsgData = 3;
  void clear_msgdata();
  const std::string& msgdata() const;
  void set_msgdata(const std::string& value);
  void set_msgdata(std::string&& value);
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  std::string* mutable_msgdata();
  std::string* release_msgdata();
  void set_allocated_msgdata(std::string* msgdata);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_msgdata();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_msgdata(
      std::string* msgdata);
  private:
  const std::string& _internal_msgdata() const;
  void _internal_set_msgdata(const std::string& value);
  std::string* _internal_mutable_msgdata();
  public:

  // uint32 MsgID = 1;
  void clear_msgid();
  ::PROTOBUF_NAMESPACE_ID::uint32 msgid() const;
  void set_msgid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_msgid() const;
  void _internal_set_msgid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:BroadMessageNotify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > connid_;
  mutable std::atomic<int> _connid_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msgdata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 msgid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class LogicRegToLoginReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:LogicRegToLoginReq) */ {
 public:
  inline LogicRegToLoginReq() : LogicRegToLoginReq(nullptr) {};
  virtual ~LogicRegToLoginReq();

  LogicRegToLoginReq(const LogicRegToLoginReq& from);
  LogicRegToLoginReq(LogicRegToLoginReq&& from) noexcept
    : LogicRegToLoginReq() {
    *this = ::std::move(from);
  }

  inline LogicRegToLoginReq& operator=(const LogicRegToLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogicRegToLoginReq& operator=(LogicRegToLoginReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogicRegToLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogicRegToLoginReq* internal_default_instance() {
    return reinterpret_cast<const LogicRegToLoginReq*>(
               &_LogicRegToLoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(LogicRegToLoginReq& a, LogicRegToLoginReq& b) {
    a.Swap(&b);
  }
  inline void Swap(LogicRegToLoginReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogicRegToLoginReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogicRegToLoginReq* New() const final {
    return CreateMaybeMessage<LogicRegToLoginReq>(nullptr);
  }

  LogicRegToLoginReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogicRegToLoginReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogicRegToLoginReq& from);
  void MergeFrom(const LogicRegToLoginReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogicRegToLoginReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "LogicRegToLoginReq";
  }
  protected:
  explicit LogicRegToLoginReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerNameFieldNumber = 2,
    kSvrInnerIpFieldNumber = 3,
    kServerIDFieldNumber = 1,
    kServerPortFieldNumber = 4,
    kHttpPortFieldNumber = 5,
  };
  // string ServerName = 2;
  void clear_servername();
  const std::string& servername() const;
  void set_servername(const std::string& value);
  void set_servername(std::string&& value);
  void set_servername(const char* value);
  void set_servername(const char* value, size_t size);
  std::string* mutable_servername();
  std::string* release_servername();
  void set_allocated_servername(std::string* servername);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_servername();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_servername(
      std::string* servername);
  private:
  const std::string& _internal_servername() const;
  void _internal_set_servername(const std::string& value);
  std::string* _internal_mutable_servername();
  public:

  // string SvrInnerIp = 3;
  void clear_svrinnerip();
  const std::string& svrinnerip() const;
  void set_svrinnerip(const std::string& value);
  void set_svrinnerip(std::string&& value);
  void set_svrinnerip(const char* value);
  void set_svrinnerip(const char* value, size_t size);
  std::string* mutable_svrinnerip();
  std::string* release_svrinnerip();
  void set_allocated_svrinnerip(std::string* svrinnerip);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_svrinnerip();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_svrinnerip(
      std::string* svrinnerip);
  private:
  const std::string& _internal_svrinnerip() const;
  void _internal_set_svrinnerip(const std::string& value);
  std::string* _internal_mutable_svrinnerip();
  public:

  // int32 ServerID = 1;
  void clear_serverid();
  ::PROTOBUF_NAMESPACE_ID::int32 serverid() const;
  void set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverid() const;
  void _internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ServerPort = 4;
  void clear_serverport();
  ::PROTOBUF_NAMESPACE_ID::int32 serverport() const;
  void set_serverport(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverport() const;
  void _internal_set_serverport(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 HttpPort = 5;
  void clear_httpport();
  ::PROTOBUF_NAMESPACE_ID::int32 httpport() const;
  void set_httpport(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_httpport() const;
  void _internal_set_httpport(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:LogicRegToLoginReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr servername_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr svrinnerip_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverid_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverport_;
  ::PROTOBUF_NAMESPACE_ID::int32 httpport_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class LogicRegToLoginAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:LogicRegToLoginAck) */ {
 public:
  inline LogicRegToLoginAck() : LogicRegToLoginAck(nullptr) {};
  virtual ~LogicRegToLoginAck();

  LogicRegToLoginAck(const LogicRegToLoginAck& from);
  LogicRegToLoginAck(LogicRegToLoginAck&& from) noexcept
    : LogicRegToLoginAck() {
    *this = ::std::move(from);
  }

  inline LogicRegToLoginAck& operator=(const LogicRegToLoginAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogicRegToLoginAck& operator=(LogicRegToLoginAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogicRegToLoginAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogicRegToLoginAck* internal_default_instance() {
    return reinterpret_cast<const LogicRegToLoginAck*>(
               &_LogicRegToLoginAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(LogicRegToLoginAck& a, LogicRegToLoginAck& b) {
    a.Swap(&b);
  }
  inline void Swap(LogicRegToLoginAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogicRegToLoginAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogicRegToLoginAck* New() const final {
    return CreateMaybeMessage<LogicRegToLoginAck>(nullptr);
  }

  LogicRegToLoginAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogicRegToLoginAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogicRegToLoginAck& from);
  void MergeFrom(const LogicRegToLoginAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogicRegToLoginAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "LogicRegToLoginAck";
  }
  protected:
  explicit LogicRegToLoginAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNewSvrNameFieldNumber = 2,
    kSvrOpenTimeFieldNumber = 3,
    kRetCodeFieldNumber = 1,
  };
  // string NewSvrName = 2;
  void clear_newsvrname();
  const std::string& newsvrname() const;
  void set_newsvrname(const std::string& value);
  void set_newsvrname(std::string&& value);
  void set_newsvrname(const char* value);
  void set_newsvrname(const char* value, size_t size);
  std::string* mutable_newsvrname();
  std::string* release_newsvrname();
  void set_allocated_newsvrname(std::string* newsvrname);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_newsvrname();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_newsvrname(
      std::string* newsvrname);
  private:
  const std::string& _internal_newsvrname() const;
  void _internal_set_newsvrname(const std::string& value);
  std::string* _internal_mutable_newsvrname();
  public:

  // uint64 SvrOpenTime = 3;
  void clear_svropentime();
  ::PROTOBUF_NAMESPACE_ID::uint64 svropentime() const;
  void set_svropentime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_svropentime() const;
  void _internal_set_svropentime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:LogicRegToLoginAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr newsvrname_;
  ::PROTOBUF_NAMESPACE_ID::uint64 svropentime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class LogicRegToDbSvrReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:LogicRegToDbSvrReq) */ {
 public:
  inline LogicRegToDbSvrReq() : LogicRegToDbSvrReq(nullptr) {};
  virtual ~LogicRegToDbSvrReq();

  LogicRegToDbSvrReq(const LogicRegToDbSvrReq& from);
  LogicRegToDbSvrReq(LogicRegToDbSvrReq&& from) noexcept
    : LogicRegToDbSvrReq() {
    *this = ::std::move(from);
  }

  inline LogicRegToDbSvrReq& operator=(const LogicRegToDbSvrReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogicRegToDbSvrReq& operator=(LogicRegToDbSvrReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogicRegToDbSvrReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogicRegToDbSvrReq* internal_default_instance() {
    return reinterpret_cast<const LogicRegToDbSvrReq*>(
               &_LogicRegToDbSvrReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(LogicRegToDbSvrReq& a, LogicRegToDbSvrReq& b) {
    a.Swap(&b);
  }
  inline void Swap(LogicRegToDbSvrReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogicRegToDbSvrReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogicRegToDbSvrReq* New() const final {
    return CreateMaybeMessage<LogicRegToDbSvrReq>(nullptr);
  }

  LogicRegToDbSvrReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogicRegToDbSvrReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogicRegToDbSvrReq& from);
  void MergeFrom(const LogicRegToDbSvrReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogicRegToDbSvrReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "LogicRegToDbSvrReq";
  }
  protected:
  explicit LogicRegToDbSvrReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerNameFieldNumber = 2,
    kServerIDFieldNumber = 1,
    kProcessIDFieldNumber = 3,
  };
  // string ServerName = 2;
  void clear_servername();
  const std::string& servername() const;
  void set_servername(const std::string& value);
  void set_servername(std::string&& value);
  void set_servername(const char* value);
  void set_servername(const char* value, size_t size);
  std::string* mutable_servername();
  std::string* release_servername();
  void set_allocated_servername(std::string* servername);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_servername();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_servername(
      std::string* servername);
  private:
  const std::string& _internal_servername() const;
  void _internal_set_servername(const std::string& value);
  std::string* _internal_mutable_servername();
  public:

  // int32 ServerID = 1;
  void clear_serverid();
  ::PROTOBUF_NAMESPACE_ID::int32 serverid() const;
  void set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverid() const;
  void _internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 ProcessID = 3;
  void clear_processid();
  ::PROTOBUF_NAMESPACE_ID::uint32 processid() const;
  void set_processid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_processid() const;
  void _internal_set_processid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:LogicRegToDbSvrReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr servername_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 processid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class LogicRegToDbSvrAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:LogicRegToDbSvrAck) */ {
 public:
  inline LogicRegToDbSvrAck() : LogicRegToDbSvrAck(nullptr) {};
  virtual ~LogicRegToDbSvrAck();

  LogicRegToDbSvrAck(const LogicRegToDbSvrAck& from);
  LogicRegToDbSvrAck(LogicRegToDbSvrAck&& from) noexcept
    : LogicRegToDbSvrAck() {
    *this = ::std::move(from);
  }

  inline LogicRegToDbSvrAck& operator=(const LogicRegToDbSvrAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogicRegToDbSvrAck& operator=(LogicRegToDbSvrAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogicRegToDbSvrAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogicRegToDbSvrAck* internal_default_instance() {
    return reinterpret_cast<const LogicRegToDbSvrAck*>(
               &_LogicRegToDbSvrAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(LogicRegToDbSvrAck& a, LogicRegToDbSvrAck& b) {
    a.Swap(&b);
  }
  inline void Swap(LogicRegToDbSvrAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogicRegToDbSvrAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogicRegToDbSvrAck* New() const final {
    return CreateMaybeMessage<LogicRegToDbSvrAck>(nullptr);
  }

  LogicRegToDbSvrAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogicRegToDbSvrAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogicRegToDbSvrAck& from);
  void MergeFrom(const LogicRegToDbSvrAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogicRegToDbSvrAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "LogicRegToDbSvrAck";
  }
  protected:
  explicit LogicRegToDbSvrAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:LogicRegToDbSvrAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class LogicUpdateInfoReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:LogicUpdateInfoReq) */ {
 public:
  inline LogicUpdateInfoReq() : LogicUpdateInfoReq(nullptr) {};
  virtual ~LogicUpdateInfoReq();

  LogicUpdateInfoReq(const LogicUpdateInfoReq& from);
  LogicUpdateInfoReq(LogicUpdateInfoReq&& from) noexcept
    : LogicUpdateInfoReq() {
    *this = ::std::move(from);
  }

  inline LogicUpdateInfoReq& operator=(const LogicUpdateInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogicUpdateInfoReq& operator=(LogicUpdateInfoReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogicUpdateInfoReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogicUpdateInfoReq* internal_default_instance() {
    return reinterpret_cast<const LogicUpdateInfoReq*>(
               &_LogicUpdateInfoReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(LogicUpdateInfoReq& a, LogicUpdateInfoReq& b) {
    a.Swap(&b);
  }
  inline void Swap(LogicUpdateInfoReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogicUpdateInfoReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogicUpdateInfoReq* New() const final {
    return CreateMaybeMessage<LogicUpdateInfoReq>(nullptr);
  }

  LogicUpdateInfoReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogicUpdateInfoReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogicUpdateInfoReq& from);
  void MergeFrom(const LogicUpdateInfoReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogicUpdateInfoReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "LogicUpdateInfoReq";
  }
  protected:
  explicit LogicUpdateInfoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerNameFieldNumber = 2,
    kServerIDFieldNumber = 1,
    kMaxOnlineFieldNumber = 3,
    kCurOnlineFieldNumber = 4,
    kTotalNumFieldNumber = 5,
    kCacheNumFieldNumber = 6,
    kStatusFieldNumber = 7,
    kDbErrCntFieldNumber = 8,
  };
  // string ServerName = 2;
  void clear_servername();
  const std::string& servername() const;
  void set_servername(const std::string& value);
  void set_servername(std::string&& value);
  void set_servername(const char* value);
  void set_servername(const char* value, size_t size);
  std::string* mutable_servername();
  std::string* release_servername();
  void set_allocated_servername(std::string* servername);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_servername();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_servername(
      std::string* servername);
  private:
  const std::string& _internal_servername() const;
  void _internal_set_servername(const std::string& value);
  std::string* _internal_mutable_servername();
  public:

  // int32 ServerID = 1;
  void clear_serverid();
  ::PROTOBUF_NAMESPACE_ID::int32 serverid() const;
  void set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serverid() const;
  void _internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 MaxOnline = 3;
  void clear_maxonline();
  ::PROTOBUF_NAMESPACE_ID::int32 maxonline() const;
  void set_maxonline(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_maxonline() const;
  void _internal_set_maxonline(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CurOnline = 4;
  void clear_curonline();
  ::PROTOBUF_NAMESPACE_ID::int32 curonline() const;
  void set_curonline(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_curonline() const;
  void _internal_set_curonline(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 TotalNum = 5;
  void clear_totalnum();
  ::PROTOBUF_NAMESPACE_ID::int32 totalnum() const;
  void set_totalnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_totalnum() const;
  void _internal_set_totalnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 CacheNum = 6;
  void clear_cachenum();
  ::PROTOBUF_NAMESPACE_ID::int32 cachenum() const;
  void set_cachenum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cachenum() const;
  void _internal_set_cachenum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 Status = 7;
  void clear_status();
  ::PROTOBUF_NAMESPACE_ID::int32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_status() const;
  void _internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 DbErrCnt = 8;
  void clear_dberrcnt();
  ::PROTOBUF_NAMESPACE_ID::int32 dberrcnt() const;
  void set_dberrcnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dberrcnt() const;
  void _internal_set_dberrcnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:LogicUpdateInfoReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr servername_;
  ::PROTOBUF_NAMESPACE_ID::int32 serverid_;
  ::PROTOBUF_NAMESPACE_ID::int32 maxonline_;
  ::PROTOBUF_NAMESPACE_ID::int32 curonline_;
  ::PROTOBUF_NAMESPACE_ID::int32 totalnum_;
  ::PROTOBUF_NAMESPACE_ID::int32 cachenum_;
  ::PROTOBUF_NAMESPACE_ID::int32 status_;
  ::PROTOBUF_NAMESPACE_ID::int32 dberrcnt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class LogicUpdateInfoAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:LogicUpdateInfoAck) */ {
 public:
  inline LogicUpdateInfoAck() : LogicUpdateInfoAck(nullptr) {};
  virtual ~LogicUpdateInfoAck();

  LogicUpdateInfoAck(const LogicUpdateInfoAck& from);
  LogicUpdateInfoAck(LogicUpdateInfoAck&& from) noexcept
    : LogicUpdateInfoAck() {
    *this = ::std::move(from);
  }

  inline LogicUpdateInfoAck& operator=(const LogicUpdateInfoAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogicUpdateInfoAck& operator=(LogicUpdateInfoAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LogicUpdateInfoAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogicUpdateInfoAck* internal_default_instance() {
    return reinterpret_cast<const LogicUpdateInfoAck*>(
               &_LogicUpdateInfoAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(LogicUpdateInfoAck& a, LogicUpdateInfoAck& b) {
    a.Swap(&b);
  }
  inline void Swap(LogicUpdateInfoAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogicUpdateInfoAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LogicUpdateInfoAck* New() const final {
    return CreateMaybeMessage<LogicUpdateInfoAck>(nullptr);
  }

  LogicUpdateInfoAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LogicUpdateInfoAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LogicUpdateInfoAck& from);
  void MergeFrom(const LogicUpdateInfoAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogicUpdateInfoAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "LogicUpdateInfoAck";
  }
  protected:
  explicit LogicUpdateInfoAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSvrOpenTimeFieldNumber = 2,
    kRetCodeFieldNumber = 1,
  };
  // uint64 SvrOpenTime = 2;
  void clear_svropentime();
  ::PROTOBUF_NAMESPACE_ID::uint64 svropentime() const;
  void set_svropentime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_svropentime() const;
  void _internal_set_svropentime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:LogicUpdateInfoAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 svropentime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class SetupEquipReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SetupEquipReq) */ {
 public:
  inline SetupEquipReq() : SetupEquipReq(nullptr) {};
  virtual ~SetupEquipReq();

  SetupEquipReq(const SetupEquipReq& from);
  SetupEquipReq(SetupEquipReq&& from) noexcept
    : SetupEquipReq() {
    *this = ::std::move(from);
  }

  inline SetupEquipReq& operator=(const SetupEquipReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetupEquipReq& operator=(SetupEquipReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetupEquipReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupEquipReq* internal_default_instance() {
    return reinterpret_cast<const SetupEquipReq*>(
               &_SetupEquipReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(SetupEquipReq& a, SetupEquipReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetupEquipReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetupEquipReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetupEquipReq* New() const final {
    return CreateMaybeMessage<SetupEquipReq>(nullptr);
  }

  SetupEquipReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetupEquipReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetupEquipReq& from);
  void MergeFrom(const SetupEquipReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetupEquipReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SetupEquipReq";
  }
  protected:
  explicit SetupEquipReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEquipGuidFieldNumber = 1,
    kBagGuidFieldNumber = 2,
  };
  // uint64 EquipGuid = 1;
  void clear_equipguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 equipguid() const;
  void set_equipguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_equipguid() const;
  void _internal_set_equipguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 BagGuid = 2;
  void clear_bagguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 bagguid() const;
  void set_bagguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bagguid() const;
  void _internal_set_bagguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SetupEquipReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 equipguid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 bagguid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class SetupEquipAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SetupEquipAck) */ {
 public:
  inline SetupEquipAck() : SetupEquipAck(nullptr) {};
  virtual ~SetupEquipAck();

  SetupEquipAck(const SetupEquipAck& from);
  SetupEquipAck(SetupEquipAck&& from) noexcept
    : SetupEquipAck() {
    *this = ::std::move(from);
  }

  inline SetupEquipAck& operator=(const SetupEquipAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetupEquipAck& operator=(SetupEquipAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetupEquipAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupEquipAck* internal_default_instance() {
    return reinterpret_cast<const SetupEquipAck*>(
               &_SetupEquipAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(SetupEquipAck& a, SetupEquipAck& b) {
    a.Swap(&b);
  }
  inline void Swap(SetupEquipAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetupEquipAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetupEquipAck* New() const final {
    return CreateMaybeMessage<SetupEquipAck>(nullptr);
  }

  SetupEquipAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetupEquipAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetupEquipAck& from);
  void MergeFrom(const SetupEquipAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetupEquipAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SetupEquipAck";
  }
  protected:
  explicit SetupEquipAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SetupEquipAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class Msg_GiftCodeReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_GiftCodeReq) */ {
 public:
  inline Msg_GiftCodeReq() : Msg_GiftCodeReq(nullptr) {};
  virtual ~Msg_GiftCodeReq();

  Msg_GiftCodeReq(const Msg_GiftCodeReq& from);
  Msg_GiftCodeReq(Msg_GiftCodeReq&& from) noexcept
    : Msg_GiftCodeReq() {
    *this = ::std::move(from);
  }

  inline Msg_GiftCodeReq& operator=(const Msg_GiftCodeReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_GiftCodeReq& operator=(Msg_GiftCodeReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_GiftCodeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_GiftCodeReq* internal_default_instance() {
    return reinterpret_cast<const Msg_GiftCodeReq*>(
               &_Msg_GiftCodeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(Msg_GiftCodeReq& a, Msg_GiftCodeReq& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_GiftCodeReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_GiftCodeReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_GiftCodeReq* New() const final {
    return CreateMaybeMessage<Msg_GiftCodeReq>(nullptr);
  }

  Msg_GiftCodeReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_GiftCodeReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_GiftCodeReq& from);
  void MergeFrom(const Msg_GiftCodeReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_GiftCodeReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_GiftCodeReq";
  }
  protected:
  explicit Msg_GiftCodeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGiftCodeFieldNumber = 2,
    kRoleIDFieldNumber = 1,
    kAccountIDFieldNumber = 4,
    kChannelFieldNumber = 3,
    kAreaIDFieldNumber = 5,
  };
  // string GiftCode = 2;
  void clear_giftcode();
  const std::string& giftcode() const;
  void set_giftcode(const std::string& value);
  void set_giftcode(std::string&& value);
  void set_giftcode(const char* value);
  void set_giftcode(const char* value, size_t size);
  std::string* mutable_giftcode();
  std::string* release_giftcode();
  void set_allocated_giftcode(std::string* giftcode);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_giftcode();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_giftcode(
      std::string* giftcode);
  private:
  const std::string& _internal_giftcode() const;
  void _internal_set_giftcode(const std::string& value);
  std::string* _internal_mutable_giftcode();
  public:

  // uint64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 AccountID = 4;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 Channel = 3;
  void clear_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel() const;
  void set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel() const;
  void _internal_set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 AreaID = 5;
  void clear_areaid();
  ::PROTOBUF_NAMESPACE_ID::int32 areaid() const;
  void set_areaid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_areaid() const;
  void _internal_set_areaid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_GiftCodeReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr giftcode_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_;
  ::PROTOBUF_NAMESPACE_ID::int32 areaid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class Msg_GiftCodeAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_GiftCodeAck) */ {
 public:
  inline Msg_GiftCodeAck() : Msg_GiftCodeAck(nullptr) {};
  virtual ~Msg_GiftCodeAck();

  Msg_GiftCodeAck(const Msg_GiftCodeAck& from);
  Msg_GiftCodeAck(Msg_GiftCodeAck&& from) noexcept
    : Msg_GiftCodeAck() {
    *this = ::std::move(from);
  }

  inline Msg_GiftCodeAck& operator=(const Msg_GiftCodeAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_GiftCodeAck& operator=(Msg_GiftCodeAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_GiftCodeAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_GiftCodeAck* internal_default_instance() {
    return reinterpret_cast<const Msg_GiftCodeAck*>(
               &_Msg_GiftCodeAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(Msg_GiftCodeAck& a, Msg_GiftCodeAck& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_GiftCodeAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_GiftCodeAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_GiftCodeAck* New() const final {
    return CreateMaybeMessage<Msg_GiftCodeAck>(nullptr);
  }

  Msg_GiftCodeAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_GiftCodeAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_GiftCodeAck& from);
  void MergeFrom(const Msg_GiftCodeAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_GiftCodeAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_GiftCodeAck";
  }
  protected:
  explicit Msg_GiftCodeAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 3,
    kRoleIDFieldNumber = 2,
    kRetCodeFieldNumber = 1,
  };
  // repeated .ItemData items = 3;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::ItemData* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ItemData >*
      mutable_items();
  private:
  const ::ItemData& _internal_items(int index) const;
  ::ItemData* _internal_add_items();
  public:
  const ::ItemData& items(int index) const;
  ::ItemData* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ItemData >&
      items() const;

  // uint64 RoleID = 2;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_GiftCodeAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ItemData > items_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UnsetEquipReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UnsetEquipReq) */ {
 public:
  inline UnsetEquipReq() : UnsetEquipReq(nullptr) {};
  virtual ~UnsetEquipReq();

  UnsetEquipReq(const UnsetEquipReq& from);
  UnsetEquipReq(UnsetEquipReq&& from) noexcept
    : UnsetEquipReq() {
    *this = ::std::move(from);
  }

  inline UnsetEquipReq& operator=(const UnsetEquipReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsetEquipReq& operator=(UnsetEquipReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsetEquipReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsetEquipReq* internal_default_instance() {
    return reinterpret_cast<const UnsetEquipReq*>(
               &_UnsetEquipReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(UnsetEquipReq& a, UnsetEquipReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsetEquipReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsetEquipReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsetEquipReq* New() const final {
    return CreateMaybeMessage<UnsetEquipReq>(nullptr);
  }

  UnsetEquipReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsetEquipReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsetEquipReq& from);
  void MergeFrom(const UnsetEquipReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsetEquipReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UnsetEquipReq";
  }
  protected:
  explicit UnsetEquipReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEquipGuidFieldNumber = 1,
  };
  // uint64 EquipGuid = 1;
  void clear_equipguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 equipguid() const;
  void set_equipguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_equipguid() const;
  void _internal_set_equipguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:UnsetEquipReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 equipguid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UnsetEquipAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UnsetEquipAck) */ {
 public:
  inline UnsetEquipAck() : UnsetEquipAck(nullptr) {};
  virtual ~UnsetEquipAck();

  UnsetEquipAck(const UnsetEquipAck& from);
  UnsetEquipAck(UnsetEquipAck&& from) noexcept
    : UnsetEquipAck() {
    *this = ::std::move(from);
  }

  inline UnsetEquipAck& operator=(const UnsetEquipAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsetEquipAck& operator=(UnsetEquipAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsetEquipAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsetEquipAck* internal_default_instance() {
    return reinterpret_cast<const UnsetEquipAck*>(
               &_UnsetEquipAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(UnsetEquipAck& a, UnsetEquipAck& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsetEquipAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsetEquipAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsetEquipAck* New() const final {
    return CreateMaybeMessage<UnsetEquipAck>(nullptr);
  }

  UnsetEquipAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsetEquipAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsetEquipAck& from);
  void MergeFrom(const UnsetEquipAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsetEquipAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UnsetEquipAck";
  }
  protected:
  explicit UnsetEquipAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:UnsetEquipAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class SetupGemReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SetupGemReq) */ {
 public:
  inline SetupGemReq() : SetupGemReq(nullptr) {};
  virtual ~SetupGemReq();

  SetupGemReq(const SetupGemReq& from);
  SetupGemReq(SetupGemReq&& from) noexcept
    : SetupGemReq() {
    *this = ::std::move(from);
  }

  inline SetupGemReq& operator=(const SetupGemReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetupGemReq& operator=(SetupGemReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetupGemReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupGemReq* internal_default_instance() {
    return reinterpret_cast<const SetupGemReq*>(
               &_SetupGemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(SetupGemReq& a, SetupGemReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetupGemReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetupGemReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetupGemReq* New() const final {
    return CreateMaybeMessage<SetupGemReq>(nullptr);
  }

  SetupGemReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetupGemReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetupGemReq& from);
  void MergeFrom(const SetupGemReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetupGemReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SetupGemReq";
  }
  protected:
  explicit SetupGemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGemGuidFieldNumber = 1,
    kBagGuidFieldNumber = 2,
    kTargetPosFieldNumber = 3,
  };
  // uint64 GemGuid = 1;
  void clear_gemguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 gemguid() const;
  void set_gemguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gemguid() const;
  void _internal_set_gemguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 BagGuid = 2;
  void clear_bagguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 bagguid() const;
  void set_bagguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bagguid() const;
  void _internal_set_bagguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 TargetPos = 3;
  void clear_targetpos();
  ::PROTOBUF_NAMESPACE_ID::int32 targetpos() const;
  void set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_targetpos() const;
  void _internal_set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:SetupGemReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gemguid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 bagguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 targetpos_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class SetupGemAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SetupGemAck) */ {
 public:
  inline SetupGemAck() : SetupGemAck(nullptr) {};
  virtual ~SetupGemAck();

  SetupGemAck(const SetupGemAck& from);
  SetupGemAck(SetupGemAck&& from) noexcept
    : SetupGemAck() {
    *this = ::std::move(from);
  }

  inline SetupGemAck& operator=(const SetupGemAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetupGemAck& operator=(SetupGemAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetupGemAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupGemAck* internal_default_instance() {
    return reinterpret_cast<const SetupGemAck*>(
               &_SetupGemAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(SetupGemAck& a, SetupGemAck& b) {
    a.Swap(&b);
  }
  inline void Swap(SetupGemAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetupGemAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetupGemAck* New() const final {
    return CreateMaybeMessage<SetupGemAck>(nullptr);
  }

  SetupGemAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetupGemAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetupGemAck& from);
  void MergeFrom(const SetupGemAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetupGemAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SetupGemAck";
  }
  protected:
  explicit SetupGemAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SetupGemAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UnsetGemReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UnsetGemReq) */ {
 public:
  inline UnsetGemReq() : UnsetGemReq(nullptr) {};
  virtual ~UnsetGemReq();

  UnsetGemReq(const UnsetGemReq& from);
  UnsetGemReq(UnsetGemReq&& from) noexcept
    : UnsetGemReq() {
    *this = ::std::move(from);
  }

  inline UnsetGemReq& operator=(const UnsetGemReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsetGemReq& operator=(UnsetGemReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsetGemReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsetGemReq* internal_default_instance() {
    return reinterpret_cast<const UnsetGemReq*>(
               &_UnsetGemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(UnsetGemReq& a, UnsetGemReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsetGemReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsetGemReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsetGemReq* New() const final {
    return CreateMaybeMessage<UnsetGemReq>(nullptr);
  }

  UnsetGemReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsetGemReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsetGemReq& from);
  void MergeFrom(const UnsetGemReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsetGemReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UnsetGemReq";
  }
  protected:
  explicit UnsetGemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGemGuidFieldNumber = 1,
  };
  // uint64 GemGuid = 1;
  void clear_gemguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 gemguid() const;
  void set_gemguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gemguid() const;
  void _internal_set_gemguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:UnsetGemReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gemguid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UnsetGemAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UnsetGemAck) */ {
 public:
  inline UnsetGemAck() : UnsetGemAck(nullptr) {};
  virtual ~UnsetGemAck();

  UnsetGemAck(const UnsetGemAck& from);
  UnsetGemAck(UnsetGemAck&& from) noexcept
    : UnsetGemAck() {
    *this = ::std::move(from);
  }

  inline UnsetGemAck& operator=(const UnsetGemAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsetGemAck& operator=(UnsetGemAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsetGemAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsetGemAck* internal_default_instance() {
    return reinterpret_cast<const UnsetGemAck*>(
               &_UnsetGemAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(UnsetGemAck& a, UnsetGemAck& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsetGemAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsetGemAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsetGemAck* New() const final {
    return CreateMaybeMessage<UnsetGemAck>(nullptr);
  }

  UnsetGemAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsetGemAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsetGemAck& from);
  void MergeFrom(const UnsetGemAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsetGemAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UnsetGemAck";
  }
  protected:
  explicit UnsetGemAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:UnsetGemAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class SetupPartnerReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SetupPartnerReq) */ {
 public:
  inline SetupPartnerReq() : SetupPartnerReq(nullptr) {};
  virtual ~SetupPartnerReq();

  SetupPartnerReq(const SetupPartnerReq& from);
  SetupPartnerReq(SetupPartnerReq&& from) noexcept
    : SetupPartnerReq() {
    *this = ::std::move(from);
  }

  inline SetupPartnerReq& operator=(const SetupPartnerReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetupPartnerReq& operator=(SetupPartnerReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetupPartnerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupPartnerReq* internal_default_instance() {
    return reinterpret_cast<const SetupPartnerReq*>(
               &_SetupPartnerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(SetupPartnerReq& a, SetupPartnerReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetupPartnerReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetupPartnerReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetupPartnerReq* New() const final {
    return CreateMaybeMessage<SetupPartnerReq>(nullptr);
  }

  SetupPartnerReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetupPartnerReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetupPartnerReq& from);
  void MergeFrom(const SetupPartnerReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetupPartnerReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SetupPartnerReq";
  }
  protected:
  explicit SetupPartnerReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPartnerGuidFieldNumber = 1,
    kTargetPosFieldNumber = 2,
  };
  // uint64 PartnerGuid = 1;
  void clear_partnerguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 partnerguid() const;
  void set_partnerguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_partnerguid() const;
  void _internal_set_partnerguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 TargetPos = 2;
  void clear_targetpos();
  ::PROTOBUF_NAMESPACE_ID::int32 targetpos() const;
  void set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_targetpos() const;
  void _internal_set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:SetupPartnerReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 partnerguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 targetpos_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class SetupPartnerAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SetupPartnerAck) */ {
 public:
  inline SetupPartnerAck() : SetupPartnerAck(nullptr) {};
  virtual ~SetupPartnerAck();

  SetupPartnerAck(const SetupPartnerAck& from);
  SetupPartnerAck(SetupPartnerAck&& from) noexcept
    : SetupPartnerAck() {
    *this = ::std::move(from);
  }

  inline SetupPartnerAck& operator=(const SetupPartnerAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetupPartnerAck& operator=(SetupPartnerAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetupPartnerAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupPartnerAck* internal_default_instance() {
    return reinterpret_cast<const SetupPartnerAck*>(
               &_SetupPartnerAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(SetupPartnerAck& a, SetupPartnerAck& b) {
    a.Swap(&b);
  }
  inline void Swap(SetupPartnerAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetupPartnerAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetupPartnerAck* New() const final {
    return CreateMaybeMessage<SetupPartnerAck>(nullptr);
  }

  SetupPartnerAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetupPartnerAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetupPartnerAck& from);
  void MergeFrom(const SetupPartnerAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetupPartnerAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SetupPartnerAck";
  }
  protected:
  explicit SetupPartnerAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SetupPartnerAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UnsetPartnerReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UnsetPartnerReq) */ {
 public:
  inline UnsetPartnerReq() : UnsetPartnerReq(nullptr) {};
  virtual ~UnsetPartnerReq();

  UnsetPartnerReq(const UnsetPartnerReq& from);
  UnsetPartnerReq(UnsetPartnerReq&& from) noexcept
    : UnsetPartnerReq() {
    *this = ::std::move(from);
  }

  inline UnsetPartnerReq& operator=(const UnsetPartnerReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsetPartnerReq& operator=(UnsetPartnerReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsetPartnerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsetPartnerReq* internal_default_instance() {
    return reinterpret_cast<const UnsetPartnerReq*>(
               &_UnsetPartnerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(UnsetPartnerReq& a, UnsetPartnerReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsetPartnerReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsetPartnerReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsetPartnerReq* New() const final {
    return CreateMaybeMessage<UnsetPartnerReq>(nullptr);
  }

  UnsetPartnerReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsetPartnerReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsetPartnerReq& from);
  void MergeFrom(const UnsetPartnerReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsetPartnerReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UnsetPartnerReq";
  }
  protected:
  explicit UnsetPartnerReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetPosFieldNumber = 1,
  };
  // int32 TargetPos = 1;
  void clear_targetpos();
  ::PROTOBUF_NAMESPACE_ID::int32 targetpos() const;
  void set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_targetpos() const;
  void _internal_set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:UnsetPartnerReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 targetpos_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UnsetPartnerAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UnsetPartnerAck) */ {
 public:
  inline UnsetPartnerAck() : UnsetPartnerAck(nullptr) {};
  virtual ~UnsetPartnerAck();

  UnsetPartnerAck(const UnsetPartnerAck& from);
  UnsetPartnerAck(UnsetPartnerAck&& from) noexcept
    : UnsetPartnerAck() {
    *this = ::std::move(from);
  }

  inline UnsetPartnerAck& operator=(const UnsetPartnerAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsetPartnerAck& operator=(UnsetPartnerAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsetPartnerAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsetPartnerAck* internal_default_instance() {
    return reinterpret_cast<const UnsetPartnerAck*>(
               &_UnsetPartnerAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(UnsetPartnerAck& a, UnsetPartnerAck& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsetPartnerAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsetPartnerAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsetPartnerAck* New() const final {
    return CreateMaybeMessage<UnsetPartnerAck>(nullptr);
  }

  UnsetPartnerAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsetPartnerAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsetPartnerAck& from);
  void MergeFrom(const UnsetPartnerAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsetPartnerAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UnsetPartnerAck";
  }
  protected:
  explicit UnsetPartnerAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:UnsetPartnerAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class SetupMountReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SetupMountReq) */ {
 public:
  inline SetupMountReq() : SetupMountReq(nullptr) {};
  virtual ~SetupMountReq();

  SetupMountReq(const SetupMountReq& from);
  SetupMountReq(SetupMountReq&& from) noexcept
    : SetupMountReq() {
    *this = ::std::move(from);
  }

  inline SetupMountReq& operator=(const SetupMountReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetupMountReq& operator=(SetupMountReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetupMountReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupMountReq* internal_default_instance() {
    return reinterpret_cast<const SetupMountReq*>(
               &_SetupMountReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(SetupMountReq& a, SetupMountReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetupMountReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetupMountReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetupMountReq* New() const final {
    return CreateMaybeMessage<SetupMountReq>(nullptr);
  }

  SetupMountReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetupMountReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetupMountReq& from);
  void MergeFrom(const SetupMountReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetupMountReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SetupMountReq";
  }
  protected:
  explicit SetupMountReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMountGuidFieldNumber = 1,
    kTargetPosFieldNumber = 2,
  };
  // uint64 MountGuid = 1;
  void clear_mountguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 mountguid() const;
  void set_mountguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mountguid() const;
  void _internal_set_mountguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 TargetPos = 2;
  void clear_targetpos();
  ::PROTOBUF_NAMESPACE_ID::int32 targetpos() const;
  void set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_targetpos() const;
  void _internal_set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:SetupMountReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mountguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 targetpos_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class SetupMountAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SetupMountAck) */ {
 public:
  inline SetupMountAck() : SetupMountAck(nullptr) {};
  virtual ~SetupMountAck();

  SetupMountAck(const SetupMountAck& from);
  SetupMountAck(SetupMountAck&& from) noexcept
    : SetupMountAck() {
    *this = ::std::move(from);
  }

  inline SetupMountAck& operator=(const SetupMountAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetupMountAck& operator=(SetupMountAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetupMountAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupMountAck* internal_default_instance() {
    return reinterpret_cast<const SetupMountAck*>(
               &_SetupMountAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(SetupMountAck& a, SetupMountAck& b) {
    a.Swap(&b);
  }
  inline void Swap(SetupMountAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetupMountAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetupMountAck* New() const final {
    return CreateMaybeMessage<SetupMountAck>(nullptr);
  }

  SetupMountAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetupMountAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetupMountAck& from);
  void MergeFrom(const SetupMountAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetupMountAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SetupMountAck";
  }
  protected:
  explicit SetupMountAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SetupMountAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UnsetMountReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UnsetMountReq) */ {
 public:
  inline UnsetMountReq() : UnsetMountReq(nullptr) {};
  virtual ~UnsetMountReq();

  UnsetMountReq(const UnsetMountReq& from);
  UnsetMountReq(UnsetMountReq&& from) noexcept
    : UnsetMountReq() {
    *this = ::std::move(from);
  }

  inline UnsetMountReq& operator=(const UnsetMountReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsetMountReq& operator=(UnsetMountReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsetMountReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsetMountReq* internal_default_instance() {
    return reinterpret_cast<const UnsetMountReq*>(
               &_UnsetMountReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(UnsetMountReq& a, UnsetMountReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsetMountReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsetMountReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsetMountReq* New() const final {
    return CreateMaybeMessage<UnsetMountReq>(nullptr);
  }

  UnsetMountReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsetMountReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsetMountReq& from);
  void MergeFrom(const UnsetMountReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsetMountReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UnsetMountReq";
  }
  protected:
  explicit UnsetMountReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMountGuidFieldNumber = 1,
  };
  // uint64 MountGuid = 1;
  void clear_mountguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 mountguid() const;
  void set_mountguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mountguid() const;
  void _internal_set_mountguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:UnsetMountReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mountguid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UnsetMountAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UnsetMountAck) */ {
 public:
  inline UnsetMountAck() : UnsetMountAck(nullptr) {};
  virtual ~UnsetMountAck();

  UnsetMountAck(const UnsetMountAck& from);
  UnsetMountAck(UnsetMountAck&& from) noexcept
    : UnsetMountAck() {
    *this = ::std::move(from);
  }

  inline UnsetMountAck& operator=(const UnsetMountAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsetMountAck& operator=(UnsetMountAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsetMountAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsetMountAck* internal_default_instance() {
    return reinterpret_cast<const UnsetMountAck*>(
               &_UnsetMountAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(UnsetMountAck& a, UnsetMountAck& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsetMountAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsetMountAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsetMountAck* New() const final {
    return CreateMaybeMessage<UnsetMountAck>(nullptr);
  }

  UnsetMountAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsetMountAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsetMountAck& from);
  void MergeFrom(const UnsetMountAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsetMountAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UnsetMountAck";
  }
  protected:
  explicit UnsetMountAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:UnsetMountAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class SetupPetReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SetupPetReq) */ {
 public:
  inline SetupPetReq() : SetupPetReq(nullptr) {};
  virtual ~SetupPetReq();

  SetupPetReq(const SetupPetReq& from);
  SetupPetReq(SetupPetReq&& from) noexcept
    : SetupPetReq() {
    *this = ::std::move(from);
  }

  inline SetupPetReq& operator=(const SetupPetReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetupPetReq& operator=(SetupPetReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetupPetReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupPetReq* internal_default_instance() {
    return reinterpret_cast<const SetupPetReq*>(
               &_SetupPetReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(SetupPetReq& a, SetupPetReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SetupPetReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetupPetReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetupPetReq* New() const final {
    return CreateMaybeMessage<SetupPetReq>(nullptr);
  }

  SetupPetReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetupPetReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetupPetReq& from);
  void MergeFrom(const SetupPetReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetupPetReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SetupPetReq";
  }
  protected:
  explicit SetupPetReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPetGuidFieldNumber = 1,
  };
  // uint64 PetGuid = 1;
  void clear_petguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 petguid() const;
  void set_petguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_petguid() const;
  void _internal_set_petguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SetupPetReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 petguid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class SetupPetAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SetupPetAck) */ {
 public:
  inline SetupPetAck() : SetupPetAck(nullptr) {};
  virtual ~SetupPetAck();

  SetupPetAck(const SetupPetAck& from);
  SetupPetAck(SetupPetAck&& from) noexcept
    : SetupPetAck() {
    *this = ::std::move(from);
  }

  inline SetupPetAck& operator=(const SetupPetAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetupPetAck& operator=(SetupPetAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetupPetAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupPetAck* internal_default_instance() {
    return reinterpret_cast<const SetupPetAck*>(
               &_SetupPetAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(SetupPetAck& a, SetupPetAck& b) {
    a.Swap(&b);
  }
  inline void Swap(SetupPetAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetupPetAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetupPetAck* New() const final {
    return CreateMaybeMessage<SetupPetAck>(nullptr);
  }

  SetupPetAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetupPetAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetupPetAck& from);
  void MergeFrom(const SetupPetAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetupPetAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SetupPetAck";
  }
  protected:
  explicit SetupPetAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SetupPetAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UnsetPetReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UnsetPetReq) */ {
 public:
  inline UnsetPetReq() : UnsetPetReq(nullptr) {};
  virtual ~UnsetPetReq();

  UnsetPetReq(const UnsetPetReq& from);
  UnsetPetReq(UnsetPetReq&& from) noexcept
    : UnsetPetReq() {
    *this = ::std::move(from);
  }

  inline UnsetPetReq& operator=(const UnsetPetReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsetPetReq& operator=(UnsetPetReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsetPetReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsetPetReq* internal_default_instance() {
    return reinterpret_cast<const UnsetPetReq*>(
               &_UnsetPetReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(UnsetPetReq& a, UnsetPetReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsetPetReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsetPetReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsetPetReq* New() const final {
    return CreateMaybeMessage<UnsetPetReq>(nullptr);
  }

  UnsetPetReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsetPetReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsetPetReq& from);
  void MergeFrom(const UnsetPetReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsetPetReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UnsetPetReq";
  }
  protected:
  explicit UnsetPetReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPetGuidFieldNumber = 1,
  };
  // uint64 PetGuid = 1;
  void clear_petguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 petguid() const;
  void set_petguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_petguid() const;
  void _internal_set_petguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:UnsetPetReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 petguid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UnsetPetAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UnsetPetAck) */ {
 public:
  inline UnsetPetAck() : UnsetPetAck(nullptr) {};
  virtual ~UnsetPetAck();

  UnsetPetAck(const UnsetPetAck& from);
  UnsetPetAck(UnsetPetAck&& from) noexcept
    : UnsetPetAck() {
    *this = ::std::move(from);
  }

  inline UnsetPetAck& operator=(const UnsetPetAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsetPetAck& operator=(UnsetPetAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnsetPetAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsetPetAck* internal_default_instance() {
    return reinterpret_cast<const UnsetPetAck*>(
               &_UnsetPetAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(UnsetPetAck& a, UnsetPetAck& b) {
    a.Swap(&b);
  }
  inline void Swap(UnsetPetAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsetPetAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnsetPetAck* New() const final {
    return CreateMaybeMessage<UnsetPetAck>(nullptr);
  }

  UnsetPetAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnsetPetAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnsetPetAck& from);
  void MergeFrom(const UnsetPetAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsetPetAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UnsetPetAck";
  }
  protected:
  explicit UnsetPetAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:UnsetPetAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class StoreBuyReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:StoreBuyReq) */ {
 public:
  inline StoreBuyReq() : StoreBuyReq(nullptr) {};
  virtual ~StoreBuyReq();

  StoreBuyReq(const StoreBuyReq& from);
  StoreBuyReq(StoreBuyReq&& from) noexcept
    : StoreBuyReq() {
    *this = ::std::move(from);
  }

  inline StoreBuyReq& operator=(const StoreBuyReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline StoreBuyReq& operator=(StoreBuyReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StoreBuyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StoreBuyReq* internal_default_instance() {
    return reinterpret_cast<const StoreBuyReq*>(
               &_StoreBuyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(StoreBuyReq& a, StoreBuyReq& b) {
    a.Swap(&b);
  }
  inline void Swap(StoreBuyReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StoreBuyReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StoreBuyReq* New() const final {
    return CreateMaybeMessage<StoreBuyReq>(nullptr);
  }

  StoreBuyReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StoreBuyReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StoreBuyReq& from);
  void MergeFrom(const StoreBuyReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StoreBuyReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "StoreBuyReq";
  }
  protected:
  explicit StoreBuyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStoreTypeFieldNumber = 1,
    kStoreIDFieldNumber = 2,
    kBuyNumFieldNumber = 3,
  };
  // int32 StoreType = 1;
  void clear_storetype();
  ::PROTOBUF_NAMESPACE_ID::int32 storetype() const;
  void set_storetype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_storetype() const;
  void _internal_set_storetype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 StoreID = 2;
  void clear_storeid();
  ::PROTOBUF_NAMESPACE_ID::int32 storeid() const;
  void set_storeid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_storeid() const;
  void _internal_set_storeid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 BuyNum = 3;
  void clear_buynum();
  ::PROTOBUF_NAMESPACE_ID::int32 buynum() const;
  void set_buynum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_buynum() const;
  void _internal_set_buynum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:StoreBuyReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 storetype_;
  ::PROTOBUF_NAMESPACE_ID::int32 storeid_;
  ::PROTOBUF_NAMESPACE_ID::int32 buynum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class StoreBuyAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:StoreBuyAck) */ {
 public:
  inline StoreBuyAck() : StoreBuyAck(nullptr) {};
  virtual ~StoreBuyAck();

  StoreBuyAck(const StoreBuyAck& from);
  StoreBuyAck(StoreBuyAck&& from) noexcept
    : StoreBuyAck() {
    *this = ::std::move(from);
  }

  inline StoreBuyAck& operator=(const StoreBuyAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline StoreBuyAck& operator=(StoreBuyAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StoreBuyAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StoreBuyAck* internal_default_instance() {
    return reinterpret_cast<const StoreBuyAck*>(
               &_StoreBuyAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(StoreBuyAck& a, StoreBuyAck& b) {
    a.Swap(&b);
  }
  inline void Swap(StoreBuyAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StoreBuyAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StoreBuyAck* New() const final {
    return CreateMaybeMessage<StoreBuyAck>(nullptr);
  }

  StoreBuyAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StoreBuyAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StoreBuyAck& from);
  void MergeFrom(const StoreBuyAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StoreBuyAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "StoreBuyAck";
  }
  protected:
  explicit StoreBuyAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // uint32 RetCode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:StoreBuyAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class ObjectChangeNotify PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ObjectChangeNotify) */ {
 public:
  inline ObjectChangeNotify() : ObjectChangeNotify(nullptr) {};
  virtual ~ObjectChangeNotify();

  ObjectChangeNotify(const ObjectChangeNotify& from);
  ObjectChangeNotify(ObjectChangeNotify&& from) noexcept
    : ObjectChangeNotify() {
    *this = ::std::move(from);
  }

  inline ObjectChangeNotify& operator=(const ObjectChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectChangeNotify& operator=(ObjectChangeNotify&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectChangeNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectChangeNotify* internal_default_instance() {
    return reinterpret_cast<const ObjectChangeNotify*>(
               &_ObjectChangeNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(ObjectChangeNotify& a, ObjectChangeNotify& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectChangeNotify* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectChangeNotify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectChangeNotify* New() const final {
    return CreateMaybeMessage<ObjectChangeNotify>(nullptr);
  }

  ObjectChangeNotify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectChangeNotify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectChangeNotify& from);
  void MergeFrom(const ObjectChangeNotify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectChangeNotify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ObjectChangeNotify";
  }
  protected:
  explicit ObjectChangeNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrValueFieldNumber = 5,
    kRoleIDFieldNumber = 1,
    kIntValue1FieldNumber = 3,
    kIntValue2FieldNumber = 4,
    kChangeTypeFieldNumber = 2,
  };
  // string StrValue = 5;
  void clear_strvalue();
  const std::string& strvalue() const;
  void set_strvalue(const std::string& value);
  void set_strvalue(std::string&& value);
  void set_strvalue(const char* value);
  void set_strvalue(const char* value, size_t size);
  std::string* mutable_strvalue();
  std::string* release_strvalue();
  void set_allocated_strvalue(std::string* strvalue);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strvalue();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strvalue(
      std::string* strvalue);
  private:
  const std::string& _internal_strvalue() const;
  void _internal_set_strvalue(const std::string& value);
  std::string* _internal_mutable_strvalue();
  public:

  // int64 RoleID = 1;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::int64 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 IntValue1 = 3;
  void clear_intvalue1();
  ::PROTOBUF_NAMESPACE_ID::int64 intvalue1() const;
  void set_intvalue1(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_intvalue1() const;
  void _internal_set_intvalue1(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 IntValue2 = 4;
  void clear_intvalue2();
  ::PROTOBUF_NAMESPACE_ID::int64 intvalue2() const;
  void set_intvalue2(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_intvalue2() const;
  void _internal_set_intvalue2(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 ChangeType = 2;
  void clear_changetype();
  ::PROTOBUF_NAMESPACE_ID::int32 changetype() const;
  void set_changetype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_changetype() const;
  void _internal_set_changetype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ObjectChangeNotify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strvalue_;
  ::PROTOBUF_NAMESPACE_ID::int64 roleid_;
  ::PROTOBUF_NAMESPACE_ID::int64 intvalue1_;
  ::PROTOBUF_NAMESPACE_ID::int64 intvalue2_;
  ::PROTOBUF_NAMESPACE_ID::int32 changetype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class HitEffectItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HitEffectItem) */ {
 public:
  inline HitEffectItem() : HitEffectItem(nullptr) {};
  virtual ~HitEffectItem();

  HitEffectItem(const HitEffectItem& from);
  HitEffectItem(HitEffectItem&& from) noexcept
    : HitEffectItem() {
    *this = ::std::move(from);
  }

  inline HitEffectItem& operator=(const HitEffectItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline HitEffectItem& operator=(HitEffectItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HitEffectItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HitEffectItem* internal_default_instance() {
    return reinterpret_cast<const HitEffectItem*>(
               &_HitEffectItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(HitEffectItem& a, HitEffectItem& b) {
    a.Swap(&b);
  }
  inline void Swap(HitEffectItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HitEffectItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HitEffectItem* New() const final {
    return CreateMaybeMessage<HitEffectItem>(nullptr);
  }

  HitEffectItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HitEffectItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HitEffectItem& from);
  void MergeFrom(const HitEffectItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HitEffectItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HitEffectItem";
  }
  protected:
  explicit HitEffectItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCastGuidFieldNumber = 1,
    kTargetGuidFieldNumber = 2,
    kHurtValueFieldNumber = 3,
    kCritFieldNumber = 4,
    kHitActionIDFieldNumber = 5,
    kHitEffectIDFieldNumber = 6,
    kHitDistanceFieldNumber = 7,
  };
  // uint64 CastGuid = 1;
  void clear_castguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 castguid() const;
  void set_castguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_castguid() const;
  void _internal_set_castguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 TargetGuid = 2;
  void clear_targetguid();
  ::PROTOBUF_NAMESPACE_ID::uint64 targetguid() const;
  void set_targetguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_targetguid() const;
  void _internal_set_targetguid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 HurtValue = 3;
  void clear_hurtvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 hurtvalue() const;
  void set_hurtvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hurtvalue() const;
  void _internal_set_hurtvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool Crit = 4;
  void clear_crit();
  bool crit() const;
  void set_crit(bool value);
  private:
  bool _internal_crit() const;
  void _internal_set_crit(bool value);
  public:

  // uint32 HitActionID = 5;
  void clear_hitactionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 hitactionid() const;
  void set_hitactionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hitactionid() const;
  void _internal_set_hitactionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 HitEffectID = 6;
  void clear_hiteffectid();
  ::PROTOBUF_NAMESPACE_ID::uint32 hiteffectid() const;
  void set_hiteffectid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hiteffectid() const;
  void _internal_set_hiteffectid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float HitDistance = 7;
  void clear_hitdistance();
  float hitdistance() const;
  void set_hitdistance(float value);
  private:
  float _internal_hitdistance() const;
  void _internal_set_hitdistance(float value);
  public:

  // @@protoc_insertion_point(class_scope:HitEffectItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 castguid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 targetguid_;
  ::PROTOBUF_NAMESPACE_ID::int32 hurtvalue_;
  bool crit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hitactionid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hiteffectid_;
  float hitdistance_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class HitEffectNtf PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HitEffectNtf) */ {
 public:
  inline HitEffectNtf() : HitEffectNtf(nullptr) {};
  virtual ~HitEffectNtf();

  HitEffectNtf(const HitEffectNtf& from);
  HitEffectNtf(HitEffectNtf&& from) noexcept
    : HitEffectNtf() {
    *this = ::std::move(from);
  }

  inline HitEffectNtf& operator=(const HitEffectNtf& from) {
    CopyFrom(from);
    return *this;
  }
  inline HitEffectNtf& operator=(HitEffectNtf&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HitEffectNtf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HitEffectNtf* internal_default_instance() {
    return reinterpret_cast<const HitEffectNtf*>(
               &_HitEffectNtf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(HitEffectNtf& a, HitEffectNtf& b) {
    a.Swap(&b);
  }
  inline void Swap(HitEffectNtf* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HitEffectNtf* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HitEffectNtf* New() const final {
    return CreateMaybeMessage<HitEffectNtf>(nullptr);
  }

  HitEffectNtf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HitEffectNtf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HitEffectNtf& from);
  void MergeFrom(const HitEffectNtf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HitEffectNtf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HitEffectNtf";
  }
  protected:
  explicit HitEffectNtf(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemListFieldNumber = 1,
  };
  // repeated .HitEffectItem ItemList = 1;
  int itemlist_size() const;
  private:
  int _internal_itemlist_size() const;
  public:
  void clear_itemlist();
  ::HitEffectItem* mutable_itemlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HitEffectItem >*
      mutable_itemlist();
  private:
  const ::HitEffectItem& _internal_itemlist(int index) const;
  ::HitEffectItem* _internal_add_itemlist();
  public:
  const ::HitEffectItem& itemlist(int index) const;
  ::HitEffectItem* add_itemlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HitEffectItem >&
      itemlist() const;

  // @@protoc_insertion_point(class_scope:HitEffectNtf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HitEffectItem > itemlist_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UseItemReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UseItemReq) */ {
 public:
  inline UseItemReq() : UseItemReq(nullptr) {};
  virtual ~UseItemReq();

  UseItemReq(const UseItemReq& from);
  UseItemReq(UseItemReq&& from) noexcept
    : UseItemReq() {
    *this = ::std::move(from);
  }

  inline UseItemReq& operator=(const UseItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UseItemReq& operator=(UseItemReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UseItemReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UseItemReq* internal_default_instance() {
    return reinterpret_cast<const UseItemReq*>(
               &_UseItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(UseItemReq& a, UseItemReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UseItemReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UseItemReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UseItemReq* New() const final {
    return CreateMaybeMessage<UseItemReq>(nullptr);
  }

  UseItemReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UseItemReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UseItemReq& from);
  void MergeFrom(const UseItemReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UseItemReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UseItemReq";
  }
  protected:
  explicit UseItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UseItemReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class UseItemAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UseItemAck) */ {
 public:
  inline UseItemAck() : UseItemAck(nullptr) {};
  virtual ~UseItemAck();

  UseItemAck(const UseItemAck& from);
  UseItemAck(UseItemAck&& from) noexcept
    : UseItemAck() {
    *this = ::std::move(from);
  }

  inline UseItemAck& operator=(const UseItemAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline UseItemAck& operator=(UseItemAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UseItemAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UseItemAck* internal_default_instance() {
    return reinterpret_cast<const UseItemAck*>(
               &_UseItemAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(UseItemAck& a, UseItemAck& b) {
    a.Swap(&b);
  }
  inline void Swap(UseItemAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UseItemAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UseItemAck* New() const final {
    return CreateMaybeMessage<UseItemAck>(nullptr);
  }

  UseItemAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UseItemAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UseItemAck& from);
  void MergeFrom(const UseItemAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UseItemAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UseItemAck";
  }
  protected:
  explicit UseItemAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UseItemAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class MsgGetRandomNameReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgGetRandomNameReq) */ {
 public:
  inline MsgGetRandomNameReq() : MsgGetRandomNameReq(nullptr) {};
  virtual ~MsgGetRandomNameReq();

  MsgGetRandomNameReq(const MsgGetRandomNameReq& from);
  MsgGetRandomNameReq(MsgGetRandomNameReq&& from) noexcept
    : MsgGetRandomNameReq() {
    *this = ::std::move(from);
  }

  inline MsgGetRandomNameReq& operator=(const MsgGetRandomNameReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGetRandomNameReq& operator=(MsgGetRandomNameReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgGetRandomNameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgGetRandomNameReq* internal_default_instance() {
    return reinterpret_cast<const MsgGetRandomNameReq*>(
               &_MsgGetRandomNameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(MsgGetRandomNameReq& a, MsgGetRandomNameReq& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgGetRandomNameReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGetRandomNameReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgGetRandomNameReq* New() const final {
    return CreateMaybeMessage<MsgGetRandomNameReq>(nullptr);
  }

  MsgGetRandomNameReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgGetRandomNameReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgGetRandomNameReq& from);
  void MergeFrom(const MsgGetRandomNameReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgGetRandomNameReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgGetRandomNameReq";
  }
  protected:
  explicit MsgGetRandomNameReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSexFieldNumber = 1,
  };
  // int32 Sex = 1;
  void clear_sex();
  ::PROTOBUF_NAMESPACE_ID::int32 sex() const;
  void set_sex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sex() const;
  void _internal_set_sex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgGetRandomNameReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 sex_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class MsgGetRandomNameAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgGetRandomNameAck) */ {
 public:
  inline MsgGetRandomNameAck() : MsgGetRandomNameAck(nullptr) {};
  virtual ~MsgGetRandomNameAck();

  MsgGetRandomNameAck(const MsgGetRandomNameAck& from);
  MsgGetRandomNameAck(MsgGetRandomNameAck&& from) noexcept
    : MsgGetRandomNameAck() {
    *this = ::std::move(from);
  }

  inline MsgGetRandomNameAck& operator=(const MsgGetRandomNameAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGetRandomNameAck& operator=(MsgGetRandomNameAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgGetRandomNameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgGetRandomNameAck* internal_default_instance() {
    return reinterpret_cast<const MsgGetRandomNameAck*>(
               &_MsgGetRandomNameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(MsgGetRandomNameAck& a, MsgGetRandomNameAck& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgGetRandomNameAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGetRandomNameAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgGetRandomNameAck* New() const final {
    return CreateMaybeMessage<MsgGetRandomNameAck>(nullptr);
  }

  MsgGetRandomNameAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgGetRandomNameAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgGetRandomNameAck& from);
  void MergeFrom(const MsgGetRandomNameAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgGetRandomNameAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgGetRandomNameAck";
  }
  protected:
  explicit MsgGetRandomNameAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string Name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:MsgGetRandomNameAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class Msg_DbErrorCountNty PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_DbErrorCountNty) */ {
 public:
  inline Msg_DbErrorCountNty() : Msg_DbErrorCountNty(nullptr) {};
  virtual ~Msg_DbErrorCountNty();

  Msg_DbErrorCountNty(const Msg_DbErrorCountNty& from);
  Msg_DbErrorCountNty(Msg_DbErrorCountNty&& from) noexcept
    : Msg_DbErrorCountNty() {
    *this = ::std::move(from);
  }

  inline Msg_DbErrorCountNty& operator=(const Msg_DbErrorCountNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_DbErrorCountNty& operator=(Msg_DbErrorCountNty&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_DbErrorCountNty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_DbErrorCountNty* internal_default_instance() {
    return reinterpret_cast<const Msg_DbErrorCountNty*>(
               &_Msg_DbErrorCountNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(Msg_DbErrorCountNty& a, Msg_DbErrorCountNty& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_DbErrorCountNty* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_DbErrorCountNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_DbErrorCountNty* New() const final {
    return CreateMaybeMessage<Msg_DbErrorCountNty>(nullptr);
  }

  Msg_DbErrorCountNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_DbErrorCountNty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_DbErrorCountNty& from);
  void MergeFrom(const Msg_DbErrorCountNty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_DbErrorCountNty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_DbErrorCountNty";
  }
  protected:
  explicit Msg_DbErrorCountNty(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCountFieldNumber = 1,
  };
  // uint32 ErrorCount = 1;
  void clear_errorcount();
  ::PROTOBUF_NAMESPACE_ID::uint32 errorcount() const;
  void set_errorcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errorcount() const;
  void _internal_set_errorcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_DbErrorCountNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errorcount_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class Msg_GameParamReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_GameParamReq) */ {
 public:
  inline Msg_GameParamReq() : Msg_GameParamReq(nullptr) {};
  virtual ~Msg_GameParamReq();

  Msg_GameParamReq(const Msg_GameParamReq& from);
  Msg_GameParamReq(Msg_GameParamReq&& from) noexcept
    : Msg_GameParamReq() {
    *this = ::std::move(from);
  }

  inline Msg_GameParamReq& operator=(const Msg_GameParamReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_GameParamReq& operator=(Msg_GameParamReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_GameParamReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_GameParamReq* internal_default_instance() {
    return reinterpret_cast<const Msg_GameParamReq*>(
               &_Msg_GameParamReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(Msg_GameParamReq& a, Msg_GameParamReq& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_GameParamReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_GameParamReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_GameParamReq* New() const final {
    return CreateMaybeMessage<Msg_GameParamReq>(nullptr);
  }

  Msg_GameParamReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_GameParamReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_GameParamReq& from);
  void MergeFrom(const Msg_GameParamReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_GameParamReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_GameParamReq";
  }
  protected:
  explicit Msg_GameParamReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientVerFieldNumber = 2,
    kChannelFieldNumber = 1,
  };
  // string ClientVer = 2;
  void clear_clientver();
  const std::string& clientver() const;
  void set_clientver(const std::string& value);
  void set_clientver(std::string&& value);
  void set_clientver(const char* value);
  void set_clientver(const char* value, size_t size);
  std::string* mutable_clientver();
  std::string* release_clientver();
  void set_allocated_clientver(std::string* clientver);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_clientver();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_clientver(
      std::string* clientver);
  private:
  const std::string& _internal_clientver() const;
  void _internal_set_clientver(const std::string& value);
  std::string* _internal_mutable_clientver();
  public:

  // int32 Channel = 1;
  void clear_channel();
  ::PROTOBUF_NAMESPACE_ID::int32 channel() const;
  void set_channel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_channel() const;
  void _internal_set_channel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg_GameParamReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr clientver_;
  ::PROTOBUF_NAMESPACE_ID::int32 channel_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// -------------------------------------------------------------------

class Msg_GameParamAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg_GameParamAck) */ {
 public:
  inline Msg_GameParamAck() : Msg_GameParamAck(nullptr) {};
  virtual ~Msg_GameParamAck();

  Msg_GameParamAck(const Msg_GameParamAck& from);
  Msg_GameParamAck(Msg_GameParamAck&& from) noexcept
    : Msg_GameParamAck() {
    *this = ::std::move(from);
  }

  inline Msg_GameParamAck& operator=(const Msg_GameParamAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_GameParamAck& operator=(Msg_GameParamAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg_GameParamAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg_GameParamAck* internal_default_instance() {
    return reinterpret_cast<const Msg_GameParamAck*>(
               &_Msg_GameParamAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(Msg_GameParamAck& a, Msg_GameParamAck& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_GameParamAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_GameParamAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_GameParamAck* New() const final {
    return CreateMaybeMessage<Msg_GameParamAck>(nullptr);
  }

  Msg_GameParamAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_GameParamAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg_GameParamAck& from);
  void MergeFrom(const Msg_GameParamAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_GameParamAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg_GameParamAck";
  }
  protected:
  explicit Msg_GameParamAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Msg_5fGame_2eproto);
    return ::descriptor_table_Msg_5fGame_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamKeyFieldNumber = 1,
    kParamValueFieldNumber = 2,
  };
  // repeated string ParamKey = 1;
  int paramkey_size() const;
  private:
  int _internal_paramkey_size() const;
  public:
  void clear_paramkey();
  const std::string& paramkey(int index) const;
  std::string* mutable_paramkey(int index);
  void set_paramkey(int index, const std::string& value);
  void set_paramkey(int index, std::string&& value);
  void set_paramkey(int index, const char* value);
  void set_paramkey(int index, const char* value, size_t size);
  std::string* add_paramkey();
  void add_paramkey(const std::string& value);
  void add_paramkey(std::string&& value);
  void add_paramkey(const char* value);
  void add_paramkey(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& paramkey() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_paramkey();
  private:
  const std::string& _internal_paramkey(int index) const;
  std::string* _internal_add_paramkey();
  public:

  // repeated string ParamValue = 2;
  int paramvalue_size() const;
  private:
  int _internal_paramvalue_size() const;
  public:
  void clear_paramvalue();
  const std::string& paramvalue(int index) const;
  std::string* mutable_paramvalue(int index);
  void set_paramvalue(int index, const std::string& value);
  void set_paramvalue(int index, std::string&& value);
  void set_paramvalue(int index, const char* value);
  void set_paramvalue(int index, const char* value, size_t size);
  std::string* add_paramvalue();
  void add_paramvalue(const std::string& value);
  void add_paramvalue(std::string&& value);
  void add_paramvalue(const char* value);
  void add_paramvalue(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& paramvalue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_paramvalue();
  private:
  const std::string& _internal_paramvalue(int index) const;
  std::string* _internal_add_paramvalue();
  public:

  // @@protoc_insertion_point(class_scope:Msg_GameParamAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> paramkey_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> paramvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_5fGame_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GmStopServerReq

// uint32 Data = 1;
inline void GmStopServerReq::clear_data() {
  data_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GmStopServerReq::_internal_data() const {
  return data_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GmStopServerReq::data() const {
  // @@protoc_insertion_point(field_get:GmStopServerReq.Data)
  return _internal_data();
}
inline void GmStopServerReq::_internal_set_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_ = value;
}
inline void GmStopServerReq::set_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:GmStopServerReq.Data)
}

// -------------------------------------------------------------------

// GmStopServerAck

// uint32 RetCode = 1;
inline void GmStopServerAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GmStopServerAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GmStopServerAck::retcode() const {
  // @@protoc_insertion_point(field_get:GmStopServerAck.RetCode)
  return _internal_retcode();
}
inline void GmStopServerAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void GmStopServerAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:GmStopServerAck.RetCode)
}

// -------------------------------------------------------------------

// SvrRegToSvrReq

// int32 ServerID = 1;
inline void SvrRegToSvrReq::clear_serverid() {
  serverid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SvrRegToSvrReq::_internal_serverid() const {
  return serverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SvrRegToSvrReq::serverid() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrReq.ServerID)
  return _internal_serverid();
}
inline void SvrRegToSvrReq::_internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverid_ = value;
}
inline void SvrRegToSvrReq::set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:SvrRegToSvrReq.ServerID)
}

// string ServerName = 2;
inline void SvrRegToSvrReq::clear_servername() {
  servername_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& SvrRegToSvrReq::servername() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrReq.ServerName)
  return _internal_servername();
}
inline void SvrRegToSvrReq::set_servername(const std::string& value) {
  _internal_set_servername(value);
  // @@protoc_insertion_point(field_set:SvrRegToSvrReq.ServerName)
}
inline std::string* SvrRegToSvrReq::mutable_servername() {
  // @@protoc_insertion_point(field_mutable:SvrRegToSvrReq.ServerName)
  return _internal_mutable_servername();
}
inline const std::string& SvrRegToSvrReq::_internal_servername() const {
  return servername_.Get();
}
inline void SvrRegToSvrReq::_internal_set_servername(const std::string& value) {
  
  servername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SvrRegToSvrReq::set_servername(std::string&& value) {
  
  servername_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:SvrRegToSvrReq.ServerName)
}
inline void SvrRegToSvrReq::set_servername(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  servername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:SvrRegToSvrReq.ServerName)
}
inline void SvrRegToSvrReq::set_servername(const char* value,
    size_t size) {
  
  servername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:SvrRegToSvrReq.ServerName)
}
inline std::string* SvrRegToSvrReq::_internal_mutable_servername() {
  
  return servername_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SvrRegToSvrReq::release_servername() {
  // @@protoc_insertion_point(field_release:SvrRegToSvrReq.ServerName)
  return servername_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SvrRegToSvrReq::set_allocated_servername(std::string* servername) {
  if (servername != nullptr) {
    
  } else {
    
  }
  servername_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), servername,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:SvrRegToSvrReq.ServerName)
}
inline std::string* SvrRegToSvrReq::unsafe_arena_release_servername() {
  // @@protoc_insertion_point(field_unsafe_arena_release:SvrRegToSvrReq.ServerName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return servername_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void SvrRegToSvrReq::unsafe_arena_set_allocated_servername(
    std::string* servername) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (servername != nullptr) {
    
  } else {
    
  }
  servername_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      servername, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SvrRegToSvrReq.ServerName)
}

// string ServerIp = 3;
inline void SvrRegToSvrReq::clear_serverip() {
  serverip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& SvrRegToSvrReq::serverip() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrReq.ServerIp)
  return _internal_serverip();
}
inline void SvrRegToSvrReq::set_serverip(const std::string& value) {
  _internal_set_serverip(value);
  // @@protoc_insertion_point(field_set:SvrRegToSvrReq.ServerIp)
}
inline std::string* SvrRegToSvrReq::mutable_serverip() {
  // @@protoc_insertion_point(field_mutable:SvrRegToSvrReq.ServerIp)
  return _internal_mutable_serverip();
}
inline const std::string& SvrRegToSvrReq::_internal_serverip() const {
  return serverip_.Get();
}
inline void SvrRegToSvrReq::_internal_set_serverip(const std::string& value) {
  
  serverip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SvrRegToSvrReq::set_serverip(std::string&& value) {
  
  serverip_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:SvrRegToSvrReq.ServerIp)
}
inline void SvrRegToSvrReq::set_serverip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  serverip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:SvrRegToSvrReq.ServerIp)
}
inline void SvrRegToSvrReq::set_serverip(const char* value,
    size_t size) {
  
  serverip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:SvrRegToSvrReq.ServerIp)
}
inline std::string* SvrRegToSvrReq::_internal_mutable_serverip() {
  
  return serverip_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SvrRegToSvrReq::release_serverip() {
  // @@protoc_insertion_point(field_release:SvrRegToSvrReq.ServerIp)
  return serverip_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SvrRegToSvrReq::set_allocated_serverip(std::string* serverip) {
  if (serverip != nullptr) {
    
  } else {
    
  }
  serverip_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), serverip,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:SvrRegToSvrReq.ServerIp)
}
inline std::string* SvrRegToSvrReq::unsafe_arena_release_serverip() {
  // @@protoc_insertion_point(field_unsafe_arena_release:SvrRegToSvrReq.ServerIp)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return serverip_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void SvrRegToSvrReq::unsafe_arena_set_allocated_serverip(
    std::string* serverip) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (serverip != nullptr) {
    
  } else {
    
  }
  serverip_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      serverip, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SvrRegToSvrReq.ServerIp)
}

// int32 ServerPort = 4;
inline void SvrRegToSvrReq::clear_serverport() {
  serverport_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SvrRegToSvrReq::_internal_serverport() const {
  return serverport_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SvrRegToSvrReq::serverport() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrReq.ServerPort)
  return _internal_serverport();
}
inline void SvrRegToSvrReq::_internal_set_serverport(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverport_ = value;
}
inline void SvrRegToSvrReq::set_serverport(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverport(value);
  // @@protoc_insertion_point(field_set:SvrRegToSvrReq.ServerPort)
}

// int32 HttpPort = 5;
inline void SvrRegToSvrReq::clear_httpport() {
  httpport_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SvrRegToSvrReq::_internal_httpport() const {
  return httpport_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SvrRegToSvrReq::httpport() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrReq.HttpPort)
  return _internal_httpport();
}
inline void SvrRegToSvrReq::_internal_set_httpport(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  httpport_ = value;
}
inline void SvrRegToSvrReq::set_httpport(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_httpport(value);
  // @@protoc_insertion_point(field_set:SvrRegToSvrReq.HttpPort)
}

// -------------------------------------------------------------------

// SvrRegToSvrAck

// uint32 RetCode = 1;
inline void SvrRegToSvrAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SvrRegToSvrAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SvrRegToSvrAck::retcode() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrAck.RetCode)
  return _internal_retcode();
}
inline void SvrRegToSvrAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void SvrRegToSvrAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:SvrRegToSvrAck.RetCode)
}

// string NewSvrName = 2;
inline void SvrRegToSvrAck::clear_newsvrname() {
  newsvrname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& SvrRegToSvrAck::newsvrname() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrAck.NewSvrName)
  return _internal_newsvrname();
}
inline void SvrRegToSvrAck::set_newsvrname(const std::string& value) {
  _internal_set_newsvrname(value);
  // @@protoc_insertion_point(field_set:SvrRegToSvrAck.NewSvrName)
}
inline std::string* SvrRegToSvrAck::mutable_newsvrname() {
  // @@protoc_insertion_point(field_mutable:SvrRegToSvrAck.NewSvrName)
  return _internal_mutable_newsvrname();
}
inline const std::string& SvrRegToSvrAck::_internal_newsvrname() const {
  return newsvrname_.Get();
}
inline void SvrRegToSvrAck::_internal_set_newsvrname(const std::string& value) {
  
  newsvrname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SvrRegToSvrAck::set_newsvrname(std::string&& value) {
  
  newsvrname_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:SvrRegToSvrAck.NewSvrName)
}
inline void SvrRegToSvrAck::set_newsvrname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  newsvrname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:SvrRegToSvrAck.NewSvrName)
}
inline void SvrRegToSvrAck::set_newsvrname(const char* value,
    size_t size) {
  
  newsvrname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:SvrRegToSvrAck.NewSvrName)
}
inline std::string* SvrRegToSvrAck::_internal_mutable_newsvrname() {
  
  return newsvrname_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SvrRegToSvrAck::release_newsvrname() {
  // @@protoc_insertion_point(field_release:SvrRegToSvrAck.NewSvrName)
  return newsvrname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SvrRegToSvrAck::set_allocated_newsvrname(std::string* newsvrname) {
  if (newsvrname != nullptr) {
    
  } else {
    
  }
  newsvrname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), newsvrname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:SvrRegToSvrAck.NewSvrName)
}
inline std::string* SvrRegToSvrAck::unsafe_arena_release_newsvrname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:SvrRegToSvrAck.NewSvrName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return newsvrname_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void SvrRegToSvrAck::unsafe_arena_set_allocated_newsvrname(
    std::string* newsvrname) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (newsvrname != nullptr) {
    
  } else {
    
  }
  newsvrname_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      newsvrname, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SvrRegToSvrAck.NewSvrName)
}

// -------------------------------------------------------------------

// RoleDisconnectReq

// uint64 AccountID = 1;
inline void RoleDisconnectReq::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoleDisconnectReq::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoleDisconnectReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectReq.AccountID)
  return _internal_accountid();
}
inline void RoleDisconnectReq::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void RoleDisconnectReq::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:RoleDisconnectReq.AccountID)
}

// uint64 RoleID = 2;
inline void RoleDisconnectReq::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoleDisconnectReq::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoleDisconnectReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectReq.RoleID)
  return _internal_roleid();
}
inline void RoleDisconnectReq::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void RoleDisconnectReq::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:RoleDisconnectReq.RoleID)
}

// -------------------------------------------------------------------

// RoleDisconnectAck

// uint32 RetCode = 1;
inline void RoleDisconnectAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoleDisconnectAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoleDisconnectAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectAck.RetCode)
  return _internal_retcode();
}
inline void RoleDisconnectAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void RoleDisconnectAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:RoleDisconnectAck.RetCode)
}

// -------------------------------------------------------------------

// RoleReconnectReq

// uint64 RoleID = 1;
inline void RoleReconnectReq::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoleReconnectReq::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoleReconnectReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleReconnectReq.RoleID)
  return _internal_roleid();
}
inline void RoleReconnectReq::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void RoleReconnectReq::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:RoleReconnectReq.RoleID)
}

// uint64 AccountID = 2;
inline void RoleReconnectReq::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoleReconnectReq::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoleReconnectReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleReconnectReq.AccountID)
  return _internal_accountid();
}
inline void RoleReconnectReq::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void RoleReconnectReq::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:RoleReconnectReq.AccountID)
}

// uint32 LoginCode = 3;
inline void RoleReconnectReq::clear_logincode() {
  logincode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoleReconnectReq::_internal_logincode() const {
  return logincode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoleReconnectReq::logincode() const {
  // @@protoc_insertion_point(field_get:RoleReconnectReq.LoginCode)
  return _internal_logincode();
}
inline void RoleReconnectReq::_internal_set_logincode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  logincode_ = value;
}
inline void RoleReconnectReq::set_logincode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_logincode(value);
  // @@protoc_insertion_point(field_set:RoleReconnectReq.LoginCode)
}

// -------------------------------------------------------------------

// RoleReconnectAck

// uint32 RetCode = 1;
inline void RoleReconnectAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoleReconnectAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoleReconnectAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleReconnectAck.RetCode)
  return _internal_retcode();
}
inline void RoleReconnectAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void RoleReconnectAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:RoleReconnectAck.RetCode)
}

// -------------------------------------------------------------------

// RemoveConnectNty

// uint64 RoleID = 1;
inline void RemoveConnectNty::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveConnectNty::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveConnectNty::roleid() const {
  // @@protoc_insertion_point(field_get:RemoveConnectNty.RoleID)
  return _internal_roleid();
}
inline void RemoveConnectNty::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void RemoveConnectNty::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:RemoveConnectNty.RoleID)
}

// -------------------------------------------------------------------

// CreateNewSceneReq

// int32 CopyID = 1;
inline void CreateNewSceneReq::clear_copyid() {
  copyid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneReq::_internal_copyid() const {
  return copyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneReq::copyid() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.CopyID)
  return _internal_copyid();
}
inline void CreateNewSceneReq::_internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyid_ = value;
}
inline void CreateNewSceneReq::set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.CopyID)
}

// int32 CopyType = 2;
inline void CreateNewSceneReq::clear_copytype() {
  copytype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneReq::_internal_copytype() const {
  return copytype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneReq::copytype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.CopyType)
  return _internal_copytype();
}
inline void CreateNewSceneReq::_internal_set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copytype_ = value;
}
inline void CreateNewSceneReq::set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copytype(value);
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.CopyType)
}

// int32 PlayerNum = 3;
inline void CreateNewSceneReq::clear_playernum() {
  playernum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneReq::_internal_playernum() const {
  return playernum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneReq::playernum() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.PlayerNum)
  return _internal_playernum();
}
inline void CreateNewSceneReq::_internal_set_playernum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  playernum_ = value;
}
inline void CreateNewSceneReq::set_playernum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_playernum(value);
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.PlayerNum)
}

// uint64 CreateParam = 4;
inline void CreateNewSceneReq::clear_createparam() {
  createparam_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CreateNewSceneReq::_internal_createparam() const {
  return createparam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CreateNewSceneReq::createparam() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.CreateParam)
  return _internal_createparam();
}
inline void CreateNewSceneReq::_internal_set_createparam(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  createparam_ = value;
}
inline void CreateNewSceneReq::set_createparam(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_createparam(value);
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.CreateParam)
}

// -------------------------------------------------------------------

// CreateNewSceneAck

// uint32 RetCode = 1;
inline void CreateNewSceneAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CreateNewSceneAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CreateNewSceneAck::retcode() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.RetCode)
  return _internal_retcode();
}
inline void CreateNewSceneAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void CreateNewSceneAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.RetCode)
}

// int32 CopyID = 2;
inline void CreateNewSceneAck::clear_copyid() {
  copyid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneAck::_internal_copyid() const {
  return copyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneAck::copyid() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.CopyID)
  return _internal_copyid();
}
inline void CreateNewSceneAck::_internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyid_ = value;
}
inline void CreateNewSceneAck::set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.CopyID)
}

// int32 CopyGuid = 3;
inline void CreateNewSceneAck::clear_copyguid() {
  copyguid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneAck::_internal_copyguid() const {
  return copyguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneAck::copyguid() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.CopyGuid)
  return _internal_copyguid();
}
inline void CreateNewSceneAck::_internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyguid_ = value;
}
inline void CreateNewSceneAck::set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyguid(value);
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.CopyGuid)
}

// uint64 CreateParam = 4;
inline void CreateNewSceneAck::clear_createparam() {
  createparam_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CreateNewSceneAck::_internal_createparam() const {
  return createparam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CreateNewSceneAck::createparam() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.CreateParam)
  return _internal_createparam();
}
inline void CreateNewSceneAck::_internal_set_createparam(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  createparam_ = value;
}
inline void CreateNewSceneAck::set_createparam(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_createparam(value);
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.CreateParam)
}

// int32 ServerID = 5;
inline void CreateNewSceneAck::clear_serverid() {
  serverid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneAck::_internal_serverid() const {
  return serverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneAck::serverid() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.ServerID)
  return _internal_serverid();
}
inline void CreateNewSceneAck::_internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverid_ = value;
}
inline void CreateNewSceneAck::set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.ServerID)
}

// int32 CopyType = 6;
inline void CreateNewSceneAck::clear_copytype() {
  copytype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneAck::_internal_copytype() const {
  return copytype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneAck::copytype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.CopyType)
  return _internal_copytype();
}
inline void CreateNewSceneAck::_internal_set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copytype_ = value;
}
inline void CreateNewSceneAck::set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copytype(value);
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.CopyType)
}

// int32 PlayerNum = 7;
inline void CreateNewSceneAck::clear_playernum() {
  playernum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneAck::_internal_playernum() const {
  return playernum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateNewSceneAck::playernum() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.PlayerNum)
  return _internal_playernum();
}
inline void CreateNewSceneAck::_internal_set_playernum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  playernum_ = value;
}
inline void CreateNewSceneAck::set_playernum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_playernum(value);
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.PlayerNum)
}

// -------------------------------------------------------------------

// EnterSceneReq

// uint64 RoleID = 1;
inline void EnterSceneReq::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EnterSceneReq::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EnterSceneReq::roleid() const {
  // @@protoc_insertion_point(field_get:EnterSceneReq.RoleID)
  return _internal_roleid();
}
inline void EnterSceneReq::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void EnterSceneReq::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:EnterSceneReq.RoleID)
}

// int32 ServerID = 2;
inline void EnterSceneReq::clear_serverid() {
  serverid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneReq::_internal_serverid() const {
  return serverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneReq::serverid() const {
  // @@protoc_insertion_point(field_get:EnterSceneReq.ServerID)
  return _internal_serverid();
}
inline void EnterSceneReq::_internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverid_ = value;
}
inline void EnterSceneReq::set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:EnterSceneReq.ServerID)
}

// int32 CopyGuid = 3;
inline void EnterSceneReq::clear_copyguid() {
  copyguid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneReq::_internal_copyguid() const {
  return copyguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneReq::copyguid() const {
  // @@protoc_insertion_point(field_get:EnterSceneReq.CopyGuid)
  return _internal_copyguid();
}
inline void EnterSceneReq::_internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyguid_ = value;
}
inline void EnterSceneReq::set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyguid(value);
  // @@protoc_insertion_point(field_set:EnterSceneReq.CopyGuid)
}

// int32 CopyID = 4;
inline void EnterSceneReq::clear_copyid() {
  copyid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneReq::_internal_copyid() const {
  return copyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneReq::copyid() const {
  // @@protoc_insertion_point(field_get:EnterSceneReq.CopyID)
  return _internal_copyid();
}
inline void EnterSceneReq::_internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyid_ = value;
}
inline void EnterSceneReq::set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:EnterSceneReq.CopyID)
}

// -------------------------------------------------------------------

// EnterSceneAck

// uint32 RetCode = 1;
inline void EnterSceneAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EnterSceneAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EnterSceneAck::retcode() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.RetCode)
  return _internal_retcode();
}
inline void EnterSceneAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void EnterSceneAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.RetCode)
}

// int32 CopyID = 2;
inline void EnterSceneAck::clear_copyid() {
  copyid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::_internal_copyid() const {
  return copyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::copyid() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.CopyID)
  return _internal_copyid();
}
inline void EnterSceneAck::_internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyid_ = value;
}
inline void EnterSceneAck::set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.CopyID)
}

// int32 CopyGuid = 3;
inline void EnterSceneAck::clear_copyguid() {
  copyguid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::_internal_copyguid() const {
  return copyguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::copyguid() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.CopyGuid)
  return _internal_copyguid();
}
inline void EnterSceneAck::_internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyguid_ = value;
}
inline void EnterSceneAck::set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyguid(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.CopyGuid)
}

// uint64 RoleID = 4;
inline void EnterSceneAck::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EnterSceneAck::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EnterSceneAck::roleid() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.RoleID)
  return _internal_roleid();
}
inline void EnterSceneAck::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void EnterSceneAck::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.RoleID)
}

// int32 Carrer = 5;
inline void EnterSceneAck::clear_carrer() {
  carrer_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::_internal_carrer() const {
  return carrer_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::carrer() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Carrer)
  return _internal_carrer();
}
inline void EnterSceneAck::_internal_set_carrer(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  carrer_ = value;
}
inline void EnterSceneAck::set_carrer(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_carrer(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.Carrer)
}

// int32 ActorID = 6;
inline void EnterSceneAck::clear_actorid() {
  actorid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::_internal_actorid() const {
  return actorid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::actorid() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.ActorID)
  return _internal_actorid();
}
inline void EnterSceneAck::_internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actorid_ = value;
}
inline void EnterSceneAck::set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actorid(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.ActorID)
}

// string RoleName = 7;
inline void EnterSceneAck::clear_rolename() {
  rolename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& EnterSceneAck::rolename() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.RoleName)
  return _internal_rolename();
}
inline void EnterSceneAck::set_rolename(const std::string& value) {
  _internal_set_rolename(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.RoleName)
}
inline std::string* EnterSceneAck::mutable_rolename() {
  // @@protoc_insertion_point(field_mutable:EnterSceneAck.RoleName)
  return _internal_mutable_rolename();
}
inline const std::string& EnterSceneAck::_internal_rolename() const {
  return rolename_.Get();
}
inline void EnterSceneAck::_internal_set_rolename(const std::string& value) {
  
  rolename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void EnterSceneAck::set_rolename(std::string&& value) {
  
  rolename_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:EnterSceneAck.RoleName)
}
inline void EnterSceneAck::set_rolename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rolename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:EnterSceneAck.RoleName)
}
inline void EnterSceneAck::set_rolename(const char* value,
    size_t size) {
  
  rolename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:EnterSceneAck.RoleName)
}
inline std::string* EnterSceneAck::_internal_mutable_rolename() {
  
  return rolename_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* EnterSceneAck::release_rolename() {
  // @@protoc_insertion_point(field_release:EnterSceneAck.RoleName)
  return rolename_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void EnterSceneAck::set_allocated_rolename(std::string* rolename) {
  if (rolename != nullptr) {
    
  } else {
    
  }
  rolename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rolename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:EnterSceneAck.RoleName)
}
inline std::string* EnterSceneAck::unsafe_arena_release_rolename() {
  // @@protoc_insertion_point(field_unsafe_arena_release:EnterSceneAck.RoleName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return rolename_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void EnterSceneAck::unsafe_arena_set_allocated_rolename(
    std::string* rolename) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (rolename != nullptr) {
    
  } else {
    
  }
  rolename_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      rolename, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:EnterSceneAck.RoleName)
}

// int32 Camp = 8;
inline void EnterSceneAck::clear_camp() {
  camp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::_internal_camp() const {
  return camp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::camp() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Camp)
  return _internal_camp();
}
inline void EnterSceneAck::_internal_set_camp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  camp_ = value;
}
inline void EnterSceneAck::set_camp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_camp(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.Camp)
}

// float X = 9;
inline void EnterSceneAck::clear_x() {
  x_ = 0;
}
inline float EnterSceneAck::_internal_x() const {
  return x_;
}
inline float EnterSceneAck::x() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.X)
  return _internal_x();
}
inline void EnterSceneAck::_internal_set_x(float value) {
  
  x_ = value;
}
inline void EnterSceneAck::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.X)
}

// float Y = 10;
inline void EnterSceneAck::clear_y() {
  y_ = 0;
}
inline float EnterSceneAck::_internal_y() const {
  return y_;
}
inline float EnterSceneAck::y() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Y)
  return _internal_y();
}
inline void EnterSceneAck::_internal_set_y(float value) {
  
  y_ = value;
}
inline void EnterSceneAck::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.Y)
}

// float Z = 11;
inline void EnterSceneAck::clear_z() {
  z_ = 0;
}
inline float EnterSceneAck::_internal_z() const {
  return z_;
}
inline float EnterSceneAck::z() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Z)
  return _internal_z();
}
inline void EnterSceneAck::_internal_set_z(float value) {
  
  z_ = value;
}
inline void EnterSceneAck::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.Z)
}

// float Ft = 12;
inline void EnterSceneAck::clear_ft() {
  ft_ = 0;
}
inline float EnterSceneAck::_internal_ft() const {
  return ft_;
}
inline float EnterSceneAck::ft() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Ft)
  return _internal_ft();
}
inline void EnterSceneAck::_internal_set_ft(float value) {
  
  ft_ = value;
}
inline void EnterSceneAck::set_ft(float value) {
  _internal_set_ft(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.Ft)
}

// int32 Hp = 13;
inline void EnterSceneAck::clear_hp() {
  hp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::_internal_hp() const {
  return hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::hp() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Hp)
  return _internal_hp();
}
inline void EnterSceneAck::_internal_set_hp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  hp_ = value;
}
inline void EnterSceneAck::set_hp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.Hp)
}

// int32 Mp = 14;
inline void EnterSceneAck::clear_mp() {
  mp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::_internal_mp() const {
  return mp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::mp() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Mp)
  return _internal_mp();
}
inline void EnterSceneAck::_internal_set_mp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mp_ = value;
}
inline void EnterSceneAck::set_mp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mp(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.Mp)
}

// int32 HpMax = 15;
inline void EnterSceneAck::clear_hpmax() {
  hpmax_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::_internal_hpmax() const {
  return hpmax_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::hpmax() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.HpMax)
  return _internal_hpmax();
}
inline void EnterSceneAck::_internal_set_hpmax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  hpmax_ = value;
}
inline void EnterSceneAck::set_hpmax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hpmax(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.HpMax)
}

// int32 MpMax = 16;
inline void EnterSceneAck::clear_mpmax() {
  mpmax_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::_internal_mpmax() const {
  return mpmax_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::mpmax() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.MpMax)
  return _internal_mpmax();
}
inline void EnterSceneAck::_internal_set_mpmax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mpmax_ = value;
}
inline void EnterSceneAck::set_mpmax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mpmax(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.MpMax)
}

// int32 Speed = 17;
inline void EnterSceneAck::clear_speed() {
  speed_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::_internal_speed() const {
  return speed_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::speed() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Speed)
  return _internal_speed();
}
inline void EnterSceneAck::_internal_set_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  speed_ = value;
}
inline void EnterSceneAck::set_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.Speed)
}

// int32 MountID = 18;
inline void EnterSceneAck::clear_mountid() {
  mountid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::_internal_mountid() const {
  return mountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::mountid() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.MountID)
  return _internal_mountid();
}
inline void EnterSceneAck::_internal_set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mountid_ = value;
}
inline void EnterSceneAck::set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mountid(value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.MountID)
}

// repeated int32 Equips = 19;
inline int EnterSceneAck::_internal_equips_size() const {
  return equips_.size();
}
inline int EnterSceneAck::equips_size() const {
  return _internal_equips_size();
}
inline void EnterSceneAck::clear_equips() {
  equips_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::_internal_equips(int index) const {
  return equips_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EnterSceneAck::equips(int index) const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Equips)
  return _internal_equips(index);
}
inline void EnterSceneAck::set_equips(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  equips_.Set(index, value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.Equips)
}
inline void EnterSceneAck::_internal_add_equips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  equips_.Add(value);
}
inline void EnterSceneAck::add_equips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_equips(value);
  // @@protoc_insertion_point(field_add:EnterSceneAck.Equips)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
EnterSceneAck::_internal_equips() const {
  return equips_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
EnterSceneAck::equips() const {
  // @@protoc_insertion_point(field_list:EnterSceneAck.Equips)
  return _internal_equips();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
EnterSceneAck::_internal_mutable_equips() {
  return &equips_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
EnterSceneAck::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:EnterSceneAck.Equips)
  return _internal_mutable_equips();
}

// repeated .SkillItem Skills = 20;
inline int EnterSceneAck::_internal_skills_size() const {
  return skills_.size();
}
inline int EnterSceneAck::skills_size() const {
  return _internal_skills_size();
}
inline ::SkillItem* EnterSceneAck::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:EnterSceneAck.Skills)
  return skills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >*
EnterSceneAck::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:EnterSceneAck.Skills)
  return &skills_;
}
inline const ::SkillItem& EnterSceneAck::_internal_skills(int index) const {
  return skills_.Get(index);
}
inline const ::SkillItem& EnterSceneAck::skills(int index) const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Skills)
  return _internal_skills(index);
}
inline ::SkillItem* EnterSceneAck::_internal_add_skills() {
  return skills_.Add();
}
inline ::SkillItem* EnterSceneAck::add_skills() {
  // @@protoc_insertion_point(field_add:EnterSceneAck.Skills)
  return _internal_add_skills();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >&
EnterSceneAck::skills() const {
  // @@protoc_insertion_point(field_list:EnterSceneAck.Skills)
  return skills_;
}

// -------------------------------------------------------------------

// BackToCityReq

// uint32 Param = 1;
inline void BackToCityReq::clear_param() {
  param_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BackToCityReq::_internal_param() const {
  return param_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BackToCityReq::param() const {
  // @@protoc_insertion_point(field_get:BackToCityReq.Param)
  return _internal_param();
}
inline void BackToCityReq::_internal_set_param(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  param_ = value;
}
inline void BackToCityReq::set_param(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:BackToCityReq.Param)
}

// -------------------------------------------------------------------

// BackToCityAck

// uint32 RetCode = 1;
inline void BackToCityAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BackToCityAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BackToCityAck::retcode() const {
  // @@protoc_insertion_point(field_get:BackToCityAck.RetCode)
  return _internal_retcode();
}
inline void BackToCityAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void BackToCityAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:BackToCityAck.RetCode)
}

// -------------------------------------------------------------------

// LeaveSceneReq

// uint64 RoleID = 1;
inline void LeaveSceneReq::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LeaveSceneReq::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LeaveSceneReq::roleid() const {
  // @@protoc_insertion_point(field_get:LeaveSceneReq.RoleID)
  return _internal_roleid();
}
inline void LeaveSceneReq::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void LeaveSceneReq::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:LeaveSceneReq.RoleID)
}

// int32 Reason = 2;
inline void LeaveSceneReq::clear_reason() {
  reason_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LeaveSceneReq::_internal_reason() const {
  return reason_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LeaveSceneReq::reason() const {
  // @@protoc_insertion_point(field_get:LeaveSceneReq.Reason)
  return _internal_reason();
}
inline void LeaveSceneReq::_internal_set_reason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  reason_ = value;
}
inline void LeaveSceneReq::set_reason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:LeaveSceneReq.Reason)
}

// -------------------------------------------------------------------

// LeaveSceneAck

// uint32 RetCode = 1;
inline void LeaveSceneAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LeaveSceneAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LeaveSceneAck::retcode() const {
  // @@protoc_insertion_point(field_get:LeaveSceneAck.RetCode)
  return _internal_retcode();
}
inline void LeaveSceneAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void LeaveSceneAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:LeaveSceneAck.RetCode)
}

// -------------------------------------------------------------------

// AbortSceneReq

// uint64 RoleID = 1;
inline void AbortSceneReq::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AbortSceneReq::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AbortSceneReq::roleid() const {
  // @@protoc_insertion_point(field_get:AbortSceneReq.RoleID)
  return _internal_roleid();
}
inline void AbortSceneReq::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void AbortSceneReq::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:AbortSceneReq.RoleID)
}

// int32 Reason = 2;
inline void AbortSceneReq::clear_reason() {
  reason_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AbortSceneReq::_internal_reason() const {
  return reason_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AbortSceneReq::reason() const {
  // @@protoc_insertion_point(field_get:AbortSceneReq.Reason)
  return _internal_reason();
}
inline void AbortSceneReq::_internal_set_reason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  reason_ = value;
}
inline void AbortSceneReq::set_reason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:AbortSceneReq.Reason)
}

// -------------------------------------------------------------------

// AbortSceneAck

// uint32 RetCode = 1;
inline void AbortSceneAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AbortSceneAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AbortSceneAck::retcode() const {
  // @@protoc_insertion_point(field_get:AbortSceneAck.RetCode)
  return _internal_retcode();
}
inline void AbortSceneAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void AbortSceneAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:AbortSceneAck.RetCode)
}

// -------------------------------------------------------------------

// AbortSceneNty

// uint64 RoleID = 1;
inline void AbortSceneNty::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AbortSceneNty::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AbortSceneNty::roleid() const {
  // @@protoc_insertion_point(field_get:AbortSceneNty.RoleID)
  return _internal_roleid();
}
inline void AbortSceneNty::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void AbortSceneNty::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:AbortSceneNty.RoleID)
}

// int32 CopyID = 2;
inline void AbortSceneNty::clear_copyid() {
  copyid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AbortSceneNty::_internal_copyid() const {
  return copyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AbortSceneNty::copyid() const {
  // @@protoc_insertion_point(field_get:AbortSceneNty.CopyID)
  return _internal_copyid();
}
inline void AbortSceneNty::_internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyid_ = value;
}
inline void AbortSceneNty::set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:AbortSceneNty.CopyID)
}

// int32 CopyGuid = 3;
inline void AbortSceneNty::clear_copyguid() {
  copyguid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AbortSceneNty::_internal_copyguid() const {
  return copyguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AbortSceneNty::copyguid() const {
  // @@protoc_insertion_point(field_get:AbortSceneNty.CopyGuid)
  return _internal_copyguid();
}
inline void AbortSceneNty::_internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyguid_ = value;
}
inline void AbortSceneNty::set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyguid(value);
  // @@protoc_insertion_point(field_set:AbortSceneNty.CopyGuid)
}

// int32 CopyType = 4;
inline void AbortSceneNty::clear_copytype() {
  copytype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AbortSceneNty::_internal_copytype() const {
  return copytype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AbortSceneNty::copytype() const {
  // @@protoc_insertion_point(field_get:AbortSceneNty.CopyType)
  return _internal_copytype();
}
inline void AbortSceneNty::_internal_set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copytype_ = value;
}
inline void AbortSceneNty::set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copytype(value);
  // @@protoc_insertion_point(field_set:AbortSceneNty.CopyType)
}

// int32 ServerID = 5;
inline void AbortSceneNty::clear_serverid() {
  serverid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AbortSceneNty::_internal_serverid() const {
  return serverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AbortSceneNty::serverid() const {
  // @@protoc_insertion_point(field_get:AbortSceneNty.ServerID)
  return _internal_serverid();
}
inline void AbortSceneNty::_internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverid_ = value;
}
inline void AbortSceneNty::set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:AbortSceneNty.ServerID)
}

// int32 Param = 6;
inline void AbortSceneNty::clear_param() {
  param_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AbortSceneNty::_internal_param() const {
  return param_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AbortSceneNty::param() const {
  // @@protoc_insertion_point(field_get:AbortSceneNty.Param)
  return _internal_param();
}
inline void AbortSceneNty::_internal_set_param(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param_ = value;
}
inline void AbortSceneNty::set_param(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:AbortSceneNty.Param)
}

// -------------------------------------------------------------------

// TransRoleData

// uint64 RoleID = 1;
inline void TransRoleData::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TransRoleData::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TransRoleData::roleid() const {
  // @@protoc_insertion_point(field_get:TransRoleData.RoleID)
  return _internal_roleid();
}
inline void TransRoleData::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void TransRoleData::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:TransRoleData.RoleID)
}

// string Name = 2;
inline void TransRoleData::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TransRoleData::name() const {
  // @@protoc_insertion_point(field_get:TransRoleData.Name)
  return _internal_name();
}
inline void TransRoleData::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:TransRoleData.Name)
}
inline std::string* TransRoleData::mutable_name() {
  // @@protoc_insertion_point(field_mutable:TransRoleData.Name)
  return _internal_mutable_name();
}
inline const std::string& TransRoleData::_internal_name() const {
  return name_.Get();
}
inline void TransRoleData::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TransRoleData::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:TransRoleData.Name)
}
inline void TransRoleData::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:TransRoleData.Name)
}
inline void TransRoleData::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:TransRoleData.Name)
}
inline std::string* TransRoleData::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TransRoleData::release_name() {
  // @@protoc_insertion_point(field_release:TransRoleData.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TransRoleData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:TransRoleData.Name)
}
inline std::string* TransRoleData::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:TransRoleData.Name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TransRoleData::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TransRoleData.Name)
}

// int32 CarrerID = 3;
inline void TransRoleData::clear_carrerid() {
  carrerid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::_internal_carrerid() const {
  return carrerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::carrerid() const {
  // @@protoc_insertion_point(field_get:TransRoleData.CarrerID)
  return _internal_carrerid();
}
inline void TransRoleData::_internal_set_carrerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  carrerid_ = value;
}
inline void TransRoleData::set_carrerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_carrerid(value);
  // @@protoc_insertion_point(field_set:TransRoleData.CarrerID)
}

// int32 ActorID = 4;
inline void TransRoleData::clear_actorid() {
  actorid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::_internal_actorid() const {
  return actorid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::actorid() const {
  // @@protoc_insertion_point(field_get:TransRoleData.ActorID)
  return _internal_actorid();
}
inline void TransRoleData::_internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actorid_ = value;
}
inline void TransRoleData::set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actorid(value);
  // @@protoc_insertion_point(field_set:TransRoleData.ActorID)
}

// int32 Level = 5;
inline void TransRoleData::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::level() const {
  // @@protoc_insertion_point(field_get:TransRoleData.Level)
  return _internal_level();
}
inline void TransRoleData::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void TransRoleData::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:TransRoleData.Level)
}

// int32 MountID = 6;
inline void TransRoleData::clear_mountid() {
  mountid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::_internal_mountid() const {
  return mountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::mountid() const {
  // @@protoc_insertion_point(field_get:TransRoleData.MountID)
  return _internal_mountid();
}
inline void TransRoleData::_internal_set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mountid_ = value;
}
inline void TransRoleData::set_mountid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mountid(value);
  // @@protoc_insertion_point(field_set:TransRoleData.MountID)
}

// int32 Robot = 7;
inline void TransRoleData::clear_robot() {
  robot_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::_internal_robot() const {
  return robot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::robot() const {
  // @@protoc_insertion_point(field_get:TransRoleData.Robot)
  return _internal_robot();
}
inline void TransRoleData::_internal_set_robot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  robot_ = value;
}
inline void TransRoleData::set_robot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_robot(value);
  // @@protoc_insertion_point(field_set:TransRoleData.Robot)
}

// repeated int32 Equips = 8;
inline int TransRoleData::_internal_equips_size() const {
  return equips_.size();
}
inline int TransRoleData::equips_size() const {
  return _internal_equips_size();
}
inline void TransRoleData::clear_equips() {
  equips_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::_internal_equips(int index) const {
  return equips_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::equips(int index) const {
  // @@protoc_insertion_point(field_get:TransRoleData.Equips)
  return _internal_equips(index);
}
inline void TransRoleData::set_equips(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  equips_.Set(index, value);
  // @@protoc_insertion_point(field_set:TransRoleData.Equips)
}
inline void TransRoleData::_internal_add_equips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  equips_.Add(value);
}
inline void TransRoleData::add_equips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_equips(value);
  // @@protoc_insertion_point(field_add:TransRoleData.Equips)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TransRoleData::_internal_equips() const {
  return equips_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TransRoleData::equips() const {
  // @@protoc_insertion_point(field_list:TransRoleData.Equips)
  return _internal_equips();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TransRoleData::_internal_mutable_equips() {
  return &equips_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TransRoleData::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:TransRoleData.Equips)
  return _internal_mutable_equips();
}

// repeated int32 Propertys = 9;
inline int TransRoleData::_internal_propertys_size() const {
  return propertys_.size();
}
inline int TransRoleData::propertys_size() const {
  return _internal_propertys_size();
}
inline void TransRoleData::clear_propertys() {
  propertys_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::_internal_propertys(int index) const {
  return propertys_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransRoleData::propertys(int index) const {
  // @@protoc_insertion_point(field_get:TransRoleData.Propertys)
  return _internal_propertys(index);
}
inline void TransRoleData::set_propertys(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  propertys_.Set(index, value);
  // @@protoc_insertion_point(field_set:TransRoleData.Propertys)
}
inline void TransRoleData::_internal_add_propertys(::PROTOBUF_NAMESPACE_ID::int32 value) {
  propertys_.Add(value);
}
inline void TransRoleData::add_propertys(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_propertys(value);
  // @@protoc_insertion_point(field_add:TransRoleData.Propertys)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TransRoleData::_internal_propertys() const {
  return propertys_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TransRoleData::propertys() const {
  // @@protoc_insertion_point(field_list:TransRoleData.Propertys)
  return _internal_propertys();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TransRoleData::_internal_mutable_propertys() {
  return &propertys_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TransRoleData::mutable_propertys() {
  // @@protoc_insertion_point(field_mutable_list:TransRoleData.Propertys)
  return _internal_mutable_propertys();
}

// repeated .SkillItem Skills = 10;
inline int TransRoleData::_internal_skills_size() const {
  return skills_.size();
}
inline int TransRoleData::skills_size() const {
  return _internal_skills_size();
}
inline ::SkillItem* TransRoleData::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:TransRoleData.Skills)
  return skills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >*
TransRoleData::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:TransRoleData.Skills)
  return &skills_;
}
inline const ::SkillItem& TransRoleData::_internal_skills(int index) const {
  return skills_.Get(index);
}
inline const ::SkillItem& TransRoleData::skills(int index) const {
  // @@protoc_insertion_point(field_get:TransRoleData.Skills)
  return _internal_skills(index);
}
inline ::SkillItem* TransRoleData::_internal_add_skills() {
  return skills_.Add();
}
inline ::SkillItem* TransRoleData::add_skills() {
  // @@protoc_insertion_point(field_add:TransRoleData.Skills)
  return _internal_add_skills();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >&
TransRoleData::skills() const {
  // @@protoc_insertion_point(field_list:TransRoleData.Skills)
  return skills_;
}

// -------------------------------------------------------------------

// TransPetData

// uint64 PetGuid = 1;
inline void TransPetData::clear_petguid() {
  petguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TransPetData::_internal_petguid() const {
  return petguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TransPetData::petguid() const {
  // @@protoc_insertion_point(field_get:TransPetData.PetGuid)
  return _internal_petguid();
}
inline void TransPetData::_internal_set_petguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  petguid_ = value;
}
inline void TransPetData::set_petguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_petguid(value);
  // @@protoc_insertion_point(field_set:TransPetData.PetGuid)
}

// int32 PetID = 2;
inline void TransPetData::clear_petid() {
  petid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPetData::_internal_petid() const {
  return petid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPetData::petid() const {
  // @@protoc_insertion_point(field_get:TransPetData.PetID)
  return _internal_petid();
}
inline void TransPetData::_internal_set_petid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  petid_ = value;
}
inline void TransPetData::set_petid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_petid(value);
  // @@protoc_insertion_point(field_set:TransPetData.PetID)
}

// int32 ActorID = 3;
inline void TransPetData::clear_actorid() {
  actorid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPetData::_internal_actorid() const {
  return actorid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPetData::actorid() const {
  // @@protoc_insertion_point(field_get:TransPetData.ActorID)
  return _internal_actorid();
}
inline void TransPetData::_internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actorid_ = value;
}
inline void TransPetData::set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actorid(value);
  // @@protoc_insertion_point(field_set:TransPetData.ActorID)
}

// string Name = 4;
inline void TransPetData::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TransPetData::name() const {
  // @@protoc_insertion_point(field_get:TransPetData.Name)
  return _internal_name();
}
inline void TransPetData::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:TransPetData.Name)
}
inline std::string* TransPetData::mutable_name() {
  // @@protoc_insertion_point(field_mutable:TransPetData.Name)
  return _internal_mutable_name();
}
inline const std::string& TransPetData::_internal_name() const {
  return name_.Get();
}
inline void TransPetData::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TransPetData::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:TransPetData.Name)
}
inline void TransPetData::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:TransPetData.Name)
}
inline void TransPetData::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:TransPetData.Name)
}
inline std::string* TransPetData::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TransPetData::release_name() {
  // @@protoc_insertion_point(field_release:TransPetData.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TransPetData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:TransPetData.Name)
}
inline std::string* TransPetData::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:TransPetData.Name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TransPetData::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TransPetData.Name)
}

// int32 Level = 5;
inline void TransPetData::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPetData::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPetData::level() const {
  // @@protoc_insertion_point(field_get:TransPetData.Level)
  return _internal_level();
}
inline void TransPetData::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void TransPetData::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:TransPetData.Level)
}

// repeated int32 Propertys = 6;
inline int TransPetData::_internal_propertys_size() const {
  return propertys_.size();
}
inline int TransPetData::propertys_size() const {
  return _internal_propertys_size();
}
inline void TransPetData::clear_propertys() {
  propertys_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPetData::_internal_propertys(int index) const {
  return propertys_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPetData::propertys(int index) const {
  // @@protoc_insertion_point(field_get:TransPetData.Propertys)
  return _internal_propertys(index);
}
inline void TransPetData::set_propertys(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  propertys_.Set(index, value);
  // @@protoc_insertion_point(field_set:TransPetData.Propertys)
}
inline void TransPetData::_internal_add_propertys(::PROTOBUF_NAMESPACE_ID::int32 value) {
  propertys_.Add(value);
}
inline void TransPetData::add_propertys(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_propertys(value);
  // @@protoc_insertion_point(field_add:TransPetData.Propertys)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TransPetData::_internal_propertys() const {
  return propertys_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TransPetData::propertys() const {
  // @@protoc_insertion_point(field_list:TransPetData.Propertys)
  return _internal_propertys();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TransPetData::_internal_mutable_propertys() {
  return &propertys_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TransPetData::mutable_propertys() {
  // @@protoc_insertion_point(field_mutable_list:TransPetData.Propertys)
  return _internal_mutable_propertys();
}

// repeated .SkillItem Skills = 7;
inline int TransPetData::_internal_skills_size() const {
  return skills_.size();
}
inline int TransPetData::skills_size() const {
  return _internal_skills_size();
}
inline ::SkillItem* TransPetData::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:TransPetData.Skills)
  return skills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >*
TransPetData::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:TransPetData.Skills)
  return &skills_;
}
inline const ::SkillItem& TransPetData::_internal_skills(int index) const {
  return skills_.Get(index);
}
inline const ::SkillItem& TransPetData::skills(int index) const {
  // @@protoc_insertion_point(field_get:TransPetData.Skills)
  return _internal_skills(index);
}
inline ::SkillItem* TransPetData::_internal_add_skills() {
  return skills_.Add();
}
inline ::SkillItem* TransPetData::add_skills() {
  // @@protoc_insertion_point(field_add:TransPetData.Skills)
  return _internal_add_skills();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >&
TransPetData::skills() const {
  // @@protoc_insertion_point(field_list:TransPetData.Skills)
  return skills_;
}

// -------------------------------------------------------------------

// TransPartnerData

// uint64 PartnerGuid = 1;
inline void TransPartnerData::clear_partnerguid() {
  partnerguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TransPartnerData::_internal_partnerguid() const {
  return partnerguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TransPartnerData::partnerguid() const {
  // @@protoc_insertion_point(field_get:TransPartnerData.PartnerGuid)
  return _internal_partnerguid();
}
inline void TransPartnerData::_internal_set_partnerguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  partnerguid_ = value;
}
inline void TransPartnerData::set_partnerguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_partnerguid(value);
  // @@protoc_insertion_point(field_set:TransPartnerData.PartnerGuid)
}

// int32 PartnerID = 2;
inline void TransPartnerData::clear_partnerid() {
  partnerid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPartnerData::_internal_partnerid() const {
  return partnerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPartnerData::partnerid() const {
  // @@protoc_insertion_point(field_get:TransPartnerData.PartnerID)
  return _internal_partnerid();
}
inline void TransPartnerData::_internal_set_partnerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  partnerid_ = value;
}
inline void TransPartnerData::set_partnerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_partnerid(value);
  // @@protoc_insertion_point(field_set:TransPartnerData.PartnerID)
}

// int32 ActorID = 3;
inline void TransPartnerData::clear_actorid() {
  actorid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPartnerData::_internal_actorid() const {
  return actorid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPartnerData::actorid() const {
  // @@protoc_insertion_point(field_get:TransPartnerData.ActorID)
  return _internal_actorid();
}
inline void TransPartnerData::_internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actorid_ = value;
}
inline void TransPartnerData::set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actorid(value);
  // @@protoc_insertion_point(field_set:TransPartnerData.ActorID)
}

// string Name = 4;
inline void TransPartnerData::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& TransPartnerData::name() const {
  // @@protoc_insertion_point(field_get:TransPartnerData.Name)
  return _internal_name();
}
inline void TransPartnerData::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:TransPartnerData.Name)
}
inline std::string* TransPartnerData::mutable_name() {
  // @@protoc_insertion_point(field_mutable:TransPartnerData.Name)
  return _internal_mutable_name();
}
inline const std::string& TransPartnerData::_internal_name() const {
  return name_.Get();
}
inline void TransPartnerData::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TransPartnerData::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:TransPartnerData.Name)
}
inline void TransPartnerData::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:TransPartnerData.Name)
}
inline void TransPartnerData::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:TransPartnerData.Name)
}
inline std::string* TransPartnerData::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TransPartnerData::release_name() {
  // @@protoc_insertion_point(field_release:TransPartnerData.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TransPartnerData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:TransPartnerData.Name)
}
inline std::string* TransPartnerData::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:TransPartnerData.Name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void TransPartnerData::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TransPartnerData.Name)
}

// int32 Level = 5;
inline void TransPartnerData::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPartnerData::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPartnerData::level() const {
  // @@protoc_insertion_point(field_get:TransPartnerData.Level)
  return _internal_level();
}
inline void TransPartnerData::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void TransPartnerData::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:TransPartnerData.Level)
}

// repeated int32 Propertys = 6;
inline int TransPartnerData::_internal_propertys_size() const {
  return propertys_.size();
}
inline int TransPartnerData::propertys_size() const {
  return _internal_propertys_size();
}
inline void TransPartnerData::clear_propertys() {
  propertys_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPartnerData::_internal_propertys(int index) const {
  return propertys_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransPartnerData::propertys(int index) const {
  // @@protoc_insertion_point(field_get:TransPartnerData.Propertys)
  return _internal_propertys(index);
}
inline void TransPartnerData::set_propertys(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  propertys_.Set(index, value);
  // @@protoc_insertion_point(field_set:TransPartnerData.Propertys)
}
inline void TransPartnerData::_internal_add_propertys(::PROTOBUF_NAMESPACE_ID::int32 value) {
  propertys_.Add(value);
}
inline void TransPartnerData::add_propertys(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_propertys(value);
  // @@protoc_insertion_point(field_add:TransPartnerData.Propertys)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TransPartnerData::_internal_propertys() const {
  return propertys_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TransPartnerData::propertys() const {
  // @@protoc_insertion_point(field_list:TransPartnerData.Propertys)
  return _internal_propertys();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TransPartnerData::_internal_mutable_propertys() {
  return &propertys_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TransPartnerData::mutable_propertys() {
  // @@protoc_insertion_point(field_mutable_list:TransPartnerData.Propertys)
  return _internal_mutable_propertys();
}

// repeated .SkillItem Skills = 7;
inline int TransPartnerData::_internal_skills_size() const {
  return skills_.size();
}
inline int TransPartnerData::skills_size() const {
  return _internal_skills_size();
}
inline ::SkillItem* TransPartnerData::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:TransPartnerData.Skills)
  return skills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >*
TransPartnerData::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:TransPartnerData.Skills)
  return &skills_;
}
inline const ::SkillItem& TransPartnerData::_internal_skills(int index) const {
  return skills_.Get(index);
}
inline const ::SkillItem& TransPartnerData::skills(int index) const {
  // @@protoc_insertion_point(field_get:TransPartnerData.Skills)
  return _internal_skills(index);
}
inline ::SkillItem* TransPartnerData::_internal_add_skills() {
  return skills_.Add();
}
inline ::SkillItem* TransPartnerData::add_skills() {
  // @@protoc_insertion_point(field_add:TransPartnerData.Skills)
  return _internal_add_skills();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SkillItem >&
TransPartnerData::skills() const {
  // @@protoc_insertion_point(field_list:TransPartnerData.Skills)
  return skills_;
}

// -------------------------------------------------------------------

// TransferDataItem

// int32 Camp = 1;
inline void TransferDataItem::clear_camp() {
  camp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransferDataItem::_internal_camp() const {
  return camp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransferDataItem::camp() const {
  // @@protoc_insertion_point(field_get:TransferDataItem.Camp)
  return _internal_camp();
}
inline void TransferDataItem::_internal_set_camp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  camp_ = value;
}
inline void TransferDataItem::set_camp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_camp(value);
  // @@protoc_insertion_point(field_set:TransferDataItem.Camp)
}

// .TransRoleData RoleData = 2;
inline bool TransferDataItem::_internal_has_roledata() const {
  return this != internal_default_instance() && roledata_ != nullptr;
}
inline bool TransferDataItem::has_roledata() const {
  return _internal_has_roledata();
}
inline void TransferDataItem::clear_roledata() {
  if (GetArena() == nullptr && roledata_ != nullptr) {
    delete roledata_;
  }
  roledata_ = nullptr;
}
inline const ::TransRoleData& TransferDataItem::_internal_roledata() const {
  const ::TransRoleData* p = roledata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::TransRoleData*>(
      &::_TransRoleData_default_instance_);
}
inline const ::TransRoleData& TransferDataItem::roledata() const {
  // @@protoc_insertion_point(field_get:TransferDataItem.RoleData)
  return _internal_roledata();
}
inline void TransferDataItem::unsafe_arena_set_allocated_roledata(
    ::TransRoleData* roledata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roledata_);
  }
  roledata_ = roledata;
  if (roledata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TransferDataItem.RoleData)
}
inline ::TransRoleData* TransferDataItem::release_roledata() {
  auto temp = unsafe_arena_release_roledata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::TransRoleData* TransferDataItem::unsafe_arena_release_roledata() {
  // @@protoc_insertion_point(field_release:TransferDataItem.RoleData)
  
  ::TransRoleData* temp = roledata_;
  roledata_ = nullptr;
  return temp;
}
inline ::TransRoleData* TransferDataItem::_internal_mutable_roledata() {
  
  if (roledata_ == nullptr) {
    auto* p = CreateMaybeMessage<::TransRoleData>(GetArena());
    roledata_ = p;
  }
  return roledata_;
}
inline ::TransRoleData* TransferDataItem::mutable_roledata() {
  // @@protoc_insertion_point(field_mutable:TransferDataItem.RoleData)
  return _internal_mutable_roledata();
}
inline void TransferDataItem::set_allocated_roledata(::TransRoleData* roledata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete roledata_;
  }
  if (roledata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(roledata);
    if (message_arena != submessage_arena) {
      roledata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roledata, submessage_arena);
    }
    
  } else {
    
  }
  roledata_ = roledata;
  // @@protoc_insertion_point(field_set_allocated:TransferDataItem.RoleData)
}

// .TransPetData PetData = 3;
inline bool TransferDataItem::_internal_has_petdata() const {
  return this != internal_default_instance() && petdata_ != nullptr;
}
inline bool TransferDataItem::has_petdata() const {
  return _internal_has_petdata();
}
inline void TransferDataItem::clear_petdata() {
  if (GetArena() == nullptr && petdata_ != nullptr) {
    delete petdata_;
  }
  petdata_ = nullptr;
}
inline const ::TransPetData& TransferDataItem::_internal_petdata() const {
  const ::TransPetData* p = petdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::TransPetData*>(
      &::_TransPetData_default_instance_);
}
inline const ::TransPetData& TransferDataItem::petdata() const {
  // @@protoc_insertion_point(field_get:TransferDataItem.PetData)
  return _internal_petdata();
}
inline void TransferDataItem::unsafe_arena_set_allocated_petdata(
    ::TransPetData* petdata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(petdata_);
  }
  petdata_ = petdata;
  if (petdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TransferDataItem.PetData)
}
inline ::TransPetData* TransferDataItem::release_petdata() {
  auto temp = unsafe_arena_release_petdata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::TransPetData* TransferDataItem::unsafe_arena_release_petdata() {
  // @@protoc_insertion_point(field_release:TransferDataItem.PetData)
  
  ::TransPetData* temp = petdata_;
  petdata_ = nullptr;
  return temp;
}
inline ::TransPetData* TransferDataItem::_internal_mutable_petdata() {
  
  if (petdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::TransPetData>(GetArena());
    petdata_ = p;
  }
  return petdata_;
}
inline ::TransPetData* TransferDataItem::mutable_petdata() {
  // @@protoc_insertion_point(field_mutable:TransferDataItem.PetData)
  return _internal_mutable_petdata();
}
inline void TransferDataItem::set_allocated_petdata(::TransPetData* petdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete petdata_;
  }
  if (petdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(petdata);
    if (message_arena != submessage_arena) {
      petdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, petdata, submessage_arena);
    }
    
  } else {
    
  }
  petdata_ = petdata;
  // @@protoc_insertion_point(field_set_allocated:TransferDataItem.PetData)
}

// .TransPartnerData PartnerData = 4;
inline bool TransferDataItem::_internal_has_partnerdata() const {
  return this != internal_default_instance() && partnerdata_ != nullptr;
}
inline bool TransferDataItem::has_partnerdata() const {
  return _internal_has_partnerdata();
}
inline void TransferDataItem::clear_partnerdata() {
  if (GetArena() == nullptr && partnerdata_ != nullptr) {
    delete partnerdata_;
  }
  partnerdata_ = nullptr;
}
inline const ::TransPartnerData& TransferDataItem::_internal_partnerdata() const {
  const ::TransPartnerData* p = partnerdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::TransPartnerData*>(
      &::_TransPartnerData_default_instance_);
}
inline const ::TransPartnerData& TransferDataItem::partnerdata() const {
  // @@protoc_insertion_point(field_get:TransferDataItem.PartnerData)
  return _internal_partnerdata();
}
inline void TransferDataItem::unsafe_arena_set_allocated_partnerdata(
    ::TransPartnerData* partnerdata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(partnerdata_);
  }
  partnerdata_ = partnerdata;
  if (partnerdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TransferDataItem.PartnerData)
}
inline ::TransPartnerData* TransferDataItem::release_partnerdata() {
  auto temp = unsafe_arena_release_partnerdata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::TransPartnerData* TransferDataItem::unsafe_arena_release_partnerdata() {
  // @@protoc_insertion_point(field_release:TransferDataItem.PartnerData)
  
  ::TransPartnerData* temp = partnerdata_;
  partnerdata_ = nullptr;
  return temp;
}
inline ::TransPartnerData* TransferDataItem::_internal_mutable_partnerdata() {
  
  if (partnerdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::TransPartnerData>(GetArena());
    partnerdata_ = p;
  }
  return partnerdata_;
}
inline ::TransPartnerData* TransferDataItem::mutable_partnerdata() {
  // @@protoc_insertion_point(field_mutable:TransferDataItem.PartnerData)
  return _internal_mutable_partnerdata();
}
inline void TransferDataItem::set_allocated_partnerdata(::TransPartnerData* partnerdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete partnerdata_;
  }
  if (partnerdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(partnerdata);
    if (message_arena != submessage_arena) {
      partnerdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, partnerdata, submessage_arena);
    }
    
  } else {
    
  }
  partnerdata_ = partnerdata;
  // @@protoc_insertion_point(field_set_allocated:TransferDataItem.PartnerData)
}

// -------------------------------------------------------------------

// TransferDataReq

// repeated .TransferDataItem TransDatas = 1;
inline int TransferDataReq::_internal_transdatas_size() const {
  return transdatas_.size();
}
inline int TransferDataReq::transdatas_size() const {
  return _internal_transdatas_size();
}
inline void TransferDataReq::clear_transdatas() {
  transdatas_.Clear();
}
inline ::TransferDataItem* TransferDataReq::mutable_transdatas(int index) {
  // @@protoc_insertion_point(field_mutable:TransferDataReq.TransDatas)
  return transdatas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TransferDataItem >*
TransferDataReq::mutable_transdatas() {
  // @@protoc_insertion_point(field_mutable_list:TransferDataReq.TransDatas)
  return &transdatas_;
}
inline const ::TransferDataItem& TransferDataReq::_internal_transdatas(int index) const {
  return transdatas_.Get(index);
}
inline const ::TransferDataItem& TransferDataReq::transdatas(int index) const {
  // @@protoc_insertion_point(field_get:TransferDataReq.TransDatas)
  return _internal_transdatas(index);
}
inline ::TransferDataItem* TransferDataReq::_internal_add_transdatas() {
  return transdatas_.Add();
}
inline ::TransferDataItem* TransferDataReq::add_transdatas() {
  // @@protoc_insertion_point(field_add:TransferDataReq.TransDatas)
  return _internal_add_transdatas();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TransferDataItem >&
TransferDataReq::transdatas() const {
  // @@protoc_insertion_point(field_list:TransferDataReq.TransDatas)
  return transdatas_;
}

// -------------------------------------------------------------------

// TransferDataAck

// uint32 RetCode = 1;
inline void TransferDataAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TransferDataAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TransferDataAck::retcode() const {
  // @@protoc_insertion_point(field_get:TransferDataAck.RetCode)
  return _internal_retcode();
}
inline void TransferDataAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void TransferDataAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:TransferDataAck.RetCode)
}

// uint64 RoleID = 2;
inline void TransferDataAck::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TransferDataAck::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TransferDataAck::roleid() const {
  // @@protoc_insertion_point(field_get:TransferDataAck.RoleID)
  return _internal_roleid();
}
inline void TransferDataAck::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void TransferDataAck::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:TransferDataAck.RoleID)
}

// int32 CopyID = 3;
inline void TransferDataAck::clear_copyid() {
  copyid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransferDataAck::_internal_copyid() const {
  return copyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransferDataAck::copyid() const {
  // @@protoc_insertion_point(field_get:TransferDataAck.CopyID)
  return _internal_copyid();
}
inline void TransferDataAck::_internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyid_ = value;
}
inline void TransferDataAck::set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:TransferDataAck.CopyID)
}

// int32 CopyGuid = 4;
inline void TransferDataAck::clear_copyguid() {
  copyguid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransferDataAck::_internal_copyguid() const {
  return copyguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransferDataAck::copyguid() const {
  // @@protoc_insertion_point(field_get:TransferDataAck.CopyGuid)
  return _internal_copyguid();
}
inline void TransferDataAck::_internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyguid_ = value;
}
inline void TransferDataAck::set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyguid(value);
  // @@protoc_insertion_point(field_set:TransferDataAck.CopyGuid)
}

// int32 ServerID = 5;
inline void TransferDataAck::clear_serverid() {
  serverid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransferDataAck::_internal_serverid() const {
  return serverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransferDataAck::serverid() const {
  // @@protoc_insertion_point(field_get:TransferDataAck.ServerID)
  return _internal_serverid();
}
inline void TransferDataAck::_internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverid_ = value;
}
inline void TransferDataAck::set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:TransferDataAck.ServerID)
}

// -------------------------------------------------------------------

// NotifyIntoScene

// uint64 RoleID = 1;
inline void NotifyIntoScene::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NotifyIntoScene::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NotifyIntoScene::roleid() const {
  // @@protoc_insertion_point(field_get:NotifyIntoScene.RoleID)
  return _internal_roleid();
}
inline void NotifyIntoScene::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void NotifyIntoScene::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:NotifyIntoScene.RoleID)
}

// int32 CopyID = 2;
inline void NotifyIntoScene::clear_copyid() {
  copyid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NotifyIntoScene::_internal_copyid() const {
  return copyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NotifyIntoScene::copyid() const {
  // @@protoc_insertion_point(field_get:NotifyIntoScene.CopyID)
  return _internal_copyid();
}
inline void NotifyIntoScene::_internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyid_ = value;
}
inline void NotifyIntoScene::set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:NotifyIntoScene.CopyID)
}

// int32 CopyGuid = 3;
inline void NotifyIntoScene::clear_copyguid() {
  copyguid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NotifyIntoScene::_internal_copyguid() const {
  return copyguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NotifyIntoScene::copyguid() const {
  // @@protoc_insertion_point(field_get:NotifyIntoScene.CopyGuid)
  return _internal_copyguid();
}
inline void NotifyIntoScene::_internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyguid_ = value;
}
inline void NotifyIntoScene::set_copyguid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyguid(value);
  // @@protoc_insertion_point(field_set:NotifyIntoScene.CopyGuid)
}

// int32 ServerID = 4;
inline void NotifyIntoScene::clear_serverid() {
  serverid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NotifyIntoScene::_internal_serverid() const {
  return serverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NotifyIntoScene::serverid() const {
  // @@protoc_insertion_point(field_get:NotifyIntoScene.ServerID)
  return _internal_serverid();
}
inline void NotifyIntoScene::_internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverid_ = value;
}
inline void NotifyIntoScene::set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:NotifyIntoScene.ServerID)
}

// -------------------------------------------------------------------

// NearByRoleItem

// uint64 RoleID = 1;
inline void NearByRoleItem::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NearByRoleItem::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NearByRoleItem::roleid() const {
  // @@protoc_insertion_point(field_get:NearByRoleItem.RoleID)
  return _internal_roleid();
}
inline void NearByRoleItem::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void NearByRoleItem::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:NearByRoleItem.RoleID)
}

// int32 ActorID = 2;
inline void NearByRoleItem::clear_actorid() {
  actorid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NearByRoleItem::_internal_actorid() const {
  return actorid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NearByRoleItem::actorid() const {
  // @@protoc_insertion_point(field_get:NearByRoleItem.ActorID)
  return _internal_actorid();
}
inline void NearByRoleItem::_internal_set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actorid_ = value;
}
inline void NearByRoleItem::set_actorid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actorid(value);
  // @@protoc_insertion_point(field_set:NearByRoleItem.ActorID)
}

// int32 Level = 3;
inline void NearByRoleItem::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NearByRoleItem::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NearByRoleItem::level() const {
  // @@protoc_insertion_point(field_get:NearByRoleItem.Level)
  return _internal_level();
}
inline void NearByRoleItem::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void NearByRoleItem::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:NearByRoleItem.Level)
}

// string Name = 4;
inline void NearByRoleItem::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& NearByRoleItem::name() const {
  // @@protoc_insertion_point(field_get:NearByRoleItem.Name)
  return _internal_name();
}
inline void NearByRoleItem::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:NearByRoleItem.Name)
}
inline std::string* NearByRoleItem::mutable_name() {
  // @@protoc_insertion_point(field_mutable:NearByRoleItem.Name)
  return _internal_mutable_name();
}
inline const std::string& NearByRoleItem::_internal_name() const {
  return name_.Get();
}
inline void NearByRoleItem::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void NearByRoleItem::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:NearByRoleItem.Name)
}
inline void NearByRoleItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:NearByRoleItem.Name)
}
inline void NearByRoleItem::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:NearByRoleItem.Name)
}
inline std::string* NearByRoleItem::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* NearByRoleItem::release_name() {
  // @@protoc_insertion_point(field_release:NearByRoleItem.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void NearByRoleItem::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:NearByRoleItem.Name)
}
inline std::string* NearByRoleItem::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:NearByRoleItem.Name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void NearByRoleItem::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:NearByRoleItem.Name)
}

// -------------------------------------------------------------------

// CopyInsItem

// uint32 CopyGuid = 1;
inline void CopyInsItem::clear_copyguid() {
  copyguid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CopyInsItem::_internal_copyguid() const {
  return copyguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CopyInsItem::copyguid() const {
  // @@protoc_insertion_point(field_get:CopyInsItem.CopyGuid)
  return _internal_copyguid();
}
inline void CopyInsItem::_internal_set_copyguid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  copyguid_ = value;
}
inline void CopyInsItem::set_copyguid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_copyguid(value);
  // @@protoc_insertion_point(field_set:CopyInsItem.CopyGuid)
}

// int32 CopyID = 2;
inline void CopyInsItem::clear_copyid() {
  copyid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CopyInsItem::_internal_copyid() const {
  return copyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CopyInsItem::copyid() const {
  // @@protoc_insertion_point(field_get:CopyInsItem.CopyID)
  return _internal_copyid();
}
inline void CopyInsItem::_internal_set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copyid_ = value;
}
inline void CopyInsItem::set_copyid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:CopyInsItem.CopyID)
}

// int32 CopyType = 3;
inline void CopyInsItem::clear_copytype() {
  copytype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CopyInsItem::_internal_copytype() const {
  return copytype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CopyInsItem::copytype() const {
  // @@protoc_insertion_point(field_get:CopyInsItem.CopyType)
  return _internal_copytype();
}
inline void CopyInsItem::_internal_set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  copytype_ = value;
}
inline void CopyInsItem::set_copytype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_copytype(value);
  // @@protoc_insertion_point(field_set:CopyInsItem.CopyType)
}

// int32 ServerID = 4;
inline void CopyInsItem::clear_serverid() {
  serverid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CopyInsItem::_internal_serverid() const {
  return serverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CopyInsItem::serverid() const {
  // @@protoc_insertion_point(field_get:CopyInsItem.ServerID)
  return _internal_serverid();
}
inline void CopyInsItem::_internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverid_ = value;
}
inline void CopyInsItem::set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:CopyInsItem.ServerID)
}

// -------------------------------------------------------------------

// CopyReportReq

// int32 ServerID = 1;
inline void CopyReportReq::clear_serverid() {
  serverid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CopyReportReq::_internal_serverid() const {
  return serverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CopyReportReq::serverid() const {
  // @@protoc_insertion_point(field_get:CopyReportReq.ServerID)
  return _internal_serverid();
}
inline void CopyReportReq::_internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverid_ = value;
}
inline void CopyReportReq::set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:CopyReportReq.ServerID)
}

// repeated .CopyInsItem CopyList = 2;
inline int CopyReportReq::_internal_copylist_size() const {
  return copylist_.size();
}
inline int CopyReportReq::copylist_size() const {
  return _internal_copylist_size();
}
inline void CopyReportReq::clear_copylist() {
  copylist_.Clear();
}
inline ::CopyInsItem* CopyReportReq::mutable_copylist(int index) {
  // @@protoc_insertion_point(field_mutable:CopyReportReq.CopyList)
  return copylist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CopyInsItem >*
CopyReportReq::mutable_copylist() {
  // @@protoc_insertion_point(field_mutable_list:CopyReportReq.CopyList)
  return &copylist_;
}
inline const ::CopyInsItem& CopyReportReq::_internal_copylist(int index) const {
  return copylist_.Get(index);
}
inline const ::CopyInsItem& CopyReportReq::copylist(int index) const {
  // @@protoc_insertion_point(field_get:CopyReportReq.CopyList)
  return _internal_copylist(index);
}
inline ::CopyInsItem* CopyReportReq::_internal_add_copylist() {
  return copylist_.Add();
}
inline ::CopyInsItem* CopyReportReq::add_copylist() {
  // @@protoc_insertion_point(field_add:CopyReportReq.CopyList)
  return _internal_add_copylist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CopyInsItem >&
CopyReportReq::copylist() const {
  // @@protoc_insertion_point(field_list:CopyReportReq.CopyList)
  return copylist_;
}

// -------------------------------------------------------------------

// UseHpBottleReq

// -------------------------------------------------------------------

// UseHpBottleAck

// uint32 RetCode = 1;
inline void UseHpBottleAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UseHpBottleAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UseHpBottleAck::retcode() const {
  // @@protoc_insertion_point(field_get:UseHpBottleAck.RetCode)
  return _internal_retcode();
}
inline void UseHpBottleAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void UseHpBottleAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:UseHpBottleAck.RetCode)
}

// int32 Count = 2;
inline void UseHpBottleAck::clear_count() {
  count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UseHpBottleAck::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UseHpBottleAck::count() const {
  // @@protoc_insertion_point(field_get:UseHpBottleAck.Count)
  return _internal_count();
}
inline void UseHpBottleAck::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_ = value;
}
inline void UseHpBottleAck::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:UseHpBottleAck.Count)
}

// -------------------------------------------------------------------

// UseMpBottleReq

// -------------------------------------------------------------------

// UseMpBottleAck

// uint32 RetCode = 1;
inline void UseMpBottleAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UseMpBottleAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UseMpBottleAck::retcode() const {
  // @@protoc_insertion_point(field_get:UseMpBottleAck.RetCode)
  return _internal_retcode();
}
inline void UseMpBottleAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void UseMpBottleAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:UseMpBottleAck.RetCode)
}

// int32 Count = 2;
inline void UseMpBottleAck::clear_count() {
  count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UseMpBottleAck::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UseMpBottleAck::count() const {
  // @@protoc_insertion_point(field_get:UseMpBottleAck.Count)
  return _internal_count();
}
inline void UseMpBottleAck::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_ = value;
}
inline void UseMpBottleAck::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:UseMpBottleAck.Count)
}

// -------------------------------------------------------------------

// ChatMessageReq

// string SrcName = 1;
inline void ChatMessageReq::clear_srcname() {
  srcname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ChatMessageReq::srcname() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.SrcName)
  return _internal_srcname();
}
inline void ChatMessageReq::set_srcname(const std::string& value) {
  _internal_set_srcname(value);
  // @@protoc_insertion_point(field_set:ChatMessageReq.SrcName)
}
inline std::string* ChatMessageReq::mutable_srcname() {
  // @@protoc_insertion_point(field_mutable:ChatMessageReq.SrcName)
  return _internal_mutable_srcname();
}
inline const std::string& ChatMessageReq::_internal_srcname() const {
  return srcname_.Get();
}
inline void ChatMessageReq::_internal_set_srcname(const std::string& value) {
  
  srcname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ChatMessageReq::set_srcname(std::string&& value) {
  
  srcname_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ChatMessageReq.SrcName)
}
inline void ChatMessageReq::set_srcname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  srcname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ChatMessageReq.SrcName)
}
inline void ChatMessageReq::set_srcname(const char* value,
    size_t size) {
  
  srcname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ChatMessageReq.SrcName)
}
inline std::string* ChatMessageReq::_internal_mutable_srcname() {
  
  return srcname_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ChatMessageReq::release_srcname() {
  // @@protoc_insertion_point(field_release:ChatMessageReq.SrcName)
  return srcname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ChatMessageReq::set_allocated_srcname(std::string* srcname) {
  if (srcname != nullptr) {
    
  } else {
    
  }
  srcname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), srcname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ChatMessageReq.SrcName)
}
inline std::string* ChatMessageReq::unsafe_arena_release_srcname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ChatMessageReq.SrcName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return srcname_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ChatMessageReq::unsafe_arena_set_allocated_srcname(
    std::string* srcname) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (srcname != nullptr) {
    
  } else {
    
  }
  srcname_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      srcname, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ChatMessageReq.SrcName)
}

// uint64 SrcID = 2;
inline void ChatMessageReq::clear_srcid() {
  srcid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageReq::_internal_srcid() const {
  return srcid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageReq::srcid() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.SrcID)
  return _internal_srcid();
}
inline void ChatMessageReq::_internal_set_srcid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  srcid_ = value;
}
inline void ChatMessageReq::set_srcid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_srcid(value);
  // @@protoc_insertion_point(field_set:ChatMessageReq.SrcID)
}

// uint64 TargetID = 3;
inline void ChatMessageReq::clear_targetid() {
  targetid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageReq::_internal_targetid() const {
  return targetid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageReq::targetid() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.TargetID)
  return _internal_targetid();
}
inline void ChatMessageReq::_internal_set_targetid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  targetid_ = value;
}
inline void ChatMessageReq::set_targetid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_targetid(value);
  // @@protoc_insertion_point(field_set:ChatMessageReq.TargetID)
}

// int32 ChatChl = 4;
inline void ChatMessageReq::clear_chatchl() {
  chatchl_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ChatMessageReq::_internal_chatchl() const {
  return chatchl_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ChatMessageReq::chatchl() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.ChatChl)
  return _internal_chatchl();
}
inline void ChatMessageReq::_internal_set_chatchl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chatchl_ = value;
}
inline void ChatMessageReq::set_chatchl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chatchl(value);
  // @@protoc_insertion_point(field_set:ChatMessageReq.ChatChl)
}

// uint64 GuildID = 5;
inline void ChatMessageReq::clear_guildid() {
  guildid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageReq::_internal_guildid() const {
  return guildid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageReq::guildid() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.GuildID)
  return _internal_guildid();
}
inline void ChatMessageReq::_internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guildid_ = value;
}
inline void ChatMessageReq::set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guildid(value);
  // @@protoc_insertion_point(field_set:ChatMessageReq.GuildID)
}

// string Content = 6;
inline void ChatMessageReq::clear_content() {
  content_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ChatMessageReq::content() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.Content)
  return _internal_content();
}
inline void ChatMessageReq::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:ChatMessageReq.Content)
}
inline std::string* ChatMessageReq::mutable_content() {
  // @@protoc_insertion_point(field_mutable:ChatMessageReq.Content)
  return _internal_mutable_content();
}
inline const std::string& ChatMessageReq::_internal_content() const {
  return content_.Get();
}
inline void ChatMessageReq::_internal_set_content(const std::string& value) {
  
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ChatMessageReq::set_content(std::string&& value) {
  
  content_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ChatMessageReq.Content)
}
inline void ChatMessageReq::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ChatMessageReq.Content)
}
inline void ChatMessageReq::set_content(const char* value,
    size_t size) {
  
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ChatMessageReq.Content)
}
inline std::string* ChatMessageReq::_internal_mutable_content() {
  
  return content_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ChatMessageReq::release_content() {
  // @@protoc_insertion_point(field_release:ChatMessageReq.Content)
  return content_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ChatMessageReq::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ChatMessageReq.Content)
}
inline std::string* ChatMessageReq::unsafe_arena_release_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ChatMessageReq.Content)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return content_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ChatMessageReq::unsafe_arena_set_allocated_content(
    std::string* content) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (content != nullptr) {
    
  } else {
    
  }
  content_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      content, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ChatMessageReq.Content)
}

// -------------------------------------------------------------------

// ChatMessageAck

// uint32 RetCode = 1;
inline void ChatMessageAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ChatMessageAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ChatMessageAck::retcode() const {
  // @@protoc_insertion_point(field_get:ChatMessageAck.RetCode)
  return _internal_retcode();
}
inline void ChatMessageAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void ChatMessageAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:ChatMessageAck.RetCode)
}

// -------------------------------------------------------------------

// ChatMessageNty

// string SrcName = 1;
inline void ChatMessageNty::clear_srcname() {
  srcname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ChatMessageNty::srcname() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.SrcName)
  return _internal_srcname();
}
inline void ChatMessageNty::set_srcname(const std::string& value) {
  _internal_set_srcname(value);
  // @@protoc_insertion_point(field_set:ChatMessageNty.SrcName)
}
inline std::string* ChatMessageNty::mutable_srcname() {
  // @@protoc_insertion_point(field_mutable:ChatMessageNty.SrcName)
  return _internal_mutable_srcname();
}
inline const std::string& ChatMessageNty::_internal_srcname() const {
  return srcname_.Get();
}
inline void ChatMessageNty::_internal_set_srcname(const std::string& value) {
  
  srcname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ChatMessageNty::set_srcname(std::string&& value) {
  
  srcname_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ChatMessageNty.SrcName)
}
inline void ChatMessageNty::set_srcname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  srcname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ChatMessageNty.SrcName)
}
inline void ChatMessageNty::set_srcname(const char* value,
    size_t size) {
  
  srcname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ChatMessageNty.SrcName)
}
inline std::string* ChatMessageNty::_internal_mutable_srcname() {
  
  return srcname_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ChatMessageNty::release_srcname() {
  // @@protoc_insertion_point(field_release:ChatMessageNty.SrcName)
  return srcname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ChatMessageNty::set_allocated_srcname(std::string* srcname) {
  if (srcname != nullptr) {
    
  } else {
    
  }
  srcname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), srcname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ChatMessageNty.SrcName)
}
inline std::string* ChatMessageNty::unsafe_arena_release_srcname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ChatMessageNty.SrcName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return srcname_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ChatMessageNty::unsafe_arena_set_allocated_srcname(
    std::string* srcname) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (srcname != nullptr) {
    
  } else {
    
  }
  srcname_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      srcname, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ChatMessageNty.SrcName)
}

// uint64 SrcID = 2;
inline void ChatMessageNty::clear_srcid() {
  srcid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageNty::_internal_srcid() const {
  return srcid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageNty::srcid() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.SrcID)
  return _internal_srcid();
}
inline void ChatMessageNty::_internal_set_srcid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  srcid_ = value;
}
inline void ChatMessageNty::set_srcid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_srcid(value);
  // @@protoc_insertion_point(field_set:ChatMessageNty.SrcID)
}

// int32 SrcLevel = 3;
inline void ChatMessageNty::clear_srclevel() {
  srclevel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ChatMessageNty::_internal_srclevel() const {
  return srclevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ChatMessageNty::srclevel() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.SrcLevel)
  return _internal_srclevel();
}
inline void ChatMessageNty::_internal_set_srclevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  srclevel_ = value;
}
inline void ChatMessageNty::set_srclevel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_srclevel(value);
  // @@protoc_insertion_point(field_set:ChatMessageNty.SrcLevel)
}

// uint64 TargetID = 4;
inline void ChatMessageNty::clear_targetid() {
  targetid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageNty::_internal_targetid() const {
  return targetid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageNty::targetid() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.TargetID)
  return _internal_targetid();
}
inline void ChatMessageNty::_internal_set_targetid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  targetid_ = value;
}
inline void ChatMessageNty::set_targetid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_targetid(value);
  // @@protoc_insertion_point(field_set:ChatMessageNty.TargetID)
}

// int32 ChatChl = 5;
inline void ChatMessageNty::clear_chatchl() {
  chatchl_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ChatMessageNty::_internal_chatchl() const {
  return chatchl_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ChatMessageNty::chatchl() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.ChatChl)
  return _internal_chatchl();
}
inline void ChatMessageNty::_internal_set_chatchl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chatchl_ = value;
}
inline void ChatMessageNty::set_chatchl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chatchl(value);
  // @@protoc_insertion_point(field_set:ChatMessageNty.ChatChl)
}

// uint64 GuildID = 6;
inline void ChatMessageNty::clear_guildid() {
  guildid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageNty::_internal_guildid() const {
  return guildid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageNty::guildid() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.GuildID)
  return _internal_guildid();
}
inline void ChatMessageNty::_internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guildid_ = value;
}
inline void ChatMessageNty::set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guildid(value);
  // @@protoc_insertion_point(field_set:ChatMessageNty.GuildID)
}

// uint64 TimeStamp = 7;
inline void ChatMessageNty::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageNty::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ChatMessageNty::timestamp() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.TimeStamp)
  return _internal_timestamp();
}
inline void ChatMessageNty::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  timestamp_ = value;
}
inline void ChatMessageNty::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:ChatMessageNty.TimeStamp)
}

// string Content = 8;
inline void ChatMessageNty::clear_content() {
  content_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ChatMessageNty::content() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.Content)
  return _internal_content();
}
inline void ChatMessageNty::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:ChatMessageNty.Content)
}
inline std::string* ChatMessageNty::mutable_content() {
  // @@protoc_insertion_point(field_mutable:ChatMessageNty.Content)
  return _internal_mutable_content();
}
inline const std::string& ChatMessageNty::_internal_content() const {
  return content_.Get();
}
inline void ChatMessageNty::_internal_set_content(const std::string& value) {
  
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ChatMessageNty::set_content(std::string&& value) {
  
  content_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ChatMessageNty.Content)
}
inline void ChatMessageNty::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ChatMessageNty.Content)
}
inline void ChatMessageNty::set_content(const char* value,
    size_t size) {
  
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ChatMessageNty.Content)
}
inline std::string* ChatMessageNty::_internal_mutable_content() {
  
  return content_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ChatMessageNty::release_content() {
  // @@protoc_insertion_point(field_release:ChatMessageNty.Content)
  return content_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ChatMessageNty::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ChatMessageNty.Content)
}
inline std::string* ChatMessageNty::unsafe_arena_release_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ChatMessageNty.Content)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return content_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ChatMessageNty::unsafe_arena_set_allocated_content(
    std::string* content) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (content != nullptr) {
    
  } else {
    
  }
  content_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      content, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ChatMessageNty.Content)
}

// -------------------------------------------------------------------

// CommonReq

// uint32 Param1 = 1;
inline void CommonReq::clear_param1() {
  param1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CommonReq::_internal_param1() const {
  return param1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CommonReq::param1() const {
  // @@protoc_insertion_point(field_get:CommonReq.Param1)
  return _internal_param1();
}
inline void CommonReq::_internal_set_param1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  param1_ = value;
}
inline void CommonReq::set_param1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:CommonReq.Param1)
}

// -------------------------------------------------------------------

// CommonAck

// uint32 RetCode = 1;
inline void CommonAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CommonAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CommonAck::retcode() const {
  // @@protoc_insertion_point(field_get:CommonAck.RetCode)
  return _internal_retcode();
}
inline void CommonAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void CommonAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:CommonAck.RetCode)
}

// -------------------------------------------------------------------

// BroadMessageNotify

// uint32 MsgID = 1;
inline void BroadMessageNotify::clear_msgid() {
  msgid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BroadMessageNotify::_internal_msgid() const {
  return msgid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BroadMessageNotify::msgid() const {
  // @@protoc_insertion_point(field_get:BroadMessageNotify.MsgID)
  return _internal_msgid();
}
inline void BroadMessageNotify::_internal_set_msgid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  msgid_ = value;
}
inline void BroadMessageNotify::set_msgid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_msgid(value);
  // @@protoc_insertion_point(field_set:BroadMessageNotify.MsgID)
}

// repeated uint32 ConnID = 2;
inline int BroadMessageNotify::_internal_connid_size() const {
  return connid_.size();
}
inline int BroadMessageNotify::connid_size() const {
  return _internal_connid_size();
}
inline void BroadMessageNotify::clear_connid() {
  connid_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BroadMessageNotify::_internal_connid(int index) const {
  return connid_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BroadMessageNotify::connid(int index) const {
  // @@protoc_insertion_point(field_get:BroadMessageNotify.ConnID)
  return _internal_connid(index);
}
inline void BroadMessageNotify::set_connid(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  connid_.Set(index, value);
  // @@protoc_insertion_point(field_set:BroadMessageNotify.ConnID)
}
inline void BroadMessageNotify::_internal_add_connid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  connid_.Add(value);
}
inline void BroadMessageNotify::add_connid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_connid(value);
  // @@protoc_insertion_point(field_add:BroadMessageNotify.ConnID)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
BroadMessageNotify::_internal_connid() const {
  return connid_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
BroadMessageNotify::connid() const {
  // @@protoc_insertion_point(field_list:BroadMessageNotify.ConnID)
  return _internal_connid();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
BroadMessageNotify::_internal_mutable_connid() {
  return &connid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
BroadMessageNotify::mutable_connid() {
  // @@protoc_insertion_point(field_mutable_list:BroadMessageNotify.ConnID)
  return _internal_mutable_connid();
}

// bytes MsgData = 3;
inline void BroadMessageNotify::clear_msgdata() {
  msgdata_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& BroadMessageNotify::msgdata() const {
  // @@protoc_insertion_point(field_get:BroadMessageNotify.MsgData)
  return _internal_msgdata();
}
inline void BroadMessageNotify::set_msgdata(const std::string& value) {
  _internal_set_msgdata(value);
  // @@protoc_insertion_point(field_set:BroadMessageNotify.MsgData)
}
inline std::string* BroadMessageNotify::mutable_msgdata() {
  // @@protoc_insertion_point(field_mutable:BroadMessageNotify.MsgData)
  return _internal_mutable_msgdata();
}
inline const std::string& BroadMessageNotify::_internal_msgdata() const {
  return msgdata_.Get();
}
inline void BroadMessageNotify::_internal_set_msgdata(const std::string& value) {
  
  msgdata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void BroadMessageNotify::set_msgdata(std::string&& value) {
  
  msgdata_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:BroadMessageNotify.MsgData)
}
inline void BroadMessageNotify::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msgdata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:BroadMessageNotify.MsgData)
}
inline void BroadMessageNotify::set_msgdata(const void* value,
    size_t size) {
  
  msgdata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:BroadMessageNotify.MsgData)
}
inline std::string* BroadMessageNotify::_internal_mutable_msgdata() {
  
  return msgdata_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* BroadMessageNotify::release_msgdata() {
  // @@protoc_insertion_point(field_release:BroadMessageNotify.MsgData)
  return msgdata_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void BroadMessageNotify::set_allocated_msgdata(std::string* msgdata) {
  if (msgdata != nullptr) {
    
  } else {
    
  }
  msgdata_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msgdata,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:BroadMessageNotify.MsgData)
}
inline std::string* BroadMessageNotify::unsafe_arena_release_msgdata() {
  // @@protoc_insertion_point(field_unsafe_arena_release:BroadMessageNotify.MsgData)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return msgdata_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void BroadMessageNotify::unsafe_arena_set_allocated_msgdata(
    std::string* msgdata) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (msgdata != nullptr) {
    
  } else {
    
  }
  msgdata_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      msgdata, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:BroadMessageNotify.MsgData)
}

// -------------------------------------------------------------------

// LogicRegToLoginReq

// int32 ServerID = 1;
inline void LogicRegToLoginReq::clear_serverid() {
  serverid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicRegToLoginReq::_internal_serverid() const {
  return serverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicRegToLoginReq::serverid() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginReq.ServerID)
  return _internal_serverid();
}
inline void LogicRegToLoginReq::_internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverid_ = value;
}
inline void LogicRegToLoginReq::set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:LogicRegToLoginReq.ServerID)
}

// string ServerName = 2;
inline void LogicRegToLoginReq::clear_servername() {
  servername_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& LogicRegToLoginReq::servername() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginReq.ServerName)
  return _internal_servername();
}
inline void LogicRegToLoginReq::set_servername(const std::string& value) {
  _internal_set_servername(value);
  // @@protoc_insertion_point(field_set:LogicRegToLoginReq.ServerName)
}
inline std::string* LogicRegToLoginReq::mutable_servername() {
  // @@protoc_insertion_point(field_mutable:LogicRegToLoginReq.ServerName)
  return _internal_mutable_servername();
}
inline const std::string& LogicRegToLoginReq::_internal_servername() const {
  return servername_.Get();
}
inline void LogicRegToLoginReq::_internal_set_servername(const std::string& value) {
  
  servername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void LogicRegToLoginReq::set_servername(std::string&& value) {
  
  servername_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:LogicRegToLoginReq.ServerName)
}
inline void LogicRegToLoginReq::set_servername(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  servername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:LogicRegToLoginReq.ServerName)
}
inline void LogicRegToLoginReq::set_servername(const char* value,
    size_t size) {
  
  servername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:LogicRegToLoginReq.ServerName)
}
inline std::string* LogicRegToLoginReq::_internal_mutable_servername() {
  
  return servername_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* LogicRegToLoginReq::release_servername() {
  // @@protoc_insertion_point(field_release:LogicRegToLoginReq.ServerName)
  return servername_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void LogicRegToLoginReq::set_allocated_servername(std::string* servername) {
  if (servername != nullptr) {
    
  } else {
    
  }
  servername_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), servername,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:LogicRegToLoginReq.ServerName)
}
inline std::string* LogicRegToLoginReq::unsafe_arena_release_servername() {
  // @@protoc_insertion_point(field_unsafe_arena_release:LogicRegToLoginReq.ServerName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return servername_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void LogicRegToLoginReq::unsafe_arena_set_allocated_servername(
    std::string* servername) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (servername != nullptr) {
    
  } else {
    
  }
  servername_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      servername, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:LogicRegToLoginReq.ServerName)
}

// string SvrInnerIp = 3;
inline void LogicRegToLoginReq::clear_svrinnerip() {
  svrinnerip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& LogicRegToLoginReq::svrinnerip() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginReq.SvrInnerIp)
  return _internal_svrinnerip();
}
inline void LogicRegToLoginReq::set_svrinnerip(const std::string& value) {
  _internal_set_svrinnerip(value);
  // @@protoc_insertion_point(field_set:LogicRegToLoginReq.SvrInnerIp)
}
inline std::string* LogicRegToLoginReq::mutable_svrinnerip() {
  // @@protoc_insertion_point(field_mutable:LogicRegToLoginReq.SvrInnerIp)
  return _internal_mutable_svrinnerip();
}
inline const std::string& LogicRegToLoginReq::_internal_svrinnerip() const {
  return svrinnerip_.Get();
}
inline void LogicRegToLoginReq::_internal_set_svrinnerip(const std::string& value) {
  
  svrinnerip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void LogicRegToLoginReq::set_svrinnerip(std::string&& value) {
  
  svrinnerip_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:LogicRegToLoginReq.SvrInnerIp)
}
inline void LogicRegToLoginReq::set_svrinnerip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  svrinnerip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:LogicRegToLoginReq.SvrInnerIp)
}
inline void LogicRegToLoginReq::set_svrinnerip(const char* value,
    size_t size) {
  
  svrinnerip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:LogicRegToLoginReq.SvrInnerIp)
}
inline std::string* LogicRegToLoginReq::_internal_mutable_svrinnerip() {
  
  return svrinnerip_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* LogicRegToLoginReq::release_svrinnerip() {
  // @@protoc_insertion_point(field_release:LogicRegToLoginReq.SvrInnerIp)
  return svrinnerip_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void LogicRegToLoginReq::set_allocated_svrinnerip(std::string* svrinnerip) {
  if (svrinnerip != nullptr) {
    
  } else {
    
  }
  svrinnerip_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), svrinnerip,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:LogicRegToLoginReq.SvrInnerIp)
}
inline std::string* LogicRegToLoginReq::unsafe_arena_release_svrinnerip() {
  // @@protoc_insertion_point(field_unsafe_arena_release:LogicRegToLoginReq.SvrInnerIp)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return svrinnerip_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void LogicRegToLoginReq::unsafe_arena_set_allocated_svrinnerip(
    std::string* svrinnerip) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (svrinnerip != nullptr) {
    
  } else {
    
  }
  svrinnerip_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      svrinnerip, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:LogicRegToLoginReq.SvrInnerIp)
}

// int32 ServerPort = 4;
inline void LogicRegToLoginReq::clear_serverport() {
  serverport_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicRegToLoginReq::_internal_serverport() const {
  return serverport_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicRegToLoginReq::serverport() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginReq.ServerPort)
  return _internal_serverport();
}
inline void LogicRegToLoginReq::_internal_set_serverport(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverport_ = value;
}
inline void LogicRegToLoginReq::set_serverport(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverport(value);
  // @@protoc_insertion_point(field_set:LogicRegToLoginReq.ServerPort)
}

// int32 HttpPort = 5;
inline void LogicRegToLoginReq::clear_httpport() {
  httpport_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicRegToLoginReq::_internal_httpport() const {
  return httpport_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicRegToLoginReq::httpport() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginReq.HttpPort)
  return _internal_httpport();
}
inline void LogicRegToLoginReq::_internal_set_httpport(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  httpport_ = value;
}
inline void LogicRegToLoginReq::set_httpport(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_httpport(value);
  // @@protoc_insertion_point(field_set:LogicRegToLoginReq.HttpPort)
}

// -------------------------------------------------------------------

// LogicRegToLoginAck

// uint32 RetCode = 1;
inline void LogicRegToLoginAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogicRegToLoginAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogicRegToLoginAck::retcode() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginAck.RetCode)
  return _internal_retcode();
}
inline void LogicRegToLoginAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void LogicRegToLoginAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:LogicRegToLoginAck.RetCode)
}

// string NewSvrName = 2;
inline void LogicRegToLoginAck::clear_newsvrname() {
  newsvrname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& LogicRegToLoginAck::newsvrname() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginAck.NewSvrName)
  return _internal_newsvrname();
}
inline void LogicRegToLoginAck::set_newsvrname(const std::string& value) {
  _internal_set_newsvrname(value);
  // @@protoc_insertion_point(field_set:LogicRegToLoginAck.NewSvrName)
}
inline std::string* LogicRegToLoginAck::mutable_newsvrname() {
  // @@protoc_insertion_point(field_mutable:LogicRegToLoginAck.NewSvrName)
  return _internal_mutable_newsvrname();
}
inline const std::string& LogicRegToLoginAck::_internal_newsvrname() const {
  return newsvrname_.Get();
}
inline void LogicRegToLoginAck::_internal_set_newsvrname(const std::string& value) {
  
  newsvrname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void LogicRegToLoginAck::set_newsvrname(std::string&& value) {
  
  newsvrname_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:LogicRegToLoginAck.NewSvrName)
}
inline void LogicRegToLoginAck::set_newsvrname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  newsvrname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:LogicRegToLoginAck.NewSvrName)
}
inline void LogicRegToLoginAck::set_newsvrname(const char* value,
    size_t size) {
  
  newsvrname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:LogicRegToLoginAck.NewSvrName)
}
inline std::string* LogicRegToLoginAck::_internal_mutable_newsvrname() {
  
  return newsvrname_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* LogicRegToLoginAck::release_newsvrname() {
  // @@protoc_insertion_point(field_release:LogicRegToLoginAck.NewSvrName)
  return newsvrname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void LogicRegToLoginAck::set_allocated_newsvrname(std::string* newsvrname) {
  if (newsvrname != nullptr) {
    
  } else {
    
  }
  newsvrname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), newsvrname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:LogicRegToLoginAck.NewSvrName)
}
inline std::string* LogicRegToLoginAck::unsafe_arena_release_newsvrname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:LogicRegToLoginAck.NewSvrName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return newsvrname_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void LogicRegToLoginAck::unsafe_arena_set_allocated_newsvrname(
    std::string* newsvrname) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (newsvrname != nullptr) {
    
  } else {
    
  }
  newsvrname_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      newsvrname, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:LogicRegToLoginAck.NewSvrName)
}

// uint64 SvrOpenTime = 3;
inline void LogicRegToLoginAck::clear_svropentime() {
  svropentime_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LogicRegToLoginAck::_internal_svropentime() const {
  return svropentime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LogicRegToLoginAck::svropentime() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginAck.SvrOpenTime)
  return _internal_svropentime();
}
inline void LogicRegToLoginAck::_internal_set_svropentime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  svropentime_ = value;
}
inline void LogicRegToLoginAck::set_svropentime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_svropentime(value);
  // @@protoc_insertion_point(field_set:LogicRegToLoginAck.SvrOpenTime)
}

// -------------------------------------------------------------------

// LogicRegToDbSvrReq

// int32 ServerID = 1;
inline void LogicRegToDbSvrReq::clear_serverid() {
  serverid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicRegToDbSvrReq::_internal_serverid() const {
  return serverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicRegToDbSvrReq::serverid() const {
  // @@protoc_insertion_point(field_get:LogicRegToDbSvrReq.ServerID)
  return _internal_serverid();
}
inline void LogicRegToDbSvrReq::_internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverid_ = value;
}
inline void LogicRegToDbSvrReq::set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:LogicRegToDbSvrReq.ServerID)
}

// string ServerName = 2;
inline void LogicRegToDbSvrReq::clear_servername() {
  servername_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& LogicRegToDbSvrReq::servername() const {
  // @@protoc_insertion_point(field_get:LogicRegToDbSvrReq.ServerName)
  return _internal_servername();
}
inline void LogicRegToDbSvrReq::set_servername(const std::string& value) {
  _internal_set_servername(value);
  // @@protoc_insertion_point(field_set:LogicRegToDbSvrReq.ServerName)
}
inline std::string* LogicRegToDbSvrReq::mutable_servername() {
  // @@protoc_insertion_point(field_mutable:LogicRegToDbSvrReq.ServerName)
  return _internal_mutable_servername();
}
inline const std::string& LogicRegToDbSvrReq::_internal_servername() const {
  return servername_.Get();
}
inline void LogicRegToDbSvrReq::_internal_set_servername(const std::string& value) {
  
  servername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void LogicRegToDbSvrReq::set_servername(std::string&& value) {
  
  servername_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:LogicRegToDbSvrReq.ServerName)
}
inline void LogicRegToDbSvrReq::set_servername(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  servername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:LogicRegToDbSvrReq.ServerName)
}
inline void LogicRegToDbSvrReq::set_servername(const char* value,
    size_t size) {
  
  servername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:LogicRegToDbSvrReq.ServerName)
}
inline std::string* LogicRegToDbSvrReq::_internal_mutable_servername() {
  
  return servername_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* LogicRegToDbSvrReq::release_servername() {
  // @@protoc_insertion_point(field_release:LogicRegToDbSvrReq.ServerName)
  return servername_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void LogicRegToDbSvrReq::set_allocated_servername(std::string* servername) {
  if (servername != nullptr) {
    
  } else {
    
  }
  servername_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), servername,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:LogicRegToDbSvrReq.ServerName)
}
inline std::string* LogicRegToDbSvrReq::unsafe_arena_release_servername() {
  // @@protoc_insertion_point(field_unsafe_arena_release:LogicRegToDbSvrReq.ServerName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return servername_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void LogicRegToDbSvrReq::unsafe_arena_set_allocated_servername(
    std::string* servername) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (servername != nullptr) {
    
  } else {
    
  }
  servername_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      servername, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:LogicRegToDbSvrReq.ServerName)
}

// uint32 ProcessID = 3;
inline void LogicRegToDbSvrReq::clear_processid() {
  processid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogicRegToDbSvrReq::_internal_processid() const {
  return processid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogicRegToDbSvrReq::processid() const {
  // @@protoc_insertion_point(field_get:LogicRegToDbSvrReq.ProcessID)
  return _internal_processid();
}
inline void LogicRegToDbSvrReq::_internal_set_processid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  processid_ = value;
}
inline void LogicRegToDbSvrReq::set_processid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_processid(value);
  // @@protoc_insertion_point(field_set:LogicRegToDbSvrReq.ProcessID)
}

// -------------------------------------------------------------------

// LogicRegToDbSvrAck

// uint32 RetCode = 1;
inline void LogicRegToDbSvrAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogicRegToDbSvrAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogicRegToDbSvrAck::retcode() const {
  // @@protoc_insertion_point(field_get:LogicRegToDbSvrAck.RetCode)
  return _internal_retcode();
}
inline void LogicRegToDbSvrAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void LogicRegToDbSvrAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:LogicRegToDbSvrAck.RetCode)
}

// -------------------------------------------------------------------

// LogicUpdateInfoReq

// int32 ServerID = 1;
inline void LogicUpdateInfoReq::clear_serverid() {
  serverid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::_internal_serverid() const {
  return serverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::serverid() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.ServerID)
  return _internal_serverid();
}
inline void LogicUpdateInfoReq::_internal_set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serverid_ = value;
}
inline void LogicUpdateInfoReq::set_serverid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.ServerID)
}

// string ServerName = 2;
inline void LogicUpdateInfoReq::clear_servername() {
  servername_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& LogicUpdateInfoReq::servername() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.ServerName)
  return _internal_servername();
}
inline void LogicUpdateInfoReq::set_servername(const std::string& value) {
  _internal_set_servername(value);
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.ServerName)
}
inline std::string* LogicUpdateInfoReq::mutable_servername() {
  // @@protoc_insertion_point(field_mutable:LogicUpdateInfoReq.ServerName)
  return _internal_mutable_servername();
}
inline const std::string& LogicUpdateInfoReq::_internal_servername() const {
  return servername_.Get();
}
inline void LogicUpdateInfoReq::_internal_set_servername(const std::string& value) {
  
  servername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void LogicUpdateInfoReq::set_servername(std::string&& value) {
  
  servername_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:LogicUpdateInfoReq.ServerName)
}
inline void LogicUpdateInfoReq::set_servername(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  servername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:LogicUpdateInfoReq.ServerName)
}
inline void LogicUpdateInfoReq::set_servername(const char* value,
    size_t size) {
  
  servername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:LogicUpdateInfoReq.ServerName)
}
inline std::string* LogicUpdateInfoReq::_internal_mutable_servername() {
  
  return servername_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* LogicUpdateInfoReq::release_servername() {
  // @@protoc_insertion_point(field_release:LogicUpdateInfoReq.ServerName)
  return servername_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void LogicUpdateInfoReq::set_allocated_servername(std::string* servername) {
  if (servername != nullptr) {
    
  } else {
    
  }
  servername_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), servername,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:LogicUpdateInfoReq.ServerName)
}
inline std::string* LogicUpdateInfoReq::unsafe_arena_release_servername() {
  // @@protoc_insertion_point(field_unsafe_arena_release:LogicUpdateInfoReq.ServerName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return servername_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void LogicUpdateInfoReq::unsafe_arena_set_allocated_servername(
    std::string* servername) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (servername != nullptr) {
    
  } else {
    
  }
  servername_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      servername, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:LogicUpdateInfoReq.ServerName)
}

// int32 MaxOnline = 3;
inline void LogicUpdateInfoReq::clear_maxonline() {
  maxonline_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::_internal_maxonline() const {
  return maxonline_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::maxonline() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.MaxOnline)
  return _internal_maxonline();
}
inline void LogicUpdateInfoReq::_internal_set_maxonline(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  maxonline_ = value;
}
inline void LogicUpdateInfoReq::set_maxonline(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_maxonline(value);
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.MaxOnline)
}

// int32 CurOnline = 4;
inline void LogicUpdateInfoReq::clear_curonline() {
  curonline_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::_internal_curonline() const {
  return curonline_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::curonline() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.CurOnline)
  return _internal_curonline();
}
inline void LogicUpdateInfoReq::_internal_set_curonline(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  curonline_ = value;
}
inline void LogicUpdateInfoReq::set_curonline(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_curonline(value);
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.CurOnline)
}

// int32 TotalNum = 5;
inline void LogicUpdateInfoReq::clear_totalnum() {
  totalnum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::_internal_totalnum() const {
  return totalnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::totalnum() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.TotalNum)
  return _internal_totalnum();
}
inline void LogicUpdateInfoReq::_internal_set_totalnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  totalnum_ = value;
}
inline void LogicUpdateInfoReq::set_totalnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_totalnum(value);
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.TotalNum)
}

// int32 CacheNum = 6;
inline void LogicUpdateInfoReq::clear_cachenum() {
  cachenum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::_internal_cachenum() const {
  return cachenum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::cachenum() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.CacheNum)
  return _internal_cachenum();
}
inline void LogicUpdateInfoReq::_internal_set_cachenum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cachenum_ = value;
}
inline void LogicUpdateInfoReq::set_cachenum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cachenum(value);
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.CacheNum)
}

// int32 Status = 7;
inline void LogicUpdateInfoReq::clear_status() {
  status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::_internal_status() const {
  return status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::status() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.Status)
  return _internal_status();
}
inline void LogicUpdateInfoReq::_internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  status_ = value;
}
inline void LogicUpdateInfoReq::set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.Status)
}

// int32 DbErrCnt = 8;
inline void LogicUpdateInfoReq::clear_dberrcnt() {
  dberrcnt_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::_internal_dberrcnt() const {
  return dberrcnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LogicUpdateInfoReq::dberrcnt() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.DbErrCnt)
  return _internal_dberrcnt();
}
inline void LogicUpdateInfoReq::_internal_set_dberrcnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  dberrcnt_ = value;
}
inline void LogicUpdateInfoReq::set_dberrcnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dberrcnt(value);
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.DbErrCnt)
}

// -------------------------------------------------------------------

// LogicUpdateInfoAck

// uint32 RetCode = 1;
inline void LogicUpdateInfoAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogicUpdateInfoAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LogicUpdateInfoAck::retcode() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoAck.RetCode)
  return _internal_retcode();
}
inline void LogicUpdateInfoAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void LogicUpdateInfoAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:LogicUpdateInfoAck.RetCode)
}

// uint64 SvrOpenTime = 2;
inline void LogicUpdateInfoAck::clear_svropentime() {
  svropentime_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LogicUpdateInfoAck::_internal_svropentime() const {
  return svropentime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LogicUpdateInfoAck::svropentime() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoAck.SvrOpenTime)
  return _internal_svropentime();
}
inline void LogicUpdateInfoAck::_internal_set_svropentime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  svropentime_ = value;
}
inline void LogicUpdateInfoAck::set_svropentime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_svropentime(value);
  // @@protoc_insertion_point(field_set:LogicUpdateInfoAck.SvrOpenTime)
}

// -------------------------------------------------------------------

// SetupEquipReq

// uint64 EquipGuid = 1;
inline void SetupEquipReq::clear_equipguid() {
  equipguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupEquipReq::_internal_equipguid() const {
  return equipguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupEquipReq::equipguid() const {
  // @@protoc_insertion_point(field_get:SetupEquipReq.EquipGuid)
  return _internal_equipguid();
}
inline void SetupEquipReq::_internal_set_equipguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  equipguid_ = value;
}
inline void SetupEquipReq::set_equipguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_equipguid(value);
  // @@protoc_insertion_point(field_set:SetupEquipReq.EquipGuid)
}

// uint64 BagGuid = 2;
inline void SetupEquipReq::clear_bagguid() {
  bagguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupEquipReq::_internal_bagguid() const {
  return bagguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupEquipReq::bagguid() const {
  // @@protoc_insertion_point(field_get:SetupEquipReq.BagGuid)
  return _internal_bagguid();
}
inline void SetupEquipReq::_internal_set_bagguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  bagguid_ = value;
}
inline void SetupEquipReq::set_bagguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_bagguid(value);
  // @@protoc_insertion_point(field_set:SetupEquipReq.BagGuid)
}

// -------------------------------------------------------------------

// SetupEquipAck

// uint32 RetCode = 1;
inline void SetupEquipAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetupEquipAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetupEquipAck::retcode() const {
  // @@protoc_insertion_point(field_get:SetupEquipAck.RetCode)
  return _internal_retcode();
}
inline void SetupEquipAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void SetupEquipAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:SetupEquipAck.RetCode)
}

// -------------------------------------------------------------------

// Msg_GiftCodeReq

// uint64 RoleID = 1;
inline void Msg_GiftCodeReq::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_GiftCodeReq::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_GiftCodeReq::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_GiftCodeReq.RoleID)
  return _internal_roleid();
}
inline void Msg_GiftCodeReq::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void Msg_GiftCodeReq::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:Msg_GiftCodeReq.RoleID)
}

// string GiftCode = 2;
inline void Msg_GiftCodeReq::clear_giftcode() {
  giftcode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& Msg_GiftCodeReq::giftcode() const {
  // @@protoc_insertion_point(field_get:Msg_GiftCodeReq.GiftCode)
  return _internal_giftcode();
}
inline void Msg_GiftCodeReq::set_giftcode(const std::string& value) {
  _internal_set_giftcode(value);
  // @@protoc_insertion_point(field_set:Msg_GiftCodeReq.GiftCode)
}
inline std::string* Msg_GiftCodeReq::mutable_giftcode() {
  // @@protoc_insertion_point(field_mutable:Msg_GiftCodeReq.GiftCode)
  return _internal_mutable_giftcode();
}
inline const std::string& Msg_GiftCodeReq::_internal_giftcode() const {
  return giftcode_.Get();
}
inline void Msg_GiftCodeReq::_internal_set_giftcode(const std::string& value) {
  
  giftcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void Msg_GiftCodeReq::set_giftcode(std::string&& value) {
  
  giftcode_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Msg_GiftCodeReq.GiftCode)
}
inline void Msg_GiftCodeReq::set_giftcode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  giftcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:Msg_GiftCodeReq.GiftCode)
}
inline void Msg_GiftCodeReq::set_giftcode(const char* value,
    size_t size) {
  
  giftcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Msg_GiftCodeReq.GiftCode)
}
inline std::string* Msg_GiftCodeReq::_internal_mutable_giftcode() {
  
  return giftcode_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* Msg_GiftCodeReq::release_giftcode() {
  // @@protoc_insertion_point(field_release:Msg_GiftCodeReq.GiftCode)
  return giftcode_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Msg_GiftCodeReq::set_allocated_giftcode(std::string* giftcode) {
  if (giftcode != nullptr) {
    
  } else {
    
  }
  giftcode_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), giftcode,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Msg_GiftCodeReq.GiftCode)
}
inline std::string* Msg_GiftCodeReq::unsafe_arena_release_giftcode() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Msg_GiftCodeReq.GiftCode)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return giftcode_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void Msg_GiftCodeReq::unsafe_arena_set_allocated_giftcode(
    std::string* giftcode) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (giftcode != nullptr) {
    
  } else {
    
  }
  giftcode_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      giftcode, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Msg_GiftCodeReq.GiftCode)
}

// uint32 Channel = 3;
inline void Msg_GiftCodeReq::clear_channel() {
  channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_GiftCodeReq::_internal_channel() const {
  return channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_GiftCodeReq::channel() const {
  // @@protoc_insertion_point(field_get:Msg_GiftCodeReq.Channel)
  return _internal_channel();
}
inline void Msg_GiftCodeReq::_internal_set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_ = value;
}
inline void Msg_GiftCodeReq::set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:Msg_GiftCodeReq.Channel)
}

// uint64 AccountID = 4;
inline void Msg_GiftCodeReq::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_GiftCodeReq::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_GiftCodeReq::accountid() const {
  // @@protoc_insertion_point(field_get:Msg_GiftCodeReq.AccountID)
  return _internal_accountid();
}
inline void Msg_GiftCodeReq::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void Msg_GiftCodeReq::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:Msg_GiftCodeReq.AccountID)
}

// int32 AreaID = 5;
inline void Msg_GiftCodeReq::clear_areaid() {
  areaid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg_GiftCodeReq::_internal_areaid() const {
  return areaid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg_GiftCodeReq::areaid() const {
  // @@protoc_insertion_point(field_get:Msg_GiftCodeReq.AreaID)
  return _internal_areaid();
}
inline void Msg_GiftCodeReq::_internal_set_areaid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  areaid_ = value;
}
inline void Msg_GiftCodeReq::set_areaid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_areaid(value);
  // @@protoc_insertion_point(field_set:Msg_GiftCodeReq.AreaID)
}

// -------------------------------------------------------------------

// Msg_GiftCodeAck

// uint32 RetCode = 1;
inline void Msg_GiftCodeAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_GiftCodeAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_GiftCodeAck::retcode() const {
  // @@protoc_insertion_point(field_get:Msg_GiftCodeAck.RetCode)
  return _internal_retcode();
}
inline void Msg_GiftCodeAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void Msg_GiftCodeAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:Msg_GiftCodeAck.RetCode)
}

// uint64 RoleID = 2;
inline void Msg_GiftCodeAck::clear_roleid() {
  roleid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_GiftCodeAck::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg_GiftCodeAck::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_GiftCodeAck.RoleID)
  return _internal_roleid();
}
inline void Msg_GiftCodeAck::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roleid_ = value;
}
inline void Msg_GiftCodeAck::set_roleid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:Msg_GiftCodeAck.RoleID)
}

// repeated .ItemData items = 3;
inline int Msg_GiftCodeAck::_internal_items_size() const {
  return items_.size();
}
inline int Msg_GiftCodeAck::items_size() const {
  return _internal_items_size();
}
inline ::ItemData* Msg_GiftCodeAck::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Msg_GiftCodeAck.items)
  return items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ItemData >*
Msg_GiftCodeAck::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Msg_GiftCodeAck.items)
  return &items_;
}
inline const ::ItemData& Msg_GiftCodeAck::_internal_items(int index) const {
  return items_.Get(index);
}
inline const ::ItemData& Msg_GiftCodeAck::items(int index) const {
  // @@protoc_insertion_point(field_get:Msg_GiftCodeAck.items)
  return _internal_items(index);
}
inline ::ItemData* Msg_GiftCodeAck::_internal_add_items() {
  return items_.Add();
}
inline ::ItemData* Msg_GiftCodeAck::add_items() {
  // @@protoc_insertion_point(field_add:Msg_GiftCodeAck.items)
  return _internal_add_items();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ItemData >&
Msg_GiftCodeAck::items() const {
  // @@protoc_insertion_point(field_list:Msg_GiftCodeAck.items)
  return items_;
}

// -------------------------------------------------------------------

// UnsetEquipReq

// uint64 EquipGuid = 1;
inline void UnsetEquipReq::clear_equipguid() {
  equipguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsetEquipReq::_internal_equipguid() const {
  return equipguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsetEquipReq::equipguid() const {
  // @@protoc_insertion_point(field_get:UnsetEquipReq.EquipGuid)
  return _internal_equipguid();
}
inline void UnsetEquipReq::_internal_set_equipguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  equipguid_ = value;
}
inline void UnsetEquipReq::set_equipguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_equipguid(value);
  // @@protoc_insertion_point(field_set:UnsetEquipReq.EquipGuid)
}

// -------------------------------------------------------------------

// UnsetEquipAck

// uint32 RetCode = 1;
inline void UnsetEquipAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnsetEquipAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnsetEquipAck::retcode() const {
  // @@protoc_insertion_point(field_get:UnsetEquipAck.RetCode)
  return _internal_retcode();
}
inline void UnsetEquipAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void UnsetEquipAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:UnsetEquipAck.RetCode)
}

// -------------------------------------------------------------------

// SetupGemReq

// uint64 GemGuid = 1;
inline void SetupGemReq::clear_gemguid() {
  gemguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupGemReq::_internal_gemguid() const {
  return gemguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupGemReq::gemguid() const {
  // @@protoc_insertion_point(field_get:SetupGemReq.GemGuid)
  return _internal_gemguid();
}
inline void SetupGemReq::_internal_set_gemguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  gemguid_ = value;
}
inline void SetupGemReq::set_gemguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gemguid(value);
  // @@protoc_insertion_point(field_set:SetupGemReq.GemGuid)
}

// uint64 BagGuid = 2;
inline void SetupGemReq::clear_bagguid() {
  bagguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupGemReq::_internal_bagguid() const {
  return bagguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupGemReq::bagguid() const {
  // @@protoc_insertion_point(field_get:SetupGemReq.BagGuid)
  return _internal_bagguid();
}
inline void SetupGemReq::_internal_set_bagguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  bagguid_ = value;
}
inline void SetupGemReq::set_bagguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_bagguid(value);
  // @@protoc_insertion_point(field_set:SetupGemReq.BagGuid)
}

// int32 TargetPos = 3;
inline void SetupGemReq::clear_targetpos() {
  targetpos_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SetupGemReq::_internal_targetpos() const {
  return targetpos_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SetupGemReq::targetpos() const {
  // @@protoc_insertion_point(field_get:SetupGemReq.TargetPos)
  return _internal_targetpos();
}
inline void SetupGemReq::_internal_set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  targetpos_ = value;
}
inline void SetupGemReq::set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_targetpos(value);
  // @@protoc_insertion_point(field_set:SetupGemReq.TargetPos)
}

// -------------------------------------------------------------------

// SetupGemAck

// uint32 RetCode = 1;
inline void SetupGemAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetupGemAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetupGemAck::retcode() const {
  // @@protoc_insertion_point(field_get:SetupGemAck.RetCode)
  return _internal_retcode();
}
inline void SetupGemAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void SetupGemAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:SetupGemAck.RetCode)
}

// -------------------------------------------------------------------

// UnsetGemReq

// uint64 GemGuid = 1;
inline void UnsetGemReq::clear_gemguid() {
  gemguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsetGemReq::_internal_gemguid() const {
  return gemguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsetGemReq::gemguid() const {
  // @@protoc_insertion_point(field_get:UnsetGemReq.GemGuid)
  return _internal_gemguid();
}
inline void UnsetGemReq::_internal_set_gemguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  gemguid_ = value;
}
inline void UnsetGemReq::set_gemguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gemguid(value);
  // @@protoc_insertion_point(field_set:UnsetGemReq.GemGuid)
}

// -------------------------------------------------------------------

// UnsetGemAck

// uint32 RetCode = 1;
inline void UnsetGemAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnsetGemAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnsetGemAck::retcode() const {
  // @@protoc_insertion_point(field_get:UnsetGemAck.RetCode)
  return _internal_retcode();
}
inline void UnsetGemAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void UnsetGemAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:UnsetGemAck.RetCode)
}

// -------------------------------------------------------------------

// SetupPartnerReq

// uint64 PartnerGuid = 1;
inline void SetupPartnerReq::clear_partnerguid() {
  partnerguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupPartnerReq::_internal_partnerguid() const {
  return partnerguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupPartnerReq::partnerguid() const {
  // @@protoc_insertion_point(field_get:SetupPartnerReq.PartnerGuid)
  return _internal_partnerguid();
}
inline void SetupPartnerReq::_internal_set_partnerguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  partnerguid_ = value;
}
inline void SetupPartnerReq::set_partnerguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_partnerguid(value);
  // @@protoc_insertion_point(field_set:SetupPartnerReq.PartnerGuid)
}

// int32 TargetPos = 2;
inline void SetupPartnerReq::clear_targetpos() {
  targetpos_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SetupPartnerReq::_internal_targetpos() const {
  return targetpos_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SetupPartnerReq::targetpos() const {
  // @@protoc_insertion_point(field_get:SetupPartnerReq.TargetPos)
  return _internal_targetpos();
}
inline void SetupPartnerReq::_internal_set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  targetpos_ = value;
}
inline void SetupPartnerReq::set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_targetpos(value);
  // @@protoc_insertion_point(field_set:SetupPartnerReq.TargetPos)
}

// -------------------------------------------------------------------

// SetupPartnerAck

// uint32 RetCode = 1;
inline void SetupPartnerAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetupPartnerAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetupPartnerAck::retcode() const {
  // @@protoc_insertion_point(field_get:SetupPartnerAck.RetCode)
  return _internal_retcode();
}
inline void SetupPartnerAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void SetupPartnerAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:SetupPartnerAck.RetCode)
}

// -------------------------------------------------------------------

// UnsetPartnerReq

// int32 TargetPos = 1;
inline void UnsetPartnerReq::clear_targetpos() {
  targetpos_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnsetPartnerReq::_internal_targetpos() const {
  return targetpos_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UnsetPartnerReq::targetpos() const {
  // @@protoc_insertion_point(field_get:UnsetPartnerReq.TargetPos)
  return _internal_targetpos();
}
inline void UnsetPartnerReq::_internal_set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  targetpos_ = value;
}
inline void UnsetPartnerReq::set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_targetpos(value);
  // @@protoc_insertion_point(field_set:UnsetPartnerReq.TargetPos)
}

// -------------------------------------------------------------------

// UnsetPartnerAck

// uint32 RetCode = 1;
inline void UnsetPartnerAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnsetPartnerAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnsetPartnerAck::retcode() const {
  // @@protoc_insertion_point(field_get:UnsetPartnerAck.RetCode)
  return _internal_retcode();
}
inline void UnsetPartnerAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void UnsetPartnerAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:UnsetPartnerAck.RetCode)
}

// -------------------------------------------------------------------

// SetupMountReq

// uint64 MountGuid = 1;
inline void SetupMountReq::clear_mountguid() {
  mountguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupMountReq::_internal_mountguid() const {
  return mountguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupMountReq::mountguid() const {
  // @@protoc_insertion_point(field_get:SetupMountReq.MountGuid)
  return _internal_mountguid();
}
inline void SetupMountReq::_internal_set_mountguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  mountguid_ = value;
}
inline void SetupMountReq::set_mountguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mountguid(value);
  // @@protoc_insertion_point(field_set:SetupMountReq.MountGuid)
}

// int32 TargetPos = 2;
inline void SetupMountReq::clear_targetpos() {
  targetpos_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SetupMountReq::_internal_targetpos() const {
  return targetpos_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SetupMountReq::targetpos() const {
  // @@protoc_insertion_point(field_get:SetupMountReq.TargetPos)
  return _internal_targetpos();
}
inline void SetupMountReq::_internal_set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  targetpos_ = value;
}
inline void SetupMountReq::set_targetpos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_targetpos(value);
  // @@protoc_insertion_point(field_set:SetupMountReq.TargetPos)
}

// -------------------------------------------------------------------

// SetupMountAck

// uint32 RetCode = 1;
inline void SetupMountAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetupMountAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetupMountAck::retcode() const {
  // @@protoc_insertion_point(field_get:SetupMountAck.RetCode)
  return _internal_retcode();
}
inline void SetupMountAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void SetupMountAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:SetupMountAck.RetCode)
}

// -------------------------------------------------------------------

// UnsetMountReq

// uint64 MountGuid = 1;
inline void UnsetMountReq::clear_mountguid() {
  mountguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsetMountReq::_internal_mountguid() const {
  return mountguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsetMountReq::mountguid() const {
  // @@protoc_insertion_point(field_get:UnsetMountReq.MountGuid)
  return _internal_mountguid();
}
inline void UnsetMountReq::_internal_set_mountguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  mountguid_ = value;
}
inline void UnsetMountReq::set_mountguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mountguid(value);
  // @@protoc_insertion_point(field_set:UnsetMountReq.MountGuid)
}

// -------------------------------------------------------------------

// UnsetMountAck

// uint32 RetCode = 1;
inline void UnsetMountAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnsetMountAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnsetMountAck::retcode() const {
  // @@protoc_insertion_point(field_get:UnsetMountAck.RetCode)
  return _internal_retcode();
}
inline void UnsetMountAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void UnsetMountAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:UnsetMountAck.RetCode)
}

// -------------------------------------------------------------------

// SetupPetReq

// uint64 PetGuid = 1;
inline void SetupPetReq::clear_petguid() {
  petguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupPetReq::_internal_petguid() const {
  return petguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SetupPetReq::petguid() const {
  // @@protoc_insertion_point(field_get:SetupPetReq.PetGuid)
  return _internal_petguid();
}
inline void SetupPetReq::_internal_set_petguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  petguid_ = value;
}
inline void SetupPetReq::set_petguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_petguid(value);
  // @@protoc_insertion_point(field_set:SetupPetReq.PetGuid)
}

// -------------------------------------------------------------------

// SetupPetAck

// uint32 RetCode = 1;
inline void SetupPetAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetupPetAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SetupPetAck::retcode() const {
  // @@protoc_insertion_point(field_get:SetupPetAck.RetCode)
  return _internal_retcode();
}
inline void SetupPetAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void SetupPetAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:SetupPetAck.RetCode)
}

// -------------------------------------------------------------------

// UnsetPetReq

// uint64 PetGuid = 1;
inline void UnsetPetReq::clear_petguid() {
  petguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsetPetReq::_internal_petguid() const {
  return petguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnsetPetReq::petguid() const {
  // @@protoc_insertion_point(field_get:UnsetPetReq.PetGuid)
  return _internal_petguid();
}
inline void UnsetPetReq::_internal_set_petguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  petguid_ = value;
}
inline void UnsetPetReq::set_petguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_petguid(value);
  // @@protoc_insertion_point(field_set:UnsetPetReq.PetGuid)
}

// -------------------------------------------------------------------

// UnsetPetAck

// uint32 RetCode = 1;
inline void UnsetPetAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnsetPetAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnsetPetAck::retcode() const {
  // @@protoc_insertion_point(field_get:UnsetPetAck.RetCode)
  return _internal_retcode();
}
inline void UnsetPetAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void UnsetPetAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:UnsetPetAck.RetCode)
}

// -------------------------------------------------------------------

// StoreBuyReq

// int32 StoreType = 1;
inline void StoreBuyReq::clear_storetype() {
  storetype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StoreBuyReq::_internal_storetype() const {
  return storetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StoreBuyReq::storetype() const {
  // @@protoc_insertion_point(field_get:StoreBuyReq.StoreType)
  return _internal_storetype();
}
inline void StoreBuyReq::_internal_set_storetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  storetype_ = value;
}
inline void StoreBuyReq::set_storetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_storetype(value);
  // @@protoc_insertion_point(field_set:StoreBuyReq.StoreType)
}

// int32 StoreID = 2;
inline void StoreBuyReq::clear_storeid() {
  storeid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StoreBuyReq::_internal_storeid() const {
  return storeid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StoreBuyReq::storeid() const {
  // @@protoc_insertion_point(field_get:StoreBuyReq.StoreID)
  return _internal_storeid();
}
inline void StoreBuyReq::_internal_set_storeid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  storeid_ = value;
}
inline void StoreBuyReq::set_storeid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_storeid(value);
  // @@protoc_insertion_point(field_set:StoreBuyReq.StoreID)
}

// int32 BuyNum = 3;
inline void StoreBuyReq::clear_buynum() {
  buynum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StoreBuyReq::_internal_buynum() const {
  return buynum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StoreBuyReq::buynum() const {
  // @@protoc_insertion_point(field_get:StoreBuyReq.BuyNum)
  return _internal_buynum();
}
inline void StoreBuyReq::_internal_set_buynum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  buynum_ = value;
}
inline void StoreBuyReq::set_buynum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_buynum(value);
  // @@protoc_insertion_point(field_set:StoreBuyReq.BuyNum)
}

// -------------------------------------------------------------------

// StoreBuyAck

// uint32 RetCode = 1;
inline void StoreBuyAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StoreBuyAck::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StoreBuyAck::retcode() const {
  // @@protoc_insertion_point(field_get:StoreBuyAck.RetCode)
  return _internal_retcode();
}
inline void StoreBuyAck::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  retcode_ = value;
}
inline void StoreBuyAck::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:StoreBuyAck.RetCode)
}

// -------------------------------------------------------------------

// ObjectChangeNotify

// int64 RoleID = 1;
inline void ObjectChangeNotify::clear_roleid() {
  roleid_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ObjectChangeNotify::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ObjectChangeNotify::roleid() const {
  // @@protoc_insertion_point(field_get:ObjectChangeNotify.RoleID)
  return _internal_roleid();
}
inline void ObjectChangeNotify::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  roleid_ = value;
}
inline void ObjectChangeNotify::set_roleid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:ObjectChangeNotify.RoleID)
}

// int32 ChangeType = 2;
inline void ObjectChangeNotify::clear_changetype() {
  changetype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectChangeNotify::_internal_changetype() const {
  return changetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectChangeNotify::changetype() const {
  // @@protoc_insertion_point(field_get:ObjectChangeNotify.ChangeType)
  return _internal_changetype();
}
inline void ObjectChangeNotify::_internal_set_changetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  changetype_ = value;
}
inline void ObjectChangeNotify::set_changetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_changetype(value);
  // @@protoc_insertion_point(field_set:ObjectChangeNotify.ChangeType)
}

// int64 IntValue1 = 3;
inline void ObjectChangeNotify::clear_intvalue1() {
  intvalue1_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ObjectChangeNotify::_internal_intvalue1() const {
  return intvalue1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ObjectChangeNotify::intvalue1() const {
  // @@protoc_insertion_point(field_get:ObjectChangeNotify.IntValue1)
  return _internal_intvalue1();
}
inline void ObjectChangeNotify::_internal_set_intvalue1(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  intvalue1_ = value;
}
inline void ObjectChangeNotify::set_intvalue1(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_intvalue1(value);
  // @@protoc_insertion_point(field_set:ObjectChangeNotify.IntValue1)
}

// int64 IntValue2 = 4;
inline void ObjectChangeNotify::clear_intvalue2() {
  intvalue2_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ObjectChangeNotify::_internal_intvalue2() const {
  return intvalue2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ObjectChangeNotify::intvalue2() const {
  // @@protoc_insertion_point(field_get:ObjectChangeNotify.IntValue2)
  return _internal_intvalue2();
}
inline void ObjectChangeNotify::_internal_set_intvalue2(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  intvalue2_ = value;
}
inline void ObjectChangeNotify::set_intvalue2(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_intvalue2(value);
  // @@protoc_insertion_point(field_set:ObjectChangeNotify.IntValue2)
}

// string StrValue = 5;
inline void ObjectChangeNotify::clear_strvalue() {
  strvalue_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ObjectChangeNotify::strvalue() const {
  // @@protoc_insertion_point(field_get:ObjectChangeNotify.StrValue)
  return _internal_strvalue();
}
inline void ObjectChangeNotify::set_strvalue(const std::string& value) {
  _internal_set_strvalue(value);
  // @@protoc_insertion_point(field_set:ObjectChangeNotify.StrValue)
}
inline std::string* ObjectChangeNotify::mutable_strvalue() {
  // @@protoc_insertion_point(field_mutable:ObjectChangeNotify.StrValue)
  return _internal_mutable_strvalue();
}
inline const std::string& ObjectChangeNotify::_internal_strvalue() const {
  return strvalue_.Get();
}
inline void ObjectChangeNotify::_internal_set_strvalue(const std::string& value) {
  
  strvalue_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ObjectChangeNotify::set_strvalue(std::string&& value) {
  
  strvalue_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ObjectChangeNotify.StrValue)
}
inline void ObjectChangeNotify::set_strvalue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  strvalue_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ObjectChangeNotify.StrValue)
}
inline void ObjectChangeNotify::set_strvalue(const char* value,
    size_t size) {
  
  strvalue_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ObjectChangeNotify.StrValue)
}
inline std::string* ObjectChangeNotify::_internal_mutable_strvalue() {
  
  return strvalue_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ObjectChangeNotify::release_strvalue() {
  // @@protoc_insertion_point(field_release:ObjectChangeNotify.StrValue)
  return strvalue_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ObjectChangeNotify::set_allocated_strvalue(std::string* strvalue) {
  if (strvalue != nullptr) {
    
  } else {
    
  }
  strvalue_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strvalue,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ObjectChangeNotify.StrValue)
}
inline std::string* ObjectChangeNotify::unsafe_arena_release_strvalue() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ObjectChangeNotify.StrValue)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return strvalue_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ObjectChangeNotify::unsafe_arena_set_allocated_strvalue(
    std::string* strvalue) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strvalue != nullptr) {
    
  } else {
    
  }
  strvalue_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strvalue, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ObjectChangeNotify.StrValue)
}

// -------------------------------------------------------------------

// HitEffectItem

// uint64 CastGuid = 1;
inline void HitEffectItem::clear_castguid() {
  castguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HitEffectItem::_internal_castguid() const {
  return castguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HitEffectItem::castguid() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.CastGuid)
  return _internal_castguid();
}
inline void HitEffectItem::_internal_set_castguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  castguid_ = value;
}
inline void HitEffectItem::set_castguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_castguid(value);
  // @@protoc_insertion_point(field_set:HitEffectItem.CastGuid)
}

// uint64 TargetGuid = 2;
inline void HitEffectItem::clear_targetguid() {
  targetguid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HitEffectItem::_internal_targetguid() const {
  return targetguid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HitEffectItem::targetguid() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.TargetGuid)
  return _internal_targetguid();
}
inline void HitEffectItem::_internal_set_targetguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  targetguid_ = value;
}
inline void HitEffectItem::set_targetguid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_targetguid(value);
  // @@protoc_insertion_point(field_set:HitEffectItem.TargetGuid)
}

// int32 HurtValue = 3;
inline void HitEffectItem::clear_hurtvalue() {
  hurtvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HitEffectItem::_internal_hurtvalue() const {
  return hurtvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HitEffectItem::hurtvalue() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.HurtValue)
  return _internal_hurtvalue();
}
inline void HitEffectItem::_internal_set_hurtvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  hurtvalue_ = value;
}
inline void HitEffectItem::set_hurtvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hurtvalue(value);
  // @@protoc_insertion_point(field_set:HitEffectItem.HurtValue)
}

// bool Crit = 4;
inline void HitEffectItem::clear_crit() {
  crit_ = false;
}
inline bool HitEffectItem::_internal_crit() const {
  return crit_;
}
inline bool HitEffectItem::crit() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.Crit)
  return _internal_crit();
}
inline void HitEffectItem::_internal_set_crit(bool value) {
  
  crit_ = value;
}
inline void HitEffectItem::set_crit(bool value) {
  _internal_set_crit(value);
  // @@protoc_insertion_point(field_set:HitEffectItem.Crit)
}

// uint32 HitActionID = 5;
inline void HitEffectItem::clear_hitactionid() {
  hitactionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HitEffectItem::_internal_hitactionid() const {
  return hitactionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HitEffectItem::hitactionid() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.HitActionID)
  return _internal_hitactionid();
}
inline void HitEffectItem::_internal_set_hitactionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  hitactionid_ = value;
}
inline void HitEffectItem::set_hitactionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hitactionid(value);
  // @@protoc_insertion_point(field_set:HitEffectItem.HitActionID)
}

// uint32 HitEffectID = 6;
inline void HitEffectItem::clear_hiteffectid() {
  hiteffectid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HitEffectItem::_internal_hiteffectid() const {
  return hiteffectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HitEffectItem::hiteffectid() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.HitEffectID)
  return _internal_hiteffectid();
}
inline void HitEffectItem::_internal_set_hiteffectid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  hiteffectid_ = value;
}
inline void HitEffectItem::set_hiteffectid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hiteffectid(value);
  // @@protoc_insertion_point(field_set:HitEffectItem.HitEffectID)
}

// float HitDistance = 7;
inline void HitEffectItem::clear_hitdistance() {
  hitdistance_ = 0;
}
inline float HitEffectItem::_internal_hitdistance() const {
  return hitdistance_;
}
inline float HitEffectItem::hitdistance() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.HitDistance)
  return _internal_hitdistance();
}
inline void HitEffectItem::_internal_set_hitdistance(float value) {
  
  hitdistance_ = value;
}
inline void HitEffectItem::set_hitdistance(float value) {
  _internal_set_hitdistance(value);
  // @@protoc_insertion_point(field_set:HitEffectItem.HitDistance)
}

// -------------------------------------------------------------------

// HitEffectNtf

// repeated .HitEffectItem ItemList = 1;
inline int HitEffectNtf::_internal_itemlist_size() const {
  return itemlist_.size();
}
inline int HitEffectNtf::itemlist_size() const {
  return _internal_itemlist_size();
}
inline void HitEffectNtf::clear_itemlist() {
  itemlist_.Clear();
}
inline ::HitEffectItem* HitEffectNtf::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:HitEffectNtf.ItemList)
  return itemlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HitEffectItem >*
HitEffectNtf::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:HitEffectNtf.ItemList)
  return &itemlist_;
}
inline const ::HitEffectItem& HitEffectNtf::_internal_itemlist(int index) const {
  return itemlist_.Get(index);
}
inline const ::HitEffectItem& HitEffectNtf::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:HitEffectNtf.ItemList)
  return _internal_itemlist(index);
}
inline ::HitEffectItem* HitEffectNtf::_internal_add_itemlist() {
  return itemlist_.Add();
}
inline ::HitEffectItem* HitEffectNtf::add_itemlist() {
  // @@protoc_insertion_point(field_add:HitEffectNtf.ItemList)
  return _internal_add_itemlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HitEffectItem >&
HitEffectNtf::itemlist() const {
  // @@protoc_insertion_point(field_list:HitEffectNtf.ItemList)
  return itemlist_;
}

// -------------------------------------------------------------------

// UseItemReq

// -------------------------------------------------------------------

// UseItemAck

// -------------------------------------------------------------------

// MsgGetRandomNameReq

// int32 Sex = 1;
inline void MsgGetRandomNameReq::clear_sex() {
  sex_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGetRandomNameReq::_internal_sex() const {
  return sex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGetRandomNameReq::sex() const {
  // @@protoc_insertion_point(field_get:MsgGetRandomNameReq.Sex)
  return _internal_sex();
}
inline void MsgGetRandomNameReq::_internal_set_sex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sex_ = value;
}
inline void MsgGetRandomNameReq::set_sex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sex(value);
  // @@protoc_insertion_point(field_set:MsgGetRandomNameReq.Sex)
}

// -------------------------------------------------------------------

// MsgGetRandomNameAck

// string Name = 1;
inline void MsgGetRandomNameAck::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& MsgGetRandomNameAck::name() const {
  // @@protoc_insertion_point(field_get:MsgGetRandomNameAck.Name)
  return _internal_name();
}
inline void MsgGetRandomNameAck::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:MsgGetRandomNameAck.Name)
}
inline std::string* MsgGetRandomNameAck::mutable_name() {
  // @@protoc_insertion_point(field_mutable:MsgGetRandomNameAck.Name)
  return _internal_mutable_name();
}
inline const std::string& MsgGetRandomNameAck::_internal_name() const {
  return name_.Get();
}
inline void MsgGetRandomNameAck::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void MsgGetRandomNameAck::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgGetRandomNameAck.Name)
}
inline void MsgGetRandomNameAck::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:MsgGetRandomNameAck.Name)
}
inline void MsgGetRandomNameAck::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgGetRandomNameAck.Name)
}
inline std::string* MsgGetRandomNameAck::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* MsgGetRandomNameAck::release_name() {
  // @@protoc_insertion_point(field_release:MsgGetRandomNameAck.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgGetRandomNameAck::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgGetRandomNameAck.Name)
}
inline std::string* MsgGetRandomNameAck::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:MsgGetRandomNameAck.Name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void MsgGetRandomNameAck::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MsgGetRandomNameAck.Name)
}

// -------------------------------------------------------------------

// Msg_DbErrorCountNty

// uint32 ErrorCount = 1;
inline void Msg_DbErrorCountNty::clear_errorcount() {
  errorcount_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_DbErrorCountNty::_internal_errorcount() const {
  return errorcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg_DbErrorCountNty::errorcount() const {
  // @@protoc_insertion_point(field_get:Msg_DbErrorCountNty.ErrorCount)
  return _internal_errorcount();
}
inline void Msg_DbErrorCountNty::_internal_set_errorcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  errorcount_ = value;
}
inline void Msg_DbErrorCountNty::set_errorcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errorcount(value);
  // @@protoc_insertion_point(field_set:Msg_DbErrorCountNty.ErrorCount)
}

// -------------------------------------------------------------------

// Msg_GameParamReq

// int32 Channel = 1;
inline void Msg_GameParamReq::clear_channel() {
  channel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg_GameParamReq::_internal_channel() const {
  return channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg_GameParamReq::channel() const {
  // @@protoc_insertion_point(field_get:Msg_GameParamReq.Channel)
  return _internal_channel();
}
inline void Msg_GameParamReq::_internal_set_channel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  channel_ = value;
}
inline void Msg_GameParamReq::set_channel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:Msg_GameParamReq.Channel)
}

// string ClientVer = 2;
inline void Msg_GameParamReq::clear_clientver() {
  clientver_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& Msg_GameParamReq::clientver() const {
  // @@protoc_insertion_point(field_get:Msg_GameParamReq.ClientVer)
  return _internal_clientver();
}
inline void Msg_GameParamReq::set_clientver(const std::string& value) {
  _internal_set_clientver(value);
  // @@protoc_insertion_point(field_set:Msg_GameParamReq.ClientVer)
}
inline std::string* Msg_GameParamReq::mutable_clientver() {
  // @@protoc_insertion_point(field_mutable:Msg_GameParamReq.ClientVer)
  return _internal_mutable_clientver();
}
inline const std::string& Msg_GameParamReq::_internal_clientver() const {
  return clientver_.Get();
}
inline void Msg_GameParamReq::_internal_set_clientver(const std::string& value) {
  
  clientver_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void Msg_GameParamReq::set_clientver(std::string&& value) {
  
  clientver_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Msg_GameParamReq.ClientVer)
}
inline void Msg_GameParamReq::set_clientver(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  clientver_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:Msg_GameParamReq.ClientVer)
}
inline void Msg_GameParamReq::set_clientver(const char* value,
    size_t size) {
  
  clientver_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Msg_GameParamReq.ClientVer)
}
inline std::string* Msg_GameParamReq::_internal_mutable_clientver() {
  
  return clientver_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* Msg_GameParamReq::release_clientver() {
  // @@protoc_insertion_point(field_release:Msg_GameParamReq.ClientVer)
  return clientver_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Msg_GameParamReq::set_allocated_clientver(std::string* clientver) {
  if (clientver != nullptr) {
    
  } else {
    
  }
  clientver_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), clientver,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Msg_GameParamReq.ClientVer)
}
inline std::string* Msg_GameParamReq::unsafe_arena_release_clientver() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Msg_GameParamReq.ClientVer)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return clientver_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void Msg_GameParamReq::unsafe_arena_set_allocated_clientver(
    std::string* clientver) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (clientver != nullptr) {
    
  } else {
    
  }
  clientver_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      clientver, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Msg_GameParamReq.ClientVer)
}

// -------------------------------------------------------------------

// Msg_GameParamAck

// repeated string ParamKey = 1;
inline int Msg_GameParamAck::_internal_paramkey_size() const {
  return paramkey_.size();
}
inline int Msg_GameParamAck::paramkey_size() const {
  return _internal_paramkey_size();
}
inline void Msg_GameParamAck::clear_paramkey() {
  paramkey_.Clear();
}
inline std::string* Msg_GameParamAck::add_paramkey() {
  // @@protoc_insertion_point(field_add_mutable:Msg_GameParamAck.ParamKey)
  return _internal_add_paramkey();
}
inline const std::string& Msg_GameParamAck::_internal_paramkey(int index) const {
  return paramkey_.Get(index);
}
inline const std::string& Msg_GameParamAck::paramkey(int index) const {
  // @@protoc_insertion_point(field_get:Msg_GameParamAck.ParamKey)
  return _internal_paramkey(index);
}
inline std::string* Msg_GameParamAck::mutable_paramkey(int index) {
  // @@protoc_insertion_point(field_mutable:Msg_GameParamAck.ParamKey)
  return paramkey_.Mutable(index);
}
inline void Msg_GameParamAck::set_paramkey(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:Msg_GameParamAck.ParamKey)
  paramkey_.Mutable(index)->assign(value);
}
inline void Msg_GameParamAck::set_paramkey(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:Msg_GameParamAck.ParamKey)
  paramkey_.Mutable(index)->assign(std::move(value));
}
inline void Msg_GameParamAck::set_paramkey(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  paramkey_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Msg_GameParamAck.ParamKey)
}
inline void Msg_GameParamAck::set_paramkey(int index, const char* value, size_t size) {
  paramkey_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Msg_GameParamAck.ParamKey)
}
inline std::string* Msg_GameParamAck::_internal_add_paramkey() {
  return paramkey_.Add();
}
inline void Msg_GameParamAck::add_paramkey(const std::string& value) {
  paramkey_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Msg_GameParamAck.ParamKey)
}
inline void Msg_GameParamAck::add_paramkey(std::string&& value) {
  paramkey_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Msg_GameParamAck.ParamKey)
}
inline void Msg_GameParamAck::add_paramkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  paramkey_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Msg_GameParamAck.ParamKey)
}
inline void Msg_GameParamAck::add_paramkey(const char* value, size_t size) {
  paramkey_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Msg_GameParamAck.ParamKey)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Msg_GameParamAck::paramkey() const {
  // @@protoc_insertion_point(field_list:Msg_GameParamAck.ParamKey)
  return paramkey_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Msg_GameParamAck::mutable_paramkey() {
  // @@protoc_insertion_point(field_mutable_list:Msg_GameParamAck.ParamKey)
  return &paramkey_;
}

// repeated string ParamValue = 2;
inline int Msg_GameParamAck::_internal_paramvalue_size() const {
  return paramvalue_.size();
}
inline int Msg_GameParamAck::paramvalue_size() const {
  return _internal_paramvalue_size();
}
inline void Msg_GameParamAck::clear_paramvalue() {
  paramvalue_.Clear();
}
inline std::string* Msg_GameParamAck::add_paramvalue() {
  // @@protoc_insertion_point(field_add_mutable:Msg_GameParamAck.ParamValue)
  return _internal_add_paramvalue();
}
inline const std::string& Msg_GameParamAck::_internal_paramvalue(int index) const {
  return paramvalue_.Get(index);
}
inline const std::string& Msg_GameParamAck::paramvalue(int index) const {
  // @@protoc_insertion_point(field_get:Msg_GameParamAck.ParamValue)
  return _internal_paramvalue(index);
}
inline std::string* Msg_GameParamAck::mutable_paramvalue(int index) {
  // @@protoc_insertion_point(field_mutable:Msg_GameParamAck.ParamValue)
  return paramvalue_.Mutable(index);
}
inline void Msg_GameParamAck::set_paramvalue(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:Msg_GameParamAck.ParamValue)
  paramvalue_.Mutable(index)->assign(value);
}
inline void Msg_GameParamAck::set_paramvalue(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:Msg_GameParamAck.ParamValue)
  paramvalue_.Mutable(index)->assign(std::move(value));
}
inline void Msg_GameParamAck::set_paramvalue(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  paramvalue_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Msg_GameParamAck.ParamValue)
}
inline void Msg_GameParamAck::set_paramvalue(int index, const char* value, size_t size) {
  paramvalue_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Msg_GameParamAck.ParamValue)
}
inline std::string* Msg_GameParamAck::_internal_add_paramvalue() {
  return paramvalue_.Add();
}
inline void Msg_GameParamAck::add_paramvalue(const std::string& value) {
  paramvalue_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Msg_GameParamAck.ParamValue)
}
inline void Msg_GameParamAck::add_paramvalue(std::string&& value) {
  paramvalue_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Msg_GameParamAck.ParamValue)
}
inline void Msg_GameParamAck::add_paramvalue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  paramvalue_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Msg_GameParamAck.ParamValue)
}
inline void Msg_GameParamAck::add_paramvalue(const char* value, size_t size) {
  paramvalue_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Msg_GameParamAck.ParamValue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Msg_GameParamAck::paramvalue() const {
  // @@protoc_insertion_point(field_list:Msg_GameParamAck.ParamValue)
  return paramvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Msg_GameParamAck::mutable_paramvalue() {
  // @@protoc_insertion_point(field_mutable_list:Msg_GameParamAck.ParamValue)
  return &paramvalue_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Msg_5fGame_2eproto
